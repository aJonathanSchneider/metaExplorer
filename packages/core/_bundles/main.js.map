{"version":3,"sources":["webpack://metaexplorer-core/webpack/universalModuleDefinition","webpack://metaexplorer-core/webpack/bootstrap","webpack://metaexplorer-core/./src/components/visualcomposition/visualDict.ts","webpack://metaexplorer-core/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://metaexplorer-core/./src/ldaccess/UserDefDict.ts","webpack://metaexplorer-core/./src/ldaccess/LDDict.ts","webpack://metaexplorer-core/./src/components/generic/generatorFns.tsx","webpack://metaexplorer-core/./src/ldaccess/ldBlueprint.ts","webpack://metaexplorer-core/./src/ldaccess/ldUtils.ts","webpack://metaexplorer-core/./src/ldaccess/iitpt-retriever.ts","webpack://metaexplorer-core/./src/components/actions/ActionDict.ts","webpack://metaexplorer-core/./src/ldaccess/ildtoken.ts","webpack://metaexplorer-core/external {\"root\":\"rxjsOperators\",\"commonjs2\":\"rxjs/operators\",\"commonjs\":\"rxjs/operators\",\"amd\":\"rxjs/operators\"}","webpack://metaexplorer-core/./src/approot.tsx","webpack://metaexplorer-core/./src/appstate/LDError.ts","webpack://metaexplorer-core/./src/appstate/epicducks/ldOptions-duck.ts","webpack://metaexplorer-core/./src/appconfig/appItptMatcher.ts","webpack://metaexplorer-core/external {\"root\":\"rxjs\",\"commonjs2\":\"rxjs\",\"commonjs\":\"rxjs\",\"amd\":\"rxjs\"}","webpack://metaexplorer-core/external {\"root\":\"reduxObservable\",\"commonjs2\":\"redux-observable\",\"commonjs\":\"redux-observable\",\"amd\":\"redux-observable\"}","webpack://metaexplorer-core/./src/ldaccess/kvConvenienceFns.ts","webpack://metaexplorer-core/./src/sidefx/SideFXDict.ts","webpack://metaexplorer-core/./src/components/basic-html/text-based-components.tsx","webpack://metaexplorer-core/external {\"root\":\"ReactRouter\",\"commonjs2\":\"react-router\",\"commonjs\":\"react-router\",\"amd\":\"react-router\"}","webpack://metaexplorer-core/./src/appconfig/appItptRetriever.ts","webpack://metaexplorer-core/./src/components/reactUtils/reactUtilFns.ts","webpack://metaexplorer-core/./src/appstate/reduxFns.ts","webpack://metaexplorer-core/./src/sidefx/LDRetrieverSuper-rewrite.ts","webpack://metaexplorer-core/./src/defaults/DefaultItptRetriever.ts","webpack://metaexplorer-core/./src/appstate/epicducks/mod-duck.ts","webpack://metaexplorer-core/./src/datatransformation/abstractDataTransformer.ts","webpack://metaexplorer-core/./src/components/routing/route-helper-fns.ts","webpack://metaexplorer-core/external {\"root\":\"ReactRedux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\",\"amd\":\"react-redux\"}","webpack://metaexplorer-core/./src/ldaccess/ns/nameSpaceMap.ts","webpack://metaexplorer-core/./src/components/generic/baseContainer-rewrite.tsx","webpack://metaexplorer-core/./src/appstate/epicducks/refMap-duck.ts","webpack://metaexplorer-core/./src/appstate/epicducks/linearSplit-duck.ts","webpack://metaexplorer-core/./src/appstate/epicducks/action-duck.ts","webpack://metaexplorer-core/./src/sidefx/nonVisualConnect.ts","webpack://metaexplorer-core/./src/appstate/epicducks/appCfg-duck.ts","webpack://metaexplorer-core/./src/components/reactUtils/compUtilFns.ts","webpack://metaexplorer-core/./src/appstate/store.ts","webpack://metaexplorer-core/./src/appstate/rootduck.ts","webpack://metaexplorer-core/./src/appstate/epicducks/schemameta.ts","webpack://metaexplorer-core/./src/appstate/modstate.ts","webpack://metaexplorer-core/./src/appstate/epicducks/isLoading-duck.ts","webpack://metaexplorer-core/./src/appconfig/retrieverAccessFns.ts","webpack://metaexplorer-core/./src/components/routing/route-component.tsx","webpack://metaexplorer-core/./src/sidefx/ImageRetriever.ts","webpack://metaexplorer-core/./src/sidefx/ProductRetriever.ts","webpack://metaexplorer-core/./src/sidefx/OrganizationRetriever.ts","webpack://metaexplorer-core/./src/components/peripherals/camera/EAN-scanner.tsx","webpack://metaexplorer-core/./src/components/layout/layoutBaseComp.tsx","webpack://metaexplorer-core/./src/components/routing/redirect.tsx","webpack://metaexplorer-core/./src/datatransformation/TwoDtoJSONArray.ts","webpack://metaexplorer-core/./src/datatransformation/JSONArrayToCompactInfoArray.ts","webpack://metaexplorer-core/./src/components/layout/CSSWrapper.tsx","webpack://metaexplorer-core/./src/components/generic/magicBox.tsx","webpack://metaexplorer-core/./src/components/project-config.tsx","webpack://metaexplorer-core/./src/components/actions/ActionComp.ts","webpack://metaexplorer-core/./src/components/actions/ActionHandler.ts","webpack://metaexplorer-core/./src/components/game/singlefield.tsx","webpack://metaexplorer-core/external {\"root\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\",\"amd\":\"redux\"}","webpack://metaexplorer-core/external {\"root\":\"ReactRouterDOM\",\"commonjs2\":\"react-router-dom\",\"commonjs\":\"react-router-dom\",\"amd\":\"react-router-dom\"}","webpack://metaexplorer-core/./src/apis/image-upload.ts","webpack://metaexplorer-core/./src/apis/ldoptions-api.ts","webpack://metaexplorer-core/./src/apis/mod-api.ts","webpack://metaexplorer-core/./src/defaults/DefaultItptMatcher.ts","webpack://metaexplorer-core/./src/ld-react-redux-connect/ReduxItptRetriever.ts","webpack://metaexplorer-core/./src/ldaccess/ObjectPropertyRef.ts","webpack://metaexplorer-core/./src/appstate/epicducks/image-upload.ts","webpack://metaexplorer-core/./src/appstate/epicducks/ldNonVisual-duck.ts","webpack://metaexplorer-core/./src/appstate/reduceReducers.ts","webpack://metaexplorer-core/./src/components/essentials/initEssentialItptRetrieverSetup.ts","webpack://metaexplorer-core/./src/components/visualcomposition/imagedisplay-component.tsx","webpack://metaexplorer-core/./src/ldaccess/ns/nameSpaceResolution.ts","webpack://metaexplorer-core/./src/sidefx/LDRetrieverSuper.ts","webpack://metaexplorer-core/./src/components/peripherals/camera/cameraSwitcherTabs.tsx","webpack://metaexplorer-core/./src/defaults/initEssentialItpts.ts","webpack://metaexplorer-core/./src/components/generic/RefMapItpt-component.tsx","webpack://metaexplorer-core/./src/components/game/initGameItpts.ts","webpack://metaexplorer-core/./src/components/game/fourfieldsview.tsx","webpack://metaexplorer-core/./src/components/game/game-constants.ts","webpack://metaexplorer-core/./src/components/basic-html/initBaseHtmlItpt.ts","webpack://metaexplorer-core/./src/ldapproot.tsx","webpack://metaexplorer-core/./src/modding/initMods.ts","webpack://metaexplorer-core/external {\"root\":\"shortid\",\"commonjs2\":\"shortid\",\"commonjs\":\"shortid\",\"amd\":\"shortid\"}","webpack://metaexplorer-core/C:/Users/Jonat/git/metaExplorer/node_modules/process/browser.js","webpack://metaexplorer-core/./src/styles/styles.scss?b478","webpack://metaexplorer-core/./src/styles/styles.scss","webpack://metaexplorer-core/./node_modules/css-loader/dist/runtime/api.js","webpack://metaexplorer-core/C:/Users/Jonat/git/metaExplorer/node_modules/style-loader/lib/addStyles.js","webpack://metaexplorer-core/C:/Users/Jonat/git/metaExplorer/node_modules/style-loader/lib/urls.js","webpack://metaexplorer-core/./src/components/imageupload-component.tsx","webpack://metaexplorer-core/./src/components/developer-template.tsx","webpack://metaexplorer-core/./src/components/essentials/content/AbstractBaseDataTypeInput.tsx","webpack://metaexplorer-core/./src/components/essentials/content/AbstractCompactInfoListElement.tsx","webpack://metaexplorer-core/./src/components/essentials/content/AbstractSectionedList.tsx","webpack://metaexplorer-core/./src/components/essentials/content/AbstractSimpleTextTable.tsx","webpack://metaexplorer-core/./src/components/essentials/content/AbstractSingleImageSelector.tsx","webpack://metaexplorer-core/./src/components/essentials/interaction/AbstractButton.tsx","webpack://metaexplorer-core/./src/components/essentials/navigation/AbstractNavBarInputContainer.tsx","webpack://metaexplorer-core/./src/components/essentials/navigation/AbstractNavBarWActions.tsx","webpack://metaexplorer-core/./src/components/essentials/navigation/AbstractNavProcessAtom.tsx","webpack://metaexplorer-core/./src/components/essentials/navigation/AbstractNavSearchBar.tsx","webpack://metaexplorer-core/./src/GeneralUtils.ts","webpack://metaexplorer-core/./src/components/essentials/navigation/AbstractNavW5Choices.tsx","webpack://metaexplorer-core/./src/components/generic/datatype-assembler.ts","webpack://metaexplorer-core/./src/components/peripherals/camera/dom-camera.tsx","webpack://metaexplorer-core/./src/components/routing/404nomatch.tsx","webpack://metaexplorer-core/./src/ldaccess/LDconsts.ts","webpack://metaexplorer-core/./src/ldaccess/LDBaseDataType.ts","webpack://metaexplorer-core/./src/ldaccess/converterFns.ts","webpack://metaexplorer-core/./src/ldaccess/ldtypesystem/parseSimple.ts","webpack://metaexplorer-core/./src/ldaccess/ldtypesystem/typeChecking.ts","webpack://metaexplorer-core/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__10__","__WEBPACK_EXTERNAL_MODULE__15__","__WEBPACK_EXTERNAL_MODULE__16__","__WEBPACK_EXTERNAL_MODULE__20__","__WEBPACK_EXTERNAL_MODULE__29__","__WEBPACK_EXTERNAL_MODULE__59__","__WEBPACK_EXTERNAL_MODULE__60__","__WEBPACK_EXTERNAL_MODULE__83__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VisualKeysDict","VisualTypesDict","__webpack_exports__","UserDefDict","LDDict","generateIntrprtrForProp","kvStores","prop","retriever","routes","genKv","find","elem","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_0__","baseRMTkStr","objRef","BaseComp","appconfig_appItptMatcher__WEBPACK_IMPORTED_MODULE_1__","getItptRetriever","getDerivedItpt","console","error","_reactUtils_reactUtilFns__WEBPACK_IMPORTED_MODULE_2__","log","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","ldTokenString","generateCompInfoItm","itpt","compClass","generateAllCompInfoItms","rv","genKvs","ldaccess_kvConvenienceFns__WEBPACK_IMPORTED_MODULE_6__","length","push","newComp","generateItptFromCompInfo","compKey","index","this","props","state","compInfos","appstate_LDError__WEBPACK_IMPORTED_MODULE_3__","compInfo","locIndex","Array","isArray","compRoutes","initLDLocalState","cfg","itptKeys","kvKeys","itptIsMulti","kvIsMulti","rvCompInfo","Map","newValueMap","newLDTypeMap","defaults_DefaultItptRetriever__WEBPACK_IMPORTED_MODULE_5__","kvs","initialKvStores","ldOptions","visualInfo","forEach","itptKey","set","kv","val","ldType","compState","getDerivedItptStateFromProps","localState","getDerivedKVStateFromProps","localValues","localLDTypes","gdsfpLD","prevState","canInterpretType","reactCompLocalState","kvLocalState","resource","kvStore","itptsLen","kvsLen","concatItptAndKvs","concat","_toConsumableArray","singleKvKey","determineSingleKVKey","singleKv","kvSt","skvArray","skvElem","_typeof","anInterpretableKey","idx","skvElemMember","ldaccess_UserDefDict__WEBPACK_IMPORTED_MODULE_4__","intrprtrClassType","singleKvStore","isMulti","warn","newMap","has","_compInfo","size","_objectSpread","multiKvs","elemFromMulti","Error","interpretableKeys","candidates","inputData","outputData","outputKVMapKey","filter","includes","blueprintDecorator","constructorFn","blueprintCfg","replaceKVs","arguments","undefined","appstate_LDError__WEBPACK_IMPORTED_MODULE_0__","_a","_constructorFn","_this","_classCallCheck","baseClassKV","subClassKV","isReplace","_rv","baseCopy","slice","arr","findIdx","findIndex","findKv","splice","apply","handleKVInheritance","_inherits","nameSelf","ldBlueprint","ldaccess_UserDefDict__WEBPACK_IMPORTED_MODULE_1__","standardItptObjectTypeSuffix","crudSkills","target","isItpt","input","isUID","RegExp","test","isObjPropertyRef","ldaccess_ObjectPropertyRef__WEBPACK_IMPORTED_MODULE_0__","isLDOptionsSame","b","isLoading","lang","ldToken","kvsA","kvsB","webInResource","webOutResource","every","aVal","bVal","JSON","stringify","ldBlueprintCfgDeepCopy","parse","ldOptionsDeepCopy","appstate_LDError__WEBPACK_IMPORTED_MODULE_1__","newKVStores","newKey","newValue","valType","constructor","elemValAsArray","Date","newKvSingle","isOutputKVSame","pnsA","getOwnPropertyNames","pnsB","aPN","elemA","elemB","targetProperty","targetLDToken","getKVValue","itptKeysFromInputKvs","inputKvStores","ITPT_LINEAR_SPLIT","ITPT_REFMAP_BASE","ITPT_TAG_SPECIAL","ITPT_TAG_ATOMIC","ITPT_TAG_MOD","ITPT_TAG_COMPOUND","ActionKeysDict","ActionTypesDict","createConcatNetworkPreferredToken","inputLDTokenString","targetIntrprtrLnk","NetworkPreferredToken","linearLDTokenStr","ldTokenStr","id","_iitpt_retriever__WEBPACK_IMPORTED_MODULE_1__","refMapBaseTokenStr","initialVal","nwVal","clientVal","shortid__WEBPACK_IMPORTED_MODULE_0__","APP_LD_KEY","initialState","appCfg","appKey","mainItpt","errorMsg","ldoptionsMap","ldNonVisualMap","mods","isIdle","map","actionHandlerMap","idHandler","typehandler","applicationStore","appstate_store__WEBPACK_IMPORTED_MODULE_2__","rootSetup","requiredMods","appconfig_appItptMatcher__WEBPACK_IMPORTED_MODULE_6__","defaults_initEssentialItpts__WEBPACK_IMPORTED_MODULE_9__","components_basic_html_initBaseHtmlItpt__WEBPACK_IMPORTED_MODULE_11__","components_essentials_initEssentialItptRetrieverSetup__WEBPACK_IMPORTED_MODULE_7__","components_game_initGameItpts__WEBPACK_IMPORTED_MODULE_10__","sidefx_nonVisualConnect__WEBPACK_IMPORTED_MODULE_4__","modding_initMods__WEBPACK_IMPORTED_MODULE_13__","PureAppRoot","_Component","_possibleConstructorReturn","_getPrototypeOf","isDemoInitialized","react__WEBPACK_IMPORTED_MODULE_0__","_createClass","nextProps","_this$state","react__WEBPACK_IMPORTED_MODULE_0___default","Fragment","className","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","react_router__WEBPACK_IMPORTED_MODULE_8__","path","render","routeProps","ldapproot__WEBPACK_IMPORTED_MODULE_12__","initiallyDisplayedItptName","ReduxAppRoot","react_redux__WEBPACK_IMPORTED_MODULE_1__","appstate_reduxFns__WEBPACK_IMPORTED_MODULE_14__","AppRoot","store","LDError","_Error","_wrapNativeSuper","LDOPTIONS_CLIENTSIDE_CREATE","LDOPTIONS_CLIENTSIDE_UPDATE","LDOPTIONS_REQUEST_ASYNC","LDOPTIONS_REQUEST_ERROR","LDOPTIONS_REQUEST_RESULT","LDOPTIONS_KV_UPDATE","ACTION_LDACTION","externalAPICallDict","ldOptionsClientSideCreateAction","alias","type","ldOptionsClientSideUpdateAction","updatedLDOptions","ldOptionsRequestAction","apiCallOverride","uploadData","targetUrl","targetReceiverLnk","isExternalAPICall","ldOptionsResultAction","ldOptionsPayload","ldOptionsFailureAction","message","dispatchKvUpdateAction","changedKvStores","thisLdTkStr","updatedKvMap","ldAction","ldId","payload","allState","approot__WEBPACK_IMPORTED_MODULE_6__","getState","typeHandler","ldOptionsMapReducer","action","typedCfg","idCfg","idLDOptions","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_3__","internalAction","components_actions_ActionDict__WEBPACK_IMPORTED_MODULE_7__","action_internal","unshift","_defineProperty","typeLDOptions","_internalAction","newLDActionState","assign","isUpdateNeeded","actionAlias","singleLDOptions","kvStoresA","kvStoresB","ldaccess_ildtoken__WEBPACK_IMPORTED_MODULE_2__","newLDCfg","defaults_DefaultItptRetriever__WEBPACK_IMPORTED_MODULE_4__","newState","tokenVal","updatedLDOptionsObj","updatedState","dir","asyncLnk","asyncReqLDOptions","asyncedState","lnk","newLDOptions","reqResultState","stateCopy","kvElem","elemKey","modKVMapPart","thisTokenStrKVIdx","srcKvCopy","_loop","outputElem","targetTokenStr","targetProp","targetKvCopy","targetTokenStrKvIdx","kvElemCopy","requestLDOptionsEpic","action$","_ref","_LDOAPI","ldOptionsAPI","pipe","redux_observable__WEBPACK_IMPORTED_MODULE_0__","rxjs_operators__WEBPACK_IMPORTED_MODULE_5__","rxjs__WEBPACK_IMPORTED_MODULE_1__","getLDOptions","response","stack","postLDOptions","AppItptMatcher","defaults_DefaultItptMatcher__WEBPACK_IMPORTED_MODULE_0__","appItptMatcher","appItptMatcherFn","defaultRetriever","_appItptRetriever__WEBPACK_IMPORTED_MODULE_2__","setItptRetriever","defaults_DefaultItptRetriever__WEBPACK_IMPORTED_MODULE_1__","getKVStoreByKey","searchKey","getAllKVStoresByKey","getKVStoreByKeyFromLDOptionsOrCfg","SideFXDict","cfgIntrprtKeys","ldaccess_UserDefDict__WEBPACK_IMPORTED_MODULE_2__","initialKVStores","ldaccess_LDDict__WEBPACK_IMPORTED_MODULE_4__","Text","createTextBasedBpCfg","subItptOf","PureTextBasedComponent","ldState","_generic_generatorFns__WEBPACK_IMPORTED_MODULE_3__","rvLD","rvNew","singleTextValue","H1TextComponentName","PureH1TextComponent","_PureTextBasedCompone","__decorate","ldaccess_ldBlueprint__WEBPACK_IMPORTED_MODULE_1__","H2TextComponentName","PureH2TextComponent","_PureTextBasedCompone2","H3TextComponentName","PureH3TextComponent","_PureTextBasedCompone3","H4TextComponentName","PureH4TextComponent","_PureTextBasedCompone4","SpanTextComponentName","PureSpanTextComponent","_PureTextBasedCompone5","BoldTextComponentName","PureBoldTextComponent","_PureTextBasedCompone6","ItalicsTextComponentName","PureItalicsTextComponent","_PureTextBasedCompone7","ParagraphTextComponentName","PureParagraphTextComponent","_PureTextBasedCompone8","AppItptRetriever","ld_react_redux_connect_ReduxItptRetriever__WEBPACK_IMPORTED_MODULE_0__","appIntRetr","appItptRetrFn","isClassComponent","isFunctionComponent","isSomeWhatReact","isReactComponent","isRouteWrappedComponent","isElement","isDOMTypeElement","isCompositeTypeElement","component","String","getPrototypeOf","WrappedComponent","element","mapStateToPropsRoot","ownProps","mapStateToProps","tokenString","ldOptionsLoc","ldTkStrRefToFilledProp","ldTokenStringReference","ldOptionsSub","outPutKVMap","rvInner","mapDispatchToProps","dispatch","notifyLDOptionsChange","appstate_epicducks_ldOptions_duck__WEBPACK_IMPORTED_MODULE_0__","notifyLDOptionsLinearSplitChange","_epicducks_linearSplit_duck__WEBPACK_IMPORTED_MODULE_3__","notifyLDOptionsRefMapSplitChange","refMap","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_2__","matchingTypeKV","newKvArr","matchVal","matchValAsObj","keyPart","newKV","refMapKv","intrprtrBPCfgRefMapKey","ldaccess_iitpt_retriever__WEBPACK_IMPORTED_MODULE_5__","_epicducks_refMap_duck__WEBPACK_IMPORTED_MODULE_4__","dispatchKvOutput","dispatchLdAction","ldRetrCfgIntrprtKeys","_SideFXDict__WEBPACK_IMPORTED_MODULE_0__","srvURL","identifier","LDRetrieverSuperRewrite","ldTkStr","inputKeys","components_generic_generatorFns__WEBPACK_IMPORTED_MODULE_1__","ldaccess_UserDefDict__WEBPACK_IMPORTED_MODULE_7__","okvMap","outputKVMap","isInputDirty","isOutputDirty","webContent","retrieverStoreKey","gdsfpResult","consumeLDOptionsLikeGDSFP","inputKey","param","setState","setWebContent","evalDirtyInput","evalDirtyOutput","changedState","refreshOutput","callToAPI","srvUrl","requestURL","idStr","toString","idSplitIdx","indexOf","nsMHasValue","nsMSearchVal","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","ldaccess_ns_nameSpaceMap__WEBPACK_IMPORTED_MODULE_6__","values","iterator","next","done","err","idNS","idId","replace","idVal","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_4__","reqAsString","approot__WEBPACK_IMPORTED_MODULE_2__","appstate_epicducks_ldOptions_duck__WEBPACK_IMPORTED_MODULE_3__","okvmPNs","webObj","statePart","pn","fillValue","outputElems","targetTokenLnk","targetKVStore","ldaccess_kvConvenienceFns__WEBPACK_IMPORTED_MODULE_5__","DEFAULT_ITPT_RETRIEVER_NAME","DefaultItptRetriever","itptCollection","derivedItptMap","term","searchSingleObjItpt","multipleItpts","typeName","tags","preExistingIdx","curItm","newItm","baseType","getBaseTypeFromType","additionalTypes","getAdditionalTypesFromType","ldTokenVal","hasDerivedItpt","searchBaseType","candidatesMatch2","rawType","MOD_LOAD_REQUEST","MOD_LOAD_RESULT","MOD_LOAD_RESULT_ALL","MOD_LOAD_ERROR","loadMod","loadModResult","loadModResultAll","loadModFailure","modStatePartReducer","loadModEpic","rxjs_operators__WEBPACK_IMPORTED_MODULE_1__","appstate_modstate__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_3__","modId","statusResult","loading","_MODAPI","modAPI","modQueue","checkDependencies","getModData","setModLoadingComplete","mod","isRequiredLoadingComplete","AbstractDataTransformerItptKeys","AbstractDataTransformerOutputKVs","AbstractDataTransformer","inputParams","consumeLDOptions","ldaccess_UserDefDict__WEBPACK_IMPORTED_MODULE_0__","setOutputKVMap","inputidx","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_1__","outputKvStores","newOutputKvStores","mappingFunction","appstate_LDError__WEBPACK_IMPORTED_MODULE_4__","cleanRouteString","destination","match","route","startsWith","substring","url","endsWith","substr","lastIndexOf","routeParts","split","newRouteParts","pop","join","nameSpaceMap","COMP_BASE_CONTAINER","bpCfg","itptContainerObjType","PureBaseContainerRewrite","hasError","react__WEBPACK_IMPORTED_MODULE_2__","interpretedBy","newreactCompInfos","newLDTypes","isLDTypeSame","isItptKey","itm","kvstores","prevStateLDType","_reactUtils_compUtilFns__WEBPACK_IMPORTED_MODULE_6__","newldOptions","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_5__","appconfig_appItptMatcher__WEBPACK_IMPORTED_MODULE_7__","ldaccess_ildtoken__WEBPACK_IMPORTED_MODULE_8__","_reactUtils_reactUtilFns__WEBPACK_IMPORTED_MODULE_9__","appstate_LDError__WEBPACK_IMPORTED_MODULE_10__","ldTokenStringNew","info","react__WEBPACK_IMPORTED_MODULE_2___default","reactComps","cInfoItmOrItms","cInfoAsArray","cInfoItm","GenericComp","BaseContainerRewrite","react_redux__WEBPACK_IMPORTED_MODULE_3__","appstate_reduxFns__WEBPACK_IMPORTED_MODULE_4__","REFMAP_REQUEST","REFMAP_SUCCESS","refMapREQUESTAction","ldOptionsBase","refMapSUCCESSAction","refMapReducer","isRefMapNeedsUpdate","modBPCfg","createRuntimeRefMapLinks","assignValuesToRuntimeRefMap","assignOutputKvMaps","preExistingRMKVidx","ldaccess_UserDefDict__WEBPACK_IMPORTED_MODULE_3__","intrprtrBPCfgRefMapType","rmKvToAdd","_ldOptions_duck__WEBPACK_IMPORTED_MODULE_11__","stateCopyUpd","cKvStore","updElem","objPropRef","targetLDTkStr","refMapIdx","rmElem","bpCfgElem","itptKeyItm","subElementTkStr","ldaccess_ildtoken__WEBPACK_IMPORTED_MODULE_6__","propIdx","ikv","newInputKv","updBPCfg","modifiedObj","rmBPCfg","ldBaseTokenStr","aAsOPR","rmKv","rmSubCfgKey","rmSubCfg","rtNewToken","rtNewTkStr","newInterpretedby","rtLDOptions","singleIntrpblKey","sKeyAsObjPropRef","propName","propRef","stateLdTkStr","actualInputIdx","lastActualInputIdx","actualInputKv","targetKvStores","lastPropIdx","okvmMap","concatNWTkStr","iKeyStr","srcObjPropRef","srcObjRef","newOutputElem","kvAsObjPropRef","refString","rmb","concatNWTk","ldOKV","outputKVMapType","okvElem","refMapEpic","redux_observable__WEBPACK_IMPORTED_MODULE_1__","rxjs_operators__WEBPACK_IMPORTED_MODULE_10__","ldOptionsObj","createItpts","rxjs__WEBPACK_IMPORTED_MODULE_2__","itptRetriever","rmKvVal","instancePrep","newInstancePrepItm","outputKVs","originalBPCfgCopy","subCfg","prepSubCfgKey","subCfgsubItptOf","getUnconnectedByNameSelf","rvActions","ldaccess_ldBlueprint__WEBPACK_IMPORTED_MODULE_0__","components_reactUtils_reactUtilFns__WEBPACK_IMPORTED_MODULE_8__","setDerivedItpt","sidefx_nonVisualConnect__WEBPACK_IMPORTED_MODULE_9__","newSubRMInputs","newRMLDOptions","from","LINEAR_SPLIT_REQUEST","LINEAR_SPLIT_SUCCESS","linearSplitRequestAction","linearSplitSuccessAction","linearReducer","removePrevSplit","splitValues","ldaccess_ildtoken__WEBPACK_IMPORTED_MODULE_0__","keyIdxMap","newLDTokenStr","newLDToken","newOutputKvMap","newOKVStore","splitOKV","okvElemStr","curSC","outputKvMaps","newOutputKvMapInStore","newOKVStoreInStore","clearDerivedItpt","oldLDTokenStr","linearSplitEpic","redux_observable__WEBPACK_IMPORTED_MODULE_2__","splitReqPromise","Promise","resolve","reject","searchForObjItptAndDerive","assignDerivedItpt","REGISTER_ID_HANDLER","REGISTER_TYPE_HANDLER","UNREGISTER_HANDLER","registerIdActionHandlerAction","handlesId","registerTypeActionHandlerAction","handlesType","unregisterHandlerAction","actionHandlerReducer","rvState","typeMap","idMap","idProp","initLDConnect","connectNonVisLDComp","approot__WEBPACK_IMPORTED_MODULE_0__","connectedMap","lastLDOptionsMap","nonVisListener","bpIntrprtr","subscribe","ACTION_APPCFG_UPDATE_KEY","ACTION_APPCFG_UPDATE_ITPT","appKeyUpdateAction","appItptUpdateAction","appCfgStatePartReducer","_mod_duck__WEBPACK_IMPORTED_MODULE_0__","updatedKey","updatedItpt","compNeedsUpdate","isRouteSame","classNamesLD","components_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_1__","lastProps","nextRoute","lastRoute","inputClassNames","localCSSVal","cssClassName","classArr","process","isProduction","isDemo","isStateDebug","configureStore","redux__WEBPACK_IMPORTED_MODULE_0__","_rootduck__WEBPACK_IMPORTED_MODULE_2__","apis_image_upload__WEBPACK_IMPORTED_MODULE_3__","apis_ldoptions_api__WEBPACK_IMPORTED_MODULE_4__","apis_mod_api__WEBPACK_IMPORTED_MODULE_5__","imgUploader","epicMiddleware","dependencies","imgULAPI","env","METAEXPLORER_MODE","middleWare","run","rootReducer","rootEpic","_epicducks_schemameta__WEBPACK_IMPORTED_MODULE_2__","appstate_epicducks_image_upload__WEBPACK_IMPORTED_MODULE_3__","appstate_epicducks_ldOptions_duck__WEBPACK_IMPORTED_MODULE_4__","appstate_epicducks_ldNonVisual_duck__WEBPACK_IMPORTED_MODULE_5__","_epicducks_refMap_duck__WEBPACK_IMPORTED_MODULE_6__","_reduceReducers__WEBPACK_IMPORTED_MODULE_7__","_epicducks_linearSplit_duck__WEBPACK_IMPORTED_MODULE_8__","_epicducks_mod_duck__WEBPACK_IMPORTED_MODULE_9__","_epicducks_appCfg_duck__WEBPACK_IMPORTED_MODULE_10__","_epicducks_isLoading_duck__WEBPACK_IMPORTED_MODULE_11__","_epicducks_action_duck__WEBPACK_IMPORTED_MODULE_12__","combLdOptionsMapReducer","isSaving","SCHEMA_LOAD_REQUEST","SCHEMA_LOAD_RESULT","SCHEMA_LOAD_ERROR","loadSchema","loadSchemaResult","loadSchemaFailure","isLoadingSchemaReducer","loadSchemaEpic","userid","results","getJSON","of","SingleModStateKeysDict","IS_LOADING_TRUE","IS_LOADING_FALSE","startLoadingAction","stopLoadingAction","isLoadingReducer","loadingEpic","rxjs_operators__WEBPACK_IMPORTED_MODULE_2__","appconfig_retrieverAccessFns__WEBPACK_IMPORTED_MODULE_3__","storeval","addBlueprintToRetriever","retrieverName","_appItptMatcher__WEBPACK_IMPORTED_MODULE_11__","appconfig_appItptRetriever__WEBPACK_IMPORTED_MODULE_4__","appstate_LDError__WEBPACK_IMPORTED_MODULE_6__","candidate","ldaccess_kvConvenienceFns__WEBPACK_IMPORTED_MODULE_1__","searchTerm","intrprtrBPCfgRefMapName","itptContainer","addItpt","ldaccess_iitpt_retriever__WEBPACK_IMPORTED_MODULE_3__","intrprtrTypeInstanceFromBlueprint","propID","skvKey","components_generic_generatorFns__WEBPACK_IMPORTED_MODULE_10__","changeMainAppItpt","toItptName","startingInstance","appState","approot__WEBPACK_IMPORTED_MODULE_5__","newItpt","getItptByNameSelf","newItptCfg","newType","dummyInstance","appKvKey","ldaccess_ldUtils__WEBPACK_IMPORTED_MODULE_7__","appstate_epicducks_ldOptions_duck__WEBPACK_IMPORTED_MODULE_8__","appstate_epicducks_appCfg_duck__WEBPACK_IMPORTED_MODULE_9__","ROUTE_ISABSOLUTE","ROUTE_ISEXACT","ROUTE_PATH","RouteComponentName","_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_3__","inputContainer","action_onRoute","ldaccess_LDDict__WEBPACK_IMPORTED_MODULE_0__","Boolean","metaExplorerAction","PureRouteComponent","renderInputContainer","_generic_generatorFns__WEBPACK_IMPORTED_MODULE_4__","_assertThisInitialized","isExact","isAbsolute","toPath","actionPayload","react__WEBPACK_IMPORTED_MODULE_6__","actionOnRoute","newPath","react__WEBPACK_IMPORTED_MODULE_6___default","react_router__WEBPACK_IMPORTED_MODULE_5__","exact","imageRetrieverName","sidefx_SideFXDict__WEBPACK_IMPORTED_MODULE_0__","ldaccess_LDDict__WEBPACK_IMPORTED_MODULE_1__","fileFormat","contentUrl","_LDRetrieverSuper_rewrite__WEBPACK_IMPORTED_MODULE_4__","ImageRetriever","_LDRetrieverSuperRewr","superRV","_get","identifierResolved","ldaccess_ns_nameSpaceResolution__WEBPACK_IMPORTED_MODULE_3__","ldaccess_ldBlueprint__WEBPACK_IMPORTED_MODULE_2__","productRetrieverName","manufacturer","Organization","description","image","_LDRetrieverSuper_rewrite__WEBPACK_IMPORTED_MODULE_3__","ProductRetriever","organizationRetrieverName","address","OrganizationRetriever","_LDRetrieverSuper","sidefx_LDRetrieverSuper__WEBPACK_IMPORTED_MODULE_3__","EANScannerStateEnum","EANScannerName","cfgType","ViewAction","gtin8","EANScanner","loadingImgLink","errorImgLink","onBarCodeDetected","result","barcode","codeResult","code","barcodeKV","_generic_generatorFns__WEBPACK_IMPORTED_MODULE_5__","vidDeviceList","curId","curStep","_this2","navigator","mediaDevices","enumerateDevices","then","devices","vidInputList","device","kind","deviceId","startQuagga","setStateToError","_this3","Quagga","init","inputStream","constraints","width","height","facingMode","debug","locator","patchSize","halfSample","numOfWorkers","decoder","readers","locate","isScanning","start","onDetected","isError","offDetected","stop","_this4","stateVisLnk","isDisplayImage","isMultiVidSource","src","_cameraSwitcherTabs__WEBPACK_IMPORTED_MODULE_3__","activeCameraId","onTabChanged","newActiveId","_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_2__","createLayoutBpCfg","PureLayoutComponent","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","styleClassName","LayoutVHCenteredColumnName","PureVHcenteredColumnLayout","_PureLayoutComponent","RouteRedirectName","_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_1__","routeSend_confirm","route_added","PureRedirectComponent","location","routeSendConfirm","_route_helper_fns__WEBPACK_IMPORTED_MODULE_5__","pathname","react_router__WEBPACK_IMPORTED_MODULE_4__","to","rowsAndCols","isFirstRowHeading","headings","contentRow","columnKeyAutoName","TwoDtoJSONArrayName","TwoDtoJSONArrayItptKeys","TwoDtoJSONArrayOutputKVs","ldaccess_LDDict__WEBPACK_IMPORTED_MODULE_2__","TwoDtoJSONArray","_AbstractDataTransfor","_abstractDataTransformer__WEBPACK_IMPORTED_MODULE_0__","twoDArrKv","isExtractHeadingKv","isExtractHeading","rowsAndColsValues","headingsKeysOutput","contentRowOutput","singleInputRow","newRow","colKey","keyLen","rowVal","newRowObj","colIdx","newRowName","headingsOutputKV","contentRowOutputKV","transfInputKey","transfOutputKey","headerField","shField","JSONArrayToCompactInfoArrayName","ToCompactInfoArrayItptKeys","ToCompactInfoArrayOutputKVs","components_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_4__","compactInfoElement","JSONArrayToCompactInfoArray","jsonArrKv","headerFieldKv","shFieldKv","jsonArr","headerFieldConst","shFieldConst","headerTextConst","headerTxt","subHeaderTextConst","subHeaderTxt","primaryItptConst","primaryItpt","secondaryItptConst","secondaryItpt","outputValArr","arrElem","_ref2","compactInfoElem","transfOutputKV","CSSWrapperName","ldaccess_LDDict__WEBPACK_IMPORTED_MODULE_5__","PureCSSWrapper","renderFreeResult","components_reactUtils_reactUtilFns__WEBPACK_IMPORTED_MODULE_6__","cssClassNames","cssClassStrings","MagicBoxName","inputdata","magicCanInterpretType","MagicBoxInputKeys","MagicBoxCfg","PureMagicBox","_generatorFns__WEBPACK_IMPORTED_MODULE_3__","containertoken","rvLocal","nextContainerTokenStr","nextContainerToken","ldaccess_ildtoken__WEBPACK_IMPORTED_MODULE_5__","_modKV","_outputNum","_i","newElems","_newElems","newLDOptionsFItpt","modKV","outputNum","newLdType","newKvStores","_baseContainer_rewrite__WEBPACK_IMPORTED_MODULE_1__","projCfgName","_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_4__","configItpt","ldaccess_LDDict__WEBPACK_IMPORTED_MODULE_3__","PureProjectConfig","listSections","sectionElems","displayIdx","listSection","payloadInputKey","idField","typeField","ActionCompName","ActionCompKeys","ActionCompOutputKVs","components_actions_ActionDict__WEBPACK_IMPORTED_MODULE_4__","ActionComp","datatransformation_abstractDataTransformer__WEBPACK_IMPORTED_MODULE_3__","payloadInputKv","idFieldKv","typeFieldKv","handleTypeKey","_ActionDict__WEBPACK_IMPORTED_MODULE_2__","canHandleType","handleIdKey","canHandleId","payloadOutputKey","ActionHandlerName","ActionHandlerKeys","ActionHandlerOutputKVs","ActionHandlerInputKVs","ActionHandler","typeKv","idKv","triggerRegisterIfNecessary","datatransformation_abstractDataTransformer__WEBPACK_IMPORTED_MODULE_0__","appstate_epicducks_action_duck__WEBPACK_IMPORTED_MODULE_6__","handleTypeInputKv","handleIdInputKv","internalActionKv","ldaccess_ldBlueprint__WEBPACK_IMPORTED_MODULE_4__","SingleFieldViewIntrprtrName","components_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_2__","PureSingleFieldView","components_generic_generatorFns__WEBPACK_IMPORTED_MODULE_3__","ImageUploadAPI","fileList","file","formData","FormData","append","fetchPromise","fetch","method","body","status","_appstate_LDError__WEBPACK_IMPORTED_MODULE_0__","json","LDOptionsAPI","headers","Accept","Content-Type","uploadDataSerialized","ModAPI","modInitFns","loadedModsMap","modDependencies","modPromise","rxjs__WEBPACK_IMPORTED_MODULE_0__","modSpec","initFn","deps","dep","DefaultItptMatcher","itptRetrieverMap","itptRetrieverId","rvCandidate","defaults_DefaultItptRetriever__WEBPACK_IMPORTED_MODULE_0__","single","matchInput","ReduxItptRetriever","_DefaultItptRetriever","connectedItpts","searchResult","prevItpt","intrprtr","connItpt","react_redux__WEBPACK_IMPORTED_MODULE_0__","appstate_reduxFns__WEBPACK_IMPORTED_MODULE_2__","OBJECT_REF","OBJECT_PROP_REF","IMG_UPLOAD_REQUEST","IMG_UPLOAD_RESULT","IMG_UPLOAD_ERROR","uploadImgRequestAction","uploadImgResultAction","loadImgFailure","isUploadingImgReducer","uploadImageEpic","imgUL","imgULpayload","postNewImage","LDNONVIS_SET","LDNONVIS_DELETE","ldNonVisSETAction","ldNonVisDeleteAction","ldNonVisMapReducer","reduceReducers","_len","reducers","_key","previous","current","reduce","initEssentialInterpreters","appconfig_appItptRetriever__WEBPACK_IMPORTED_MODULE_0__","_visualcomposition_imagedisplay_component__WEBPACK_IMPORTED_MODULE_2__","_routing_route_component__WEBPACK_IMPORTED_MODULE_3__","sidefx_ImageRetriever__WEBPACK_IMPORTED_MODULE_4__","sidefx_ProductRetriever__WEBPACK_IMPORTED_MODULE_5__","sidefx_OrganizationRetriever__WEBPACK_IMPORTED_MODULE_6__","_peripherals_camera_EAN_scanner__WEBPACK_IMPORTED_MODULE_7__","ldaccess_iitpt_retriever__WEBPACK_IMPORTED_MODULE_8__","_layout_layoutBaseComp__WEBPACK_IMPORTED_MODULE_9__","_routing_redirect__WEBPACK_IMPORTED_MODULE_10__","datatransformation_TwoDtoJSONArray__WEBPACK_IMPORTED_MODULE_11__","datatransformation_JSONArrayToCompactInfoArray__WEBPACK_IMPORTED_MODULE_12__","components_layout_CSSWrapper__WEBPACK_IMPORTED_MODULE_13__","ImageObject","CSS_OBJECT_FIT","_visualDict__WEBPACK_IMPORTED_MODULE_4__","PureImgDisplay","objFit","imgLnk","alt","onLoad","ev","currentTarget","classList","remove","style","objectFit","children","resolveNS","ldaccess_ns_nameSpaceMap__WEBPACK_IMPORTED_MODULE_0__","locURI","URL","origin","LDRetrieverSuper","_LDRetrieverSuper_rewrite__WEBPACK_IMPORTED_MODULE_7__","sidefx_SideFXDict__WEBPACK_IMPORTED_MODULE_1__","approot__WEBPACK_IMPORTED_MODULE_3__","appstate_epicducks_ldOptions_duck__WEBPACK_IMPORTED_MODULE_2__","CameraSwitcherTabs","selectedImgLink","unselectedImgLink","_this$props","isSelected","imgSrc","onClick","initEssentialItpts","components_generic_RefMapItpt_component__WEBPACK_IMPORTED_MODULE_1__","components_generic_baseContainer_rewrite__WEBPACK_IMPORTED_MODULE_3__","ldaccess_iitpt_retriever__WEBPACK_IMPORTED_MODULE_4__","components_generic_magicBox__WEBPACK_IMPORTED_MODULE_5__","components_project_config__WEBPACK_IMPORTED_MODULE_6__","components_actions_ActionComp__WEBPACK_IMPORTED_MODULE_7__","components_actions_ActionHandler__WEBPACK_IMPORTED_MODULE_8__","PureRefMapItpt","components_reactUtils_compUtilFns__WEBPACK_IMPORTED_MODULE_3__","ldaccess_ildtoken__WEBPACK_IMPORTED_MODULE_4__","components_reactUtils_reactUtilFns__WEBPACK_IMPORTED_MODULE_2__","initGameItpt","_fourfieldsview__WEBPACK_IMPORTED_MODULE_1__","_game_constants__WEBPACK_IMPORTED_MODULE_2__","_singlefield__WEBPACK_IMPORTED_MODULE_3__","GAME_TASK_HEADING","GAME_TASK_TXT","GAME_FIELD_ITPT_UL","GAME_FIELD_ITPT_UR","GAME_FIELD_ITPT_LL","GAME_FIELD_ITPT_LR","GAME_STATS","GAME_CORRECT_FIELD_IDX","FourFieldsViewIntrprtrName","components_visualcomposition_visualDict__WEBPACK_IMPORTED_MODULE_3__","Integer","PureFourFieldsView","renderSub","components_generic_generatorFns__WEBPACK_IMPORTED_MODULE_5__","onPressResult","fieldIdx","gamecorrectfieldidx","newRevealedArray","revealedArray","parseInt","gametaskheading","gametasktxt","gamestats","ulClassName","urClassName","llClassName","lrClassName","GAME_4F_TYPE","initBaseHtmlItpt","ldaccess_iitpt_retriever__WEBPACK_IMPORTED_MODULE_1__","_text_based_components__WEBPACK_IMPORTED_MODULE_2__","PureLDApproot","hasCompletedFirstRender","background","react_router__WEBPACK_IMPORTED_MODULE_2__","components_generic_baseContainer_rewrite__WEBPACK_IMPORTED_MODULE_1__","LDApproot","initRequiredMods","appstate_epicducks_mod_duck__WEBPACK_IMPORTED_MODULE_1__","spec","addRequiredMod","addModInitFn","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","marker","runClearTimeout","Item","array","noop","nextTick","args","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","content","options","hmr","transform","insertInto","locals","useSourceMap","list","item","cssMapping","btoa","sourceMapping","sourceMap","base64","unescape","encodeURIComponent","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","fn","memo","stylesInDom","isOldIE","document","all","atob","getElement","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","el","keys","setAttribute","obj","update","default","styleIndex","applyToSingletonTag","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","cssNode","childNodes","baseUrl","protocol","host","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","CreateAction","agent","imageupload_component_bpCfg","EntryPoint","imageupload_component_PureImgUploader","PureImgUploader","onClickFileChange","preventDefault","files","getStringValFromKey","fileChange","external_root_React_commonjs2_react_commonjs_react_amd_react_","external_root_React_commonjs2_react_commonjs_react_amd_react_default","onChange","evt","placeholder","accept","kvStoreVal","allMyInputKeys","visualDict","myTemplateCfg","developer_template_PureMyTemplate","PureMyTemplate","developer_template_classCallCheck","developer_template_getPrototypeOf","generatorFns","developer_template_assertThisInitialized","outputMemberB","modifiedKV","developer_template_inherits","myMemberA","developer_template_decorate","bdts","Double","DateTime","baseDataTypeBpcfgs","bdt","AbstractBaseDataTypeInput_cfgIntrprtKeys","AbstractBaseDataTypeInput_bpCfg","AbstractBaseDataTypeInput_AbstractBaseDataTypeInput","AbstractBaseDataTypeInput","AbstractBaseDataTypeInput_classCallCheck","AbstractBaseDataTypeInput_possibleConstructorReturn","AbstractBaseDataTypeInput_getPrototypeOf","handleChange","evtval","singleInputKey","singleKVInputKey","modSingleKV","singleKVOutputKey","AbstractBaseDataTypeInput_objectSpread","singleKVOutput","bdtState","AbstractBaseDataTypeInput_inherits","newLDOptionsObj","ldUtils","renderSingleKv","baseDT","wrapBaseDataTypeGDSF","pLdOpts","newSingleKVKey","nextDescription","nextSingleKV","kvConvenienceFns","desc","singleKVOutputKeyStr","CompactInfoListElementItptKeys","compactInfoListElementValueKeys","CompactInfoListElementInputKeys","CompactInfoListElementCfg","AbstractCompactInfoListElement_AbstractCompactInfoListElement","AbstractCompactInfoListElement","AbstractCompactInfoListElement_classCallCheck","AbstractCompactInfoListElement_getPrototypeOf","AbstractCompactInfoListElement_assertThisInitialized","AbstractCompactInfoListElement_objectSpread","AbstractCompactInfoListElement_inherits","sectionedListItptKeys","sectionedListValueKeys","sectionedListInputKeys","AbstractSectionedList_initialKVStores","SectionedListCfg","AbstractSectionedList_AbstractSectionedList","AbstractSectionedList","AbstractSectionedList_classCallCheck","AbstractSectionedList_getPrototypeOf","AbstractSectionedList_assertThisInitialized","AbstractSectionedList_objectSpread","AbstractSectionedList_inherits","SingleImageSelectorStateEnum","simpleTextTableInputKeys","simpleTextTableCfg","AbstractSimpleTextTable_AbstractSimpleTextTable","AbstractSimpleTextTable","AbstractSimpleTextTable_classCallCheck","AbstractSimpleTextTable_possibleConstructorReturn","AbstractSimpleTextTable_getPrototypeOf","AbstractSimpleTextTable_objectSpread","AbstractSimpleTextTable_inherits","AbstractSimpleTextTable_createClass","AbstractSingleImageSelector_cfgType","RESULT_KV","SingleImageSelectorBpCfg","AbstractSingleImageSelector_AbstractSingleImageSelector","AbstractSingleImageSelector","AbstractSingleImageSelector_classCallCheck","AbstractSingleImageSelector_possibleConstructorReturn","AbstractSingleImageSelector_getPrototypeOf","draggingImgLink","baseState","isSelectInputType","isCamAvailable","previewURL","AbstractSingleImageSelector_objectSpread","AbstractSingleImageSelector_inherits","outputKV","isPreviewing","isDragging","imgFile","onResultChanged","isCamShooting","fontIcon","isIcon","AbstractButton_cfgIntrprtKeys","confirmTxt","ActionDict","action_confirm","ButtonBpCfg","AbstractButton_AbstractButton","AbstractButton","AbstractButton_classCallCheck","AbstractButton_possibleConstructorReturn","AbstractButton_getPrototypeOf","onConfirmClick","confirmAction","AbstractButton_objectSpread","isDoRedirectConfirm","routeSend_cancel","AbstractButton_inherits","iconUrlVal","isIconVal","route_helper_fns","external_root_ReactRouter_commonjs2_react_router_commonjs_react_router_amd_react_router_","renderButton","cfgIntrprtItptKeys","cfgIntrprtValueKeys","AbstractNavBarInputContainer_cfgIntrprtKeys","NavBarInputContainerBpCfg","AbstractNavBarInputContainer_AbstractNavBarInputContainer","AbstractNavBarInputContainer","AbstractNavBarInputContainer_classCallCheck","AbstractNavBarInputContainer_getPrototypeOf","AbstractNavBarInputContainer_assertThisInitialized","AbstractNavBarInputContainer_objectSpread","AbstractNavBarInputContainer_inherits","AbstractNavBarWActions_cfgIntrprtItptKeys","popOverContent","AbstractNavBarWActions_cfgIntrprtValueKeys","routeSend_search","iconName","AbstractNavBarWActions_cfgIntrprtKeys","NavBarWActionsBpCfg","AbstractNavBarWActions_AbstractNavBarWActions","AbstractNavBarWActions","stateExtensionInit","AbstractNavBarWActions_classCallCheck","AbstractNavBarWActions_getPrototypeOf","AbstractNavBarWActions_assertThisInitialized","onAppBarRightIconMenuClick","onAppBarSearchBtnClick","AbstractNavBarWActions_objectSpread","isDoRedirect","isRightMenuOpen","onCancelClick","isDoRedirectCancel","AbstractNavBarWActions_inherits","routeSendSearch","routeSendCancel","renderCore","AbstractNavProcessAtom_cfgIntrprtKeys","cancelTxt","NavProcessAtomBpCfg","AbstractNavProcessAtom_AbstractNavProcessAtom","AbstractNavProcessAtom","AbstractNavProcessAtom_classCallCheck","AbstractNavProcessAtom_possibleConstructorReturn","AbstractNavProcessAtom_getPrototypeOf","AbstractNavProcessAtom_objectSpread","AbstractNavProcessAtom_inherits","headerText","isHideBottom","AbstractNavSearchBar_cfgIntrprtKeys","searchText","routeSend_back","NavSearchBarBpCfg","AbstractNavSearchBar_AbstractNavSearchBar","AbstractNavSearchBar","AbstractNavSearchBar_classCallCheck","AbstractNavSearchBar_getPrototypeOf","AbstractNavSearchBar_assertThisInitialized","onSearchChange","evtVal","AbstractNavSearchBar_objectSpread","searchValue","outSearchKv","onBackBtnClick","routeSendBack","AbstractNavSearchBar_inherits","checkAllFilled","inputs","arrayMove","oldIdx","newIdx","k","ICON_URLS","ICON_URLS_DISABLED","ROUTES_SEND","LABELS","BOTTOMNAV_VALUE_FIELDS","CHANGED_ROUTE_OUTPUT","AbstractNavW5Choices_cfgIntrprtKeys","AbstractNavW5Choices_initialKVStores","BottomNavW5ChoicesBpCfg","TopNavW5ChoicesBpCfg","AbstractNavW5Choices_AbstractBottomNavigation","AbstractBottomNavigation","AbstractNavW5Choices_classCallCheck","AbstractNavW5Choices_getPrototypeOf","AbstractNavW5Choices_assertThisInitialized","tabIdx","AbstractNavW5Choices_objectSpread","hasTabChanged","outRouteKV","isInitial","numTabs","iconEnabledURLs","iconDisabledURLs","labels","isGenerateAtPositions","AbstractNavW5Choices_inherits","tabIdxCounter","lastPath","isOnTopLayer","_idx","DataTypeAssembler","abstractDataTransformer","newOutputObj","flatDataTypeAssemblerFactory","DataTypeAssemblerExt","_DataTypeAssembler","datatype_assembler_classCallCheck","datatype_assembler_inherits","DOMCameraStateEnum","dom_camera_DOMCamera","DOMCamera","dom_camera_classCallCheck","dom_camera_possibleConstructorReturn","dom_camera_getPrototypeOf","dom_camera_inherits","strDeviceId","videoDispl","srcObject","getUserMedia","video","audio","stream","paused","play","onVideoDisplayReady","pause","onVideoDisplayRemoved","dom_camera_objectSpread","isVideoing","startStream","canvas","getCanvas","toDataURL","toBlob","onImageCaptured","videoHeight","ctx","canvasElem","aspectRatio","videoWidth","clientWidth","getContext","drawImage","_this5","showControls","ref","getScreenshotAsBlob","LDConsts","_404nomatch_FourOhFournomatch","FourOhFournomatch","_404nomatch_classCallCheck","_404nomatch_possibleConstructorReturn","_404nomatch_getPrototypeOf","_404nomatch_inherits","external_root_ReactRouterDOM_commonjs2_react_router_dom_commonjs_react_router_dom_amd_react_router_dom_","ldBaseDataTypeList","singleHyperMediaToKvStores","inputHM","kvStoreArray","newKvStore","parseBoolean","inputKv","parseText","parseDate","parseTime","parseNumber","isInputValueValidFor","targetKv","inputMatrixKey","typeMatrixKeyMap","targetMatrixKey","typeMatrix","getLDPrototypeOf","ldPrototypeMap","typeChecking_defineProperty","_ldPrototypeMap$set","image_upload","ldoptions_api","mod_api","appItptRetriever","retrieverAccessFns","modstate","reduxFns","rootduck","action_duck","appCfg_duck","epicducks_image_upload","isLoading_duck","ldNonVisual_duck","ldOptions_duck","linearSplit_duck","mod_duck","refMap_duck","schemameta","project_config","text_based_components","initEssentialItptRetrieverSetup","fourfieldsview","game_constants","initGameItpts","singlefield","RefMapItpt_component","baseContainer_rewrite","magicBox","CSSWrapper","layoutBaseComp","compUtilFns","reactUtilFns","redirect","route_component","imagedisplay_component","EAN_scanner","cameraSwitcherTabs","ObjectPropertyRef","iitpt_retriever","ildtoken","nameSpaceResolution","initMods","LDRetrieverSuper_rewrite","nonVisualConnect","approot","ldapproot"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"rxjs/operators\"), require(\"rxjs\"), require(\"redux-observable\"), require(\"react-router\"), require(\"react-redux\"), require(\"redux\"), require(\"react-router-dom\"), require(\"shortid\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"rxjs/operators\", \"rxjs\", \"redux-observable\", \"react-router\", \"react-redux\", \"redux\", \"react-router-dom\", \"shortid\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"metaexplorer-core\"] = factory(require(\"react\"), require(\"rxjs/operators\"), require(\"rxjs\"), require(\"redux-observable\"), require(\"react-router\"), require(\"react-redux\"), require(\"redux\"), require(\"react-router-dom\"), require(\"shortid\"));\n\telse\n\t\troot[\"metaexplorer-core\"] = factory(root[\"React\"], root[\"rxjsOperators\"], root[\"rxjs\"], root[\"reduxObservable\"], root[\"ReactRouter\"], root[\"ReactRedux\"], root[\"redux\"], root[\"ReactRouterDOM\"], root[\"shortid\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__10__, __WEBPACK_EXTERNAL_MODULE__15__, __WEBPACK_EXTERNAL_MODULE__16__, __WEBPACK_EXTERNAL_MODULE__20__, __WEBPACK_EXTERNAL_MODULE__29__, __WEBPACK_EXTERNAL_MODULE__59__, __WEBPACK_EXTERNAL_MODULE__60__, __WEBPACK_EXTERNAL_MODULE__83__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 84);\n","export enum VisualKeysDict {\r\n\t//Base data types:\r\n\theaderTxt = \"HeaderText\",\r\n\tsubHeaderTxt = \"SubHeaderText\",\r\n\tdescription = \"Description\",\r\n\tcancelTxt = \"cancelTxt\",\r\n\tconfirmTxt = \"confirmTxt\",\r\n\r\n\t//layout\r\n\tswitchVerticalDirection = \"switchVerticalDirection\",\r\n\tswitchHorizontalDirection = \"switchHorizontalDirection\",\r\n\tdirectionChangeBreakPoint = \"directionChangeBreakPoint\",\r\n\tcssClassName = \"cssClass\", //TODO: follow development of http://pending.schema.org/cssSelector and adjust\r\n\r\n\t//other\r\n\tpopOverContent = \"PopOverContent\",\r\n\ticonImg = \"IconImage\",\r\n\tvideoId = \"VideoID\",\r\n\ticonName = \"iconName\",\r\n\tutf8textData = \"utf8textData\",\r\n\r\n\t//Interpreters\r\n\tprimaryItpt = \"primaryInterpreter\", //e.g. left icon of a list, upper content of ImgHeadSubDesc\r\n\tsecondaryItpt = \"secondaryInterpreter\", //e.g. right icon of a list, bottom content of ImgHeadSubDesc\r\n\tinputContainer = \"inputContainer\", //e.g. for the bottomNavigation anything that is \"top\"\r\n\r\n\t//NavigationElement-keys\r\n\trouteSend_search = \"RouteSend_Search\",\r\n\trouteSend_back = \"RouteSend_Back\",\r\n\tsearchText = \"searchText\",\r\n\trouteSend_confirm = \"RouteSend_confirm\",\r\n\trouteSend_cancel = \"RouteSend_cancel\",\r\n}\r\n\r\nexport enum VisualTypesDict {\r\n\t//List-relevant Types\r\n\tcompactInfoElement = \"CompactInformationElement\",\r\n\t//Router-related Types\r\n\troute_added = \"Route_Added\",\r\n\troute_new = \"Route_New\",\r\n\troute_popLast = \"Route_PopLast\", //for back-navigation\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export enum UserDefDict {\r\n\t//keys\r\n\t/**\r\n\t * the name of a component defined by a user\r\n\t */\r\n\toutputSelfKey = \"outputSelf\",\r\n\tfinalInputKey = \"finalInput\",\r\n\texternalInput = \"externalInput\",\r\n\texternalOutput = \"externalOutput\",\r\n\r\n\t//some meta data:\r\n\tprojectname = \"projectName\",\r\n\tusername = \"userName\",\r\n\r\n\tconfigItpt = \"configurationBlocks\",\r\n\r\n\t/**\r\n\t * if a editor-defined interpreter references another interpreter that shall _not_ be sub-instantiated in the editor-defined\r\n\t * interpreter, a reference key to an external Interpreter is necessary\r\n\t */\r\n\texternalReferenceKey = \"externalReferenceKey\",\r\n\tintrprtrBPCfgRefMapKey = \"InterpreterReferenceMapKey\",\r\n\t/**\r\n\t * an outputKVMap inside of the value of a kv\r\n\t */\r\n\toutputKVMapKey = \"outputKVMapKey\",\r\n\r\n\t/**\r\n\t * in some cases, a value might exist without itself having a key. This happens for example when a wrapping LDOptions-Object only\r\n\t * has a a single value. For this case, singleKvStore is used so that the key is referencable (by OutputKvMap for example)\r\n\t */\r\n\tsingleKvStore = \"singleKvStore\",\r\n\r\n\t//values\r\n\toutputItpt = \"Output Info\",\r\n\r\n\t//types\r\n\t/**\r\n\t * if a kv-Store is typed with this type, then its value is another interpreter class\r\n\t */\r\n\tintrprtrClassType = \"InterpreterClassType\",\r\n\r\n\t/**\r\n\t * if a kv-Store is typed with this type, then its value is an ldTokenString on the state, i.e. a runtime-itpt\r\n\t */\r\n\tintrprtrObjectType = \"InterpreterObjectType\",\r\n\r\n\t/**\r\n\t * if a kv-store is type with this type, then its value is a reference key to the store (i.e. application state)\r\n\t */\r\n\tldTokenStringReference = \"ldTkStrRef\",\r\n\r\n\t/**\r\n\t * an outputKVMap inside of the value of a kv\r\n\t */\r\n\toutputKVMapType = \"outputKVMapType\",\r\n\r\n\t/**\r\n\t * if a kv-Store is typed with this type, then its value is a map containing Ld-Blueprint-Configs. This is useful,\r\n\t * because an interpreter is rarely defined as a perfect tree. Referencing between branches needs to be possible\r\n\t * (as in a DAG). E.g.: One interpreter (a) gets an image from an image service (b), which image that is depends on\r\n\t * another data service (c). (a) wants to display data and the image, so it references both (b and c), while (b)\r\n\t * only references (c). In the node-editor, no ports with this type should appear, as it is only necessary for\r\n\t * serialization\r\n\t */\r\n\tintrprtrBPCfgRefMapType = \"InterpreterReferenceMapType\",\r\n\tintrprtrBPCfgRefMapName = \"shnyder/RefMapInterpreter\",\r\n\r\n\titptContainerObjType = \"shnyder/ContainerObjType\",\r\n\r\n\tstandardItptObjectTypeSuffix = \"-ObjectType\",\r\n\r\n\t/**\r\n\t * in order for e.g. list elements to generate their own visuals,\r\n\t * they need to know which data element they should access.\r\n\t * This is like an \"id\" or \"key\" field (but those are already used in js/react)\r\n\t */\r\n\titeratorElementKey = \"iteratorElementKey\",\r\n\r\n\t/**\r\n\t * ambiguous input data, used when doing abstract data transformation\r\n\t */\r\n\tinputData = \"inputdata\",\r\n\r\n\t/**\r\n\t * ambiguous output data, used when doing abstract data transformation\r\n\t */\r\n\toutputData = \"outputdata\",\r\n}\r\n","export enum LDDict {\r\n\t//Base data types:\r\n\tBoolean = \"http://schema.org/Boolean\",\r\n\tInteger = \"http://schema.org/Integer\",\r\n\tDouble = \"http://schema.org/Number\",\r\n\tText =  \"http://schema.org/Text\",\r\n\tDate = \"http://schema.org/Date\",\r\n\tDateTime = \"http://schema.org/DateTime\",\r\n\t//classes:\r\n\tAction = \"https://schema.org/Action\",\r\n\tCreateAction = \"http://schema.org/CreateAction\",\r\n\tViewAction = \"http://schema.org/ViewAction\",\r\n\tImageObject = \"http://schema.org/ImageObject\",\r\n\tEntryPoint = \"http://http://schema.org/EntryPoint\",\r\n\tOrganization = \"http://schema.org/Organization\",\r\n\tURL = \"https://schema.org/URL\",\r\n\t//properties:\r\n\taddress = \"http://schema.org/address\",\r\n\ttarget = \"http://schema.org/target\",\r\n\tagent = \"http://schema.org/agent\",\r\n\tresult = \"http://schema.org/result\",\r\n\tcontentUrl = \"http://schema.org/contentUrl\",\r\n\tname = \"http://schema.org/name\",\r\n\tfileFormat = \"http://schema.org/fileFormat\",\r\n\tmanufacturer = \"http://schema.org/manufacturer\",\r\n\tdescription = \"http://schema.org/description\",\r\n\timage = \"http://schema.org/image\",\r\n\tgtin8 = \"http://schema.org/gtin8\",\r\n\r\n\temail = \"http://schema.org/email\",\r\n\tembedUrl = \"https://schema.org/embedUrl\",\r\n}\r\n\r\nexport type LDDictWildCard = LDDict | string;\r\n","import { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { LDOwnProps, LDRouteProps, LDConnectedState, LDLocalState, ReactCompLDLocalState, LDLocalKv } from \"appstate/LDProps\";\r\nimport { isObjPropertyRef, getKVValue } from \"ldaccess/ldUtils\";\r\nimport { appItptMatcherFn } from \"appconfig/appItptMatcher\";\r\nimport { ObjectPropertyRef } from \"ldaccess/ObjectPropertyRef\";\r\nimport { isReactComponent } from \"../reactUtils/reactUtilFns\";\r\nimport { IReactCompInfoItm, ReactCompInfoMap } from \"../reactUtils/iReactCompInfo\";\r\nimport { LDError } from \"appstate/LDError\";\r\nimport { BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { DEFAULT_ITPT_RETRIEVER_NAME } from \"defaults/DefaultItptRetriever\";\r\nimport { getKVStoreByKey, getAllKVStoresByKey } from \"ldaccess/kvConvenienceFns\";\r\nimport React from \"react\";\r\n\r\nexport function generateIntrprtrForProp(kvStores: IKvStore[], prop: string, retriever: string, routes: LDRouteProps): any {//JSX.Element {\r\n\tlet genKv = kvStores.find((elem) => elem.key === prop);\r\n\tif (!genKv) return null;\r\n\tif (!isObjPropertyRef(genKv.value)) return null;\r\n\tconst valAsObjPropRef: ObjectPropertyRef = genKv.value as ObjectPropertyRef;\r\n\tlet baseRMTkStr = valAsObjPropRef.objRef;\r\n\tlet BaseComp = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt(baseRMTkStr);\r\n\tif (BaseComp === null || BaseComp === undefined) {\r\n\t\tconsole.error(\"ItptReferenceMapType-component: itpt null or undefined\");\r\n\t\treturn null;\r\n\t}\r\n\tif (isReactComponent(BaseComp)) {\r\n\t\tconsole.log(\"baseToken: \" + baseRMTkStr);\r\n\t\treturn <BaseComp routes={routes} ldTokenString={baseRMTkStr} />;\r\n\t} else { return null; }\r\n}\r\n\r\nexport function generateCompInfoItm(kvStores: IKvStore[], prop: string, retriever: string): IReactCompInfoItm {\r\n\tlet rv: IReactCompInfoItm = null;\r\n\tlet genKv = kvStores.find((elem) => elem.key === prop);\r\n\tif (!genKv) return null;\r\n\tif (!isObjPropertyRef(genKv.value)) return null;\r\n\tconst valAsObjPropRef: ObjectPropertyRef = genKv.value as ObjectPropertyRef;\r\n\tlet baseRMTkStr = valAsObjPropRef.objRef;\r\n\tlet itpt = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt(baseRMTkStr);\r\n\tif (itpt === null || itpt === undefined) {\r\n\t\tconsole.error(\"ItptReferenceMapType-component: itpt null or undefined\");\r\n\t\treturn null;\r\n\t}\r\n\tif (isReactComponent(itpt)) {\r\n\t\trv = {\r\n\t\t\tcompClass: itpt,\r\n\t\t\tkey: prop,\r\n\t\t\tldTokenString: baseRMTkStr\r\n\t\t};\r\n\t\treturn rv;\r\n\t} else { return null; }\r\n}\r\n\r\nexport function generateAllCompInfoItms(kvStores: IKvStore[], prop: string, retriever: string): IReactCompInfoItm[] {\r\n\tlet rv: IReactCompInfoItm[] = [];\r\n\tlet genKvs = getAllKVStoresByKey(kvStores, prop); // kvStores.find((elem) => elem.key === prop);\r\n\tif (!genKvs || genKvs.length === 0) rv.push(null);\r\n\tfor (let i = 0; i < genKvs.length; i++) {\r\n\t\tconst genKv = genKvs[i];\r\n\t\tif (!isObjPropertyRef(genKv.value)) rv.push(null);\r\n\t\tconst valAsObjPropRef: ObjectPropertyRef = genKv.value as ObjectPropertyRef;\r\n\t\tlet baseRMTkStr = valAsObjPropRef.objRef;\r\n\t\tlet itpt = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt(baseRMTkStr);\r\n\t\tif (itpt === null || itpt === undefined) {\r\n\t\t\tconsole.error(\"ItptReferenceMapType-component: itpt null or undefined\");\r\n\t\t\trv.push(null);\r\n\t\t}\r\n\t\tif (isReactComponent(itpt)) {\r\n\t\t\tlet newComp = {\r\n\t\t\t\tcompClass: itpt,\r\n\t\t\t\tkey: prop,\r\n\t\t\t\tldTokenString: baseRMTkStr\r\n\t\t\t};\r\n\t\t\trv.push(newComp);\r\n\t\t} else { rv.push(null); }\r\n\t}\r\n\treturn rv;\r\n}\r\n\r\n/**\r\n * use this function in a react component for sub-render functions that return a component\r\n * example usage:\tprivate renderSub = generateItptFromCompInfo.bind(this);\r\n * render(){<>{this.renderSub(VisualDict.inputContainer)}<>}\r\n * @param compKey the key of the itpt-kv, e.g. VisualDict.inputContainer\r\n */\r\nexport function generateItptFromCompInfo(compKey: string, routes?: LDRouteProps, index?: number) {\r\n\tif (!compKey) return null;\r\n\tif (!this || !this.props || !this.props.routes || !this.state.compInfos) {\r\n\t\tthrow new LDError('function must be bound to a IBlueprintItpt with LDOwnProps and LDLocalState before being called');\r\n\t}\r\n\tconst compInfos = this.state.compInfos.get(compKey);\r\n\tlet compInfo = null;\r\n\tlet locIndex = !index ? 0 : index;\r\n\tif (Array.isArray(compInfos)) {\r\n\t\tcompInfo = compInfos[locIndex];\r\n\t\tif (compInfos.length === 1){\r\n\t\t\tcompInfo = compInfos[0];\r\n\t\t}\r\n\t} else {\r\n\t\tcompInfo = compInfos;\r\n\t}\r\n\tif (!compInfo) return null;\r\n\tlet BaseComp = compInfo.compClass;\r\n\tconst compRoutes = routes ? routes : this.props.routes;\r\n\t//console.log(compInfo.ldTokenString);\r\n\t//console.dir(compRoutes);\r\n\treturn <BaseComp key={locIndex} routes={compRoutes} ldTokenString={compInfo.ldTokenString} />;\r\n}\r\n\r\n/**\r\n * initializes the state of a BlueprintInterpreter along with react interpreters\r\n * @param cfg the BlueprintConfig to initialize from, usually: this.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n * @param props props of a component that are relevant for the ld-part\r\n * @param itptKeys //\r\n * @param kvKeys //\r\n * @param itptIsMulti //\r\n * @param kvIsMulti //\r\n * Optimization note: For performance reaosons, initialization of the state's react-part and\r\n * ld-part are combined. Check commit 59b2a48 and previous to compare\r\n */\r\nexport function initLDLocalState(\r\n\tcfg: BlueprintConfig,\r\n\tprops: LDConnectedState & LDOwnProps,\r\n\titptKeys: string[], kvKeys: string[],\r\n\titptIsMulti?: boolean[],\r\n\tkvIsMulti?: boolean[]\r\n): LDLocalState {\r\n\tlet rvCompInfo = new Map<string, IReactCompInfoItm | IReactCompInfoItm[]>();\r\n\tlet newValueMap = new Map<string, any>();\r\n\tlet newLDTypeMap = new Map<string, any>();\r\n\tlet retriever = DEFAULT_ITPT_RETRIEVER_NAME;\r\n\tif (cfg) {\r\n\t\tlet kvs = cfg.initialKvStores;\r\n\t\tif (props && props.ldOptions && props.ldOptions.visualInfo && props.ldOptions.visualInfo.retriever) {\r\n\t\t\tretriever = props.ldOptions.visualInfo.retriever;\r\n\t\t}\r\n\t\titptKeys.forEach((itptKey) => {\r\n\t\t\tlet compInfo = generateCompInfoItm(kvs, itptKey, retriever);\r\n\t\t\tif (!compInfo) return;\r\n\t\t\trvCompInfo.set(itptKey, compInfo);\r\n\t\t});\r\n\t\tkvKeys.forEach((itptKey) => {\r\n\t\t\tlet kv = getKVStoreByKey(kvs, itptKey);\r\n\t\t\tif (!kv) return;\r\n\t\t\tlet val = getKVValue(kv);\r\n\t\t\tnewValueMap.set(itptKey, val);\r\n\t\t\tnewLDTypeMap.set(itptKey, kv.ldType);\r\n\t\t});\r\n\t}\r\n\tif (props) {\r\n\t\tlet compState = getDerivedItptStateFromProps(\r\n\t\t\tprops, null, itptKeys, itptIsMulti\r\n\t\t);\r\n\t\tif (compState) {\r\n\t\t\trvCompInfo = compState.compInfos;\r\n\t\t}\r\n\t\tlet localState = getDerivedKVStateFromProps(\r\n\t\t\tprops, null, kvKeys, kvIsMulti\r\n\t\t);\r\n\t\tif (localState) {\r\n\t\t\tnewValueMap = localState.localValues;\r\n\t\t}\r\n\t}\r\n\treturn { compInfos: rvCompInfo, localValues: newValueMap, localLDTypes: newLDTypeMap };\r\n}\r\n\r\nexport function gdsfpLD(\r\n\tprops: LDConnectedState & LDOwnProps,\r\n\tprevState: null | LDLocalState,\r\n\titptKeys: string[],\r\n\tkvKeys: string[],\r\n\tcanInterpretType?: string,\r\n\titptIsMulti?: boolean[],\r\n\tkvIsMulti?: boolean[]\r\n): LDLocalState | null {\r\n\tlet rvCompInfo = new Map<string, IReactCompInfoItm | IReactCompInfoItm[]>();\r\n\tlet newValueMap = new Map<string, any>();\r\n\tlet newLDTypeMap = new Map<string, any>();\r\n\t// a) get state filled through the interpretableKeys\r\n\tlet reactCompLocalState = getDerivedItptStateFromProps(props, prevState, itptKeys, itptIsMulti);\r\n\tlet kvLocalState = getDerivedKVStateFromProps(props, prevState, kvKeys, kvIsMulti);\r\n\tif (!reactCompLocalState && !kvLocalState) {\r\n\t\tif (!canInterpretType) return null;\r\n\t\tlet candidate = props.ldOptions.resource.kvStores.find((kvStore) => kvStore.ldType === canInterpretType);\r\n\t\tif (!candidate) return null;\r\n\t}\r\n\tlet itptsLen = 0;\r\n\tlet kvsLen = 0;\r\n\tif (reactCompLocalState) {\r\n\t\trvCompInfo = reactCompLocalState.compInfos;\r\n\t\trvCompInfo.forEach((itpt) => {\r\n\t\t\tif (itpt) {\r\n\t\t\t\titptsLen++;\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\trvCompInfo = prevState.compInfos;\r\n\t}\r\n\tif (kvLocalState) {\r\n\t\tnewValueMap = kvLocalState.localValues;\r\n\t\tnewLDTypeMap = kvLocalState.localLDTypes;\r\n\t\tnewValueMap.forEach((val) => {\r\n\t\t\tif (val) {\r\n\t\t\t\tkvsLen++;\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tnewValueMap = prevState.localValues;\r\n\t\tnewLDTypeMap = prevState.localLDTypes;\r\n\t}\r\n\t// b) get state filled through a singleKv in the ldOptions.resources.kvstores,\r\n\t// \t\tif interpretableKeys aren't really filled and the Itpt can interpret a type\r\n\tif (canInterpretType && canInterpretType.length > 0 && itptsLen + kvsLen < itptKeys.length + kvKeys.length) {\r\n\t\tlet concatItptAndKvs = [...itptKeys, ...kvKeys];\r\n\t\tlet singleKvKey = determineSingleKVKey(props.ldOptions.resource.kvStores, canInterpretType, concatItptAndKvs);\r\n\t\tif (singleKvKey) {\r\n\t\t\tlet singleKv = props.ldOptions.resource.kvStores.find((kvSt) => kvSt.key === singleKvKey);\r\n\t\t\tif (singleKv && singleKv.value) {\r\n\t\t\t\tlet skvArray = [];\r\n\t\t\t\tif (Array.isArray(singleKv.value)) {\r\n\t\t\t\t\tskvArray = singleKv.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tskvArray.push(singleKv.value);\r\n\t\t\t\t}\r\n\t\t\t\tskvArray.forEach((skvElem) => {\r\n\t\t\t\t\tif (typeof skvElem === 'object' && skvElem !== null) {\r\n\t\t\t\t\t\tconcatItptAndKvs.forEach((anInterpretableKey, idx) => {\r\n\t\t\t\t\t\t\tif (skvElem.hasOwnProperty(anInterpretableKey)) {\r\n\t\t\t\t\t\t\t\tconst skvElemMember = skvElem[anInterpretableKey];\r\n\t\t\t\t\t\t\t\tnewValueMap.set(anInterpretableKey, skvElemMember);\r\n\t\t\t\t\t\t\t\tnewLDTypeMap.set(anInterpretableKey, skvElemMember);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (singleKv.ldType === UserDefDict.intrprtrClassType) {\r\n\t\t\t\t\t\t\trvCompInfo.set(UserDefDict.singleKvStore, skvElem);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewValueMap.set(UserDefDict.singleKvStore, skvElem);\r\n\t\t\t\t\t\t\tnewLDTypeMap.set(UserDefDict.singleKvStore, singleKv.ldType);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { compInfos: rvCompInfo, localValues: newValueMap, localLDTypes: newLDTypeMap };\r\n}\r\n\r\nfunction getDerivedItptStateFromProps(\r\n\tprops: LDConnectedState & LDOwnProps,\r\n\tprevState: null | ReactCompLDLocalState,\r\n\titptKeys: string[],\r\n\tisMulti?: boolean[]): null | ReactCompLDLocalState {\r\n\tlet rv: null | ReactCompLDLocalState = null;\r\n\tif (props && prevState && itptKeys && itptKeys.length > 0) {\r\n\t\tif (props.ldOptions && props.ldOptions.resource && props.ldOptions.resource.kvStores) {\r\n\t\t\tif (isMulti && isMulti.length !== itptKeys.length) {\r\n\t\t\t\tconsole.warn(\"parameter isMulti in getDerivedItptStateFromProps has been set, \" +\r\n\t\t\t\t\t\"but is not set for all itptKeys. Aborting function\");\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t\tlet kvs: IKvStore[];\r\n\t\t\tlet retriever = props.ldOptions.visualInfo.retriever;\r\n\t\t\tkvs = props.ldOptions.resource.kvStores;\r\n\t\t\tlet newMap: ReactCompInfoMap = new Map<string, IReactCompInfoItm | IReactCompInfoItm[]>();\r\n\t\t\titptKeys.forEach((itptKey, idx) => {\r\n\t\t\t\tif (isMulti && isMulti[idx]) {\r\n\t\t\t\t\tlet compInfos = generateAllCompInfoItms(kvs, itptKey, retriever);\r\n\t\t\t\t\tfor (let i = 0; i < compInfos.length; i++) {\r\n\t\t\t\t\t\tconst compInfo = compInfos[i];\r\n\t\t\t\t\t\tif (!newMap.has(itptKey)) {\r\n\t\t\t\t\t\t\tnewMap.set(itptKey, [compInfo]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t(newMap.get(itptKey) as IReactCompInfoItm[]).push(compInfo);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet compInfo = generateCompInfoItm(kvs, itptKey, retriever);\r\n\t\t\t\t\tif (!compInfo) return;\r\n\t\t\t\t\tnewMap.set(itptKey, compInfo);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t//TODO: check for compInfo-equality and return null if nothing has changed\r\n\t\t\tif (newMap.size === 0) return null;\r\n\t\t\trv = prevState ? { ...prevState, compInfos: newMap } : { compInfos: newMap };\r\n\t\t}\r\n\t}\r\n\treturn rv;\r\n}\r\n\r\nfunction getDerivedKVStateFromProps(\r\n\tprops: LDOwnProps & LDConnectedState,\r\n\tprevState: LDLocalKv,\r\n\tkvKeys: string[],\r\n\tisMulti?: boolean[]\r\n): LDLocalKv | null {\r\n\tif (props.ldOptions && props.ldOptions.resource && props.ldOptions.resource.kvStores && kvKeys.length > 0) {\r\n\t\tif (isMulti && isMulti.length !== kvKeys.length) {\r\n\t\t\tconsole.warn(\"parameter isMulti in getDerivedKVStateFromProps has been set, \" +\r\n\t\t\t\t\"but is not set for all kvKeys. Aborting function\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet kvs: IKvStore[];\r\n\t\t//let retriever = props.ldOptions.visualInfo.retriever;\r\n\t\tkvs = props.ldOptions.resource.kvStores;\r\n\t\tlet newValueMap = new Map<string, any>();\r\n\t\tlet newLDTypeMap = new Map<string, any>();\r\n\t\tkvKeys.forEach((itptKey, idx) => {\r\n\t\t\tif (isMulti && isMulti[idx]) {\r\n\t\t\t\tlet multiKvs = getAllKVStoresByKey(kvs, itptKey);\r\n\t\t\t\tfor (let i = 0; i < multiKvs.length; i++) {\r\n\t\t\t\t\tconst elemFromMulti = multiKvs[i];\r\n\t\t\t\t\tif (!newValueMap.has(itptKey)) {\r\n\t\t\t\t\t\tnewLDTypeMap.set(itptKey, elemFromMulti.ldType);\r\n\t\t\t\t\t\tnewValueMap.set(itptKey, [getKVValue(elemFromMulti)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewValueMap.get(itptKey).push(getKVValue(elemFromMulti));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet kv = getKVStoreByKey(kvs, itptKey);\r\n\t\t\t\tif (!kv) return;\r\n\t\t\t\tnewLDTypeMap.set(itptKey, kv.ldType);\r\n\t\t\t\tlet val = getKVValue(kv);\r\n\t\t\t\tnewValueMap.set(itptKey, val);\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (!prevState) {\r\n\t\t\treturn { localValues: newValueMap, localLDTypes: newLDTypeMap };\r\n\t\t}\r\n\t\tif (prevState.localValues.size === newValueMap.size) {\r\n\t\t\ttry {\r\n\t\t\t\tprevState.localValues.forEach((val, key) => {\r\n\t\t\t\t\tif (!newValueMap.has(key)) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (newValueMap.get(key) !== val) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (newLDTypeMap.get(key) !== prevState.localLDTypes.get(key)) {\r\n\t\t\t\t\t\tthrow Error();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn { localValues: newValueMap, localLDTypes: newLDTypeMap };\r\n\t\t\t}\r\n\t\t} else if (newValueMap.size !== 0) {\r\n\t\t\treturn { localValues: newValueMap, localLDTypes: newLDTypeMap };\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * used e.g. for BaseDataTypeInput. When generic containers deconstruct the object given to them, they\r\n * construct interpreters based on the type of that object's properties. To display that property name\r\n * as a description in the interpreter, we need to determine its key. For example:\r\n * {myTimesheetContainerData: {workhours: 7.7, date: 2018-06-09, forProject: 'Customer Project 1'}}\r\n * would result in a container splitting myTimeSheetContainerData up into three interpreters,\r\n * workhours with a number double input field and \"workhours\" as the description,\r\n * date with a date input and \"date\" description, and a text field containing \"Customer Project 1\"\r\n * and \"forProject\" as the description\r\n * @param kvStores the kvStores to determine singleKVKey from\r\n */\r\nexport function determineSingleKVKey(kvStores: IKvStore[], canInterpretType: string, interpretableKeys: string[]): string {\r\n\tlet rv: string = UserDefDict.singleKvStore;\r\n\tlet candidates: IKvStore[] = [];\r\n\tif (kvStores) {\r\n\t\tfor (let idx = 0; idx < kvStores.length; idx++) {\r\n\t\t\tconst a = kvStores[idx];\r\n\t\t\tif (a.key === UserDefDict.singleKvStore) return rv;\r\n\t\t\tif (a.key === UserDefDict.inputData) return UserDefDict.outputData;\r\n\t\t\tif (a.key === UserDefDict.outputKVMapKey) continue;\r\n\t\t\tif (kvStores[idx].ldType === canInterpretType) {\r\n\t\t\t\tcandidates.push(kvStores[idx]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (candidates.length === 1) {\r\n\t\trv = candidates[0].key as string;\r\n\t} else {\r\n\t\tcandidates.filter((a) => interpretableKeys.includes(a.key));\r\n\t\trv = candidates.length > 0 ? candidates[0].key : rv;\r\n\t}\r\n\treturn rv;\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { LDError } from 'appstate/LDError';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { ObjectPropertyRef } from 'ldaccess/ObjectPropertyRef';\r\nimport { ILDToken } from 'ldaccess/ildtoken';\r\n\r\nexport type ConsumeLDOptionsFunc = (ldOptions: ILDOptions) => any;\r\n\r\nexport type OutputKVMapElement = { targetLDToken: ILDToken, targetProperty: string };\r\n/**\r\n * maps the kvStores that produce/change values in this itpt to a token string and a target property\r\n * on the object that is referenced by the token string\r\n * e.g. { \"http://schema.com/name\": {targetLDToken: \"someUID\", targetProperty: \"someTextField\"}}\r\n */\r\nexport type OutputKVMap = { [key: string]: OutputKVMapElement[] };\r\n\r\nexport interface IBlueprintItpt {\r\n    cfg: BlueprintConfig;\r\n    consumeLDOptions: ConsumeLDOptionsFunc;\r\n    initialKvStores: IKvStore[];\r\n}\r\n\r\n/**\r\n * initialKvStores will be overriden if defined in config.\r\n * The order of initialKvStores and getInterpretableKeys is important, especially for\r\n * visual components, e.g.: display image as header, then text as heading, text as subheading, then text as description\r\n */\r\nexport interface BlueprintConfig {\r\n    subItptOf: string;\r\n    canInterpretType?: string;\r\n    nameSelf: string;\r\n    initialKvStores?: IKvStore[];\r\n    crudSkills: string;\r\n    interpretableKeys: (string | ObjectPropertyRef)[];\r\n}\r\n\r\nfunction handleKVInheritance(baseClassKV: IKvStore[], subClassKV: IKvStore[], isReplace: boolean): IKvStore[] {\r\n    let rv: IKvStore[] = [];\r\n    if (isReplace) {\r\n        rv = subClassKV ? subClassKV : baseClassKV;\r\n    } else {\r\n        if (!baseClassKV) {\r\n            rv = subClassKV;\r\n        } else {\r\n            let baseCopy = baseClassKV.slice();\r\n            subClassKV.forEach((kv, idx, arr) => {\r\n                let findIdx = baseCopy.findIndex((findKv) => findKv.key === kv.key);\r\n                rv.push(kv);\r\n                if (findIdx >= 0) {\r\n                    baseCopy.splice(findIdx, 1);\r\n                }\r\n            });\r\n            rv.push(...baseCopy);\r\n        }\r\n    }\r\n    return rv;\r\n}\r\n\r\n// tslint:disable-next-line:callable-types\r\nfunction blueprintDecorator<T extends { new(...args: any[]): IBlueprintItpt }>(constructorFn: T, blueprintCfg: BlueprintConfig, replaceKVs: boolean = false) {\r\n    var classToExtend = null;\r\n    if (typeof constructorFn !== 'function') throw new LDError(\"blueprint was not decorated on a function, but on: \" + constructorFn);\r\n    classToExtend = class extends constructorFn {\r\n        static nameSelf = blueprintCfg.nameSelf;\r\n        static cfg = blueprintCfg;\r\n        initialKvStores = this[\"initialKvStores\"]\r\n            ? handleKVInheritance(this[\"initialKvStores\"], blueprintCfg.initialKvStores, replaceKVs)\r\n            : blueprintCfg.initialKvStores;\r\n        interpretableKeys = blueprintCfg.interpretableKeys;\r\n    };\r\n    return classToExtend;\r\n}\r\n\r\nexport const ldBlueprint = (blueprintCfg: BlueprintConfig, replaceKVs: boolean = false) => {\r\n    //eval phase\r\n    if (blueprintCfg == null) throw new LDError(\"blueprintCfg must not be null\");\r\n    if (blueprintCfg.nameSelf == null) throw new LDError(\"blueprintCfg.nameSelf must not be null\");\r\n    if (blueprintCfg.canInterpretType == null) {\r\n        //autmatically generate an itpt-specific Instance type\r\n        blueprintCfg.canInterpretType = blueprintCfg.nameSelf + UserDefDict.standardItptObjectTypeSuffix;\r\n    }\r\n    if (blueprintCfg.crudSkills == null) throw new LDError(\"blueprintCfg.crudSkills must not be null\");\r\n    if (blueprintCfg.interpretableKeys == null) throw new LDError(\"blueprintCfg.interpretableKeys must not be null\");\r\n    // tslint:disable-next-line:callable-types\r\n    return <T extends { new(...args: any[]): IBlueprintItpt }>(target: T) => {\r\n        return blueprintDecorator(target, blueprintCfg, replaceKVs);\r\n    };\r\n}\r\n","import { OBJECT_REF } from \"ldaccess/ObjectPropertyRef\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { ILDResource, ILDWebResource } from \"ldaccess/ildresource\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { OutputKVMap, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { LDError } from \"appstate/LDError\";\r\n\r\nexport const isItpt = (input: any): boolean => {\r\n\tif (!input) return false;\r\n\treturn input.hasOwnProperty(\"cfg\");\r\n};\r\n\r\nexport const isUID = (input: string): boolean => {\r\n\tlet regExp = new RegExp(\"^(\\{{0,1}([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}\\}{0,1})$\");\r\n\treturn regExp.test(input);\r\n};\r\n\r\nexport const isObjPropertyRef = (input: any): boolean => {\r\n\tif (!input) return false;\r\n\treturn input.hasOwnProperty(OBJECT_REF);\r\n};\r\n\r\n/**\r\n * \t//iterates and return false at first non-equal value. Only checks KvStores, not the whole Resource!\r\n * @param a one of the ldOptions-Obj to compare\r\n * @param b the other ldOptions-Obj\r\n */\r\nexport const isLDOptionsSame = (a: ILDOptions, b: ILDOptions): boolean => {\r\n\tif ((!a || !b) && !(!a && !b)) return false;\r\n\tif (!a && !b) return true;\r\n\tif (a.isLoading !== b.isLoading) return false;\r\n\tif (a.lang !== b.lang) return false;\r\n\tif (a.ldToken !== b.ldToken) return false;\r\n\tif (!a.resource && !b.resource) return true;\r\n\tif (!(a.resource && b.resource)) return false;\r\n\tlet kvsA = a.resource.kvStores;\r\n\tlet kvsB = b.resource.kvStores;\r\n\tif (kvsA.length !== kvsB.length) return false;\r\n\tif (a.resource.webInResource || b.resource.webInResource) {\r\n\t\tif (a.resource.webInResource !== b.resource.webInResource) return false;\r\n\t}\r\n\tif (a.resource.webOutResource || b.resource.webOutResource) {\r\n\t\tif (a.resource.webOutResource !== b.resource.webOutResource) return false; //TODO: resources could have shallow object checks\r\n\t}\r\n\tlet isKVsSame: boolean = kvsA.every((aVal, idx: number) => {\r\n\t\tlet bVal = kvsB[idx];\r\n\t\tif (aVal.key !== bVal.key) return false;\r\n\t\tif (aVal.ldType !== bVal.ldType) return false;\r\n\t\tif (aVal.value || bVal.value) {\r\n\t\t\tif (JSON.stringify(aVal.value) !== JSON.stringify(bVal.value)) return false;\r\n\t\t}\r\n\t\t//if (aVal.intrprtrClass !== bVal.intrprtrClass) return false;\r\n\t\treturn true;\r\n\t});\r\n\treturn isKVsSame;\r\n};\r\n\r\nexport const ldBlueprintCfgDeepCopy = (input: BlueprintConfig): BlueprintConfig => {\r\n\tlet rv: BlueprintConfig;\r\n\trv = JSON.parse(JSON.stringify(input));\r\n\treturn rv;\r\n};\r\n\r\nexport const ldOptionsDeepCopy = (input: ILDOptions): ILDOptions => {\r\n\tif (!input) throw new LDError(\"ldOptionsDeepCopy: input must not be null or undefined\");\r\n\tlet rv: ILDOptions;\r\n\tlet newKVStores: IKvStore[] = [];\r\n\tinput.resource.kvStores.forEach((elem) => {\r\n\t\tlet newKey = elem.key ? \"\" + elem.key : null;\r\n\t\tlet newValue = null;\r\n\t\tlet valType = typeof elem.value;\r\n\t\tif (elem.value) {\r\n\t\t\tif (valType === 'object') {\r\n\t\t\t\tif (elem.value.constructor === Array) {\r\n\t\t\t\t\tlet elemValAsArray: Array<any> = elem.value as Array<any>;\r\n\t\t\t\t\tnewValue = elemValAsArray.slice(0, elemValAsArray.length);\r\n\t\t\t\t} else\r\n\t\t\t\t\tif (elem.value.constructor === Date) {\r\n\t\t\t\t\t\tnewValue = new Date(elem.value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewValue = { ...elem.value };\r\n\t\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnewValue = elem.value;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (valType === 'boolean' || valType === 'number')\r\n\t\t\tnewValue = elem.value;\r\n\t\tlet newLDType = elem.ldType ? \"\" + elem.ldType : null;\r\n\t\tlet newKvSingle: IKvStore = {\r\n\t\t\t//intrprtrClass: elem.intrprtrClass,\r\n\t\t\tkey: newKey,\r\n\t\t\tvalue: newValue,\r\n\t\t\tldType: newLDType\r\n\t\t};\r\n\t\tnewKVStores.push(newKvSingle);\r\n\t});\r\n\tlet newWebInResource: ILDWebResource = null;\r\n\tlet newWebOutResource: string = null;\r\n\tlet newResource: ILDResource = { kvStores: newKVStores, webOutResource: newWebOutResource, webInResource: newWebInResource };\r\n\trv = {\r\n\t\t...input,\r\n\t\tresource: newResource\r\n\t};\r\n\treturn rv;\r\n};\r\n\r\nexport const isOutputKVSame = (a: OutputKVMap, b: OutputKVMap): boolean => {\r\n\tif ((!a || !b) && !(!a && !b)) return false;\r\n\tif (!a && !b) return true;\r\n\tlet pnsA = Object.getOwnPropertyNames(a);\r\n\tlet pnsB = Object.getOwnPropertyNames(b);\r\n\tif (pnsA.length !== pnsB.length) return false;\r\n\tlet isSame = pnsA.every((aPN, idx: number) => {\r\n\t\tlet aVal = a[aPN];\r\n\t\tlet bVal = b[aPN];\r\n\t\tif (aVal.length !== bVal.length) return false;\r\n\t\tfor (let i = 0; i < aVal.length; i++) {\r\n\t\t\tconst elemA = aVal[i];\r\n\t\t\tconst elemB = bVal[i];\r\n\t\t\tif (!elemA || !elemB) return false;\r\n\t\t\tif (elemA.targetProperty !== elemB.targetProperty) return false;\r\n\t\t\tif (elemA.targetLDToken.get() !== elemB.targetLDToken.get()) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t});\r\n\treturn isSame;\r\n};\r\n\r\nexport const getKVValue = (input: IKvStore | string | number): any => {\r\n\tif (typeof input !== 'object') return input;\r\n\tif (!input || input.value === null || input.value === undefined) return null;\r\n\tif (input.value.constructor === Array) {\r\n\t\tif ((input.value as Array<any>).length === 1) return input.value[0];\r\n\t}\r\n\tif (isObjPropertyRef(input.value)) return null;\r\n\treturn input.value;\r\n};\r\n\r\nexport const itptKeysFromInputKvs = (inputKvStores: IKvStore[]): string[] => {\r\n\tlet rv = [];\r\n\tinputKvStores.forEach((value) => {\r\n\t\trv.push(value.key);\r\n\t});\r\n\treturn rv;\r\n};\r\n","export const ITPT_LINEAR_SPLIT = 'l';\r\nexport const ITPT_REFMAP_BASE = \"rmb\";\r\n\r\nexport const ITPT_TAG_SPECIAL = \"special\";\r\nexport const ITPT_TAG_ATOMIC = \"atomic\";\r\nexport const ITPT_TAG_MOD = \"mod\";\r\nexport const ITPT_TAG_COMPOUND = \"compound\";\r\n\r\nexport interface IItptRetriever {\r\n    /**\r\n     * the interpreter has a name-attribute so\r\n     * that different ILDOptions-typed objects can use their\r\n     * visualInfo property to choose their own retriever\r\n     */\r\n    name: string;\r\n    /*\r\n     * searches for interpreters that:\r\n     * a) can interpret the 'term' -> rdfs:class or rdfs:property\r\n     * b) offer some or all CRUD functions, as a string in the following format:\r\n     * UPPERCASE for supported functions, lower-case for unsupported functions\r\n     * e.g. crudSkills = 'cRuD' can read and delete, but not create and update\r\n     *\r\n     **/\r\n    searchForObjItpt(term: string | Array<string>, crudSkills: string): any;\r\n    searchForKVItpt(term: string, crudSkills: string): any;\r\n    addItpt(typeName: string, itpt: any, crudSkills: string, tags: string[]): void;\r\n    getItptList(): Array<any>;\r\n    getItptByNameSelf(nameSelf: string): any;\r\n\r\n    /**\r\n     * sets an interpreter that is derived from other existing interpreters,\r\n     * for a specific ldTokenVal (which are unique).\r\n     * Derived Interpreters will not be used for automatic matching, they're\r\n     * used for sub-Interpreters in ReferenceMaps e.g.\r\n     * @param ldTokenVal the ldTokenValue as found in the application's state\r\n     * @param itpt the interpreter function or class\r\n     */\r\n    setDerivedItpt(ldTokenVal: string, itpt: any): void;\r\n    /**\r\n     * checks whether an interpreter exists for this ldTokenVal\r\n     * @param ldTokenVal the ldTokenValue as found in the application's state\r\n     */\r\n    hasDerivedItpt(ldTokenVal: string): boolean;\r\n    /**\r\n     * retrieves the interpreter for this ldTokenVal, if it exists\r\n     * @param ldTokenVal the ldTokenValue as found in the application's state\r\n     * @returns the interpreter or null\r\n     */\r\n    getDerivedItpt(ldTokenVal: string): any;\r\n}\r\n","export enum ActionKeysDict {\r\n\t/**\r\n\t * for Actions like button clicks, NavProcessAtom-confirms etc.\r\n\t */\r\n\taction_confirm = \"Action_Confirm\",\r\n\t/**\r\n\t * the act of selecting an item, e.g. from a list\r\n\t */\r\n\taction_select = \"Action_Select\",\r\n\t/**\r\n\t * kvStore with this key will be pushed to a registered ActionHandler\r\n\t */\r\n\taction_internal = \"Action_internal\",\r\n\t/**\r\n\t * when a Route is matched\r\n\t */\r\n\taction_onRoute = \"Action_onRoute\",\r\n\t/**\r\n\t * for the handler to declare it can handle a type\r\n\t */\r\n\tcanHandleType = \"canHandleType\",\r\n\t/**\r\n\t * for the handler to declare it can handle an id\r\n\t */\r\n\tcanHandleId = \"canHandleId\",\r\n}\r\n\r\nexport enum ActionTypesDict {\r\n\t/**\r\n\t * an Action inside the frontend, not to be confused with http://schema.org/Action\r\n\t */\r\n\tmetaExplorerAction = \"MetaExplorerAction\",\r\n}\r\n\r\nexport interface ActionType {\r\n\tldId: string;\r\n\tldType: string;\r\n\tpayload: any;\r\n}\r\n","import * as shortId from \"shortid\";\r\nimport { ITPT_LINEAR_SPLIT, ITPT_REFMAP_BASE } from \"./iitpt-retriever\";\r\n/**\r\n * adds the requirement for a getter and setter function for the token value.\r\n * This is necessary because tokens are very simple objects, but shouldn't\r\n * only be strings because access and modification should be controlled.\r\n * Furthermore, a value can be different on the client than on the server,\r\n * or whatever resource on the network it is getting it from.\r\n * e.g. when the client creates a value that the server hasn't (got/created/accepted/received)\r\n * That's why there's a separation between the network value and the local client value\r\n */\r\nexport interface ILDToken {\r\n\tgetNetworkVal(): string;\r\n\tsetNetworkVal(val: string);\r\n\tgetClientTokenVal(): string;\r\n\tsetClientTokenVal(val: string);\r\n\tget(): string;\r\n}\r\n\r\nexport function createConcatNetworkPreferredToken(inputLDTokenString: string, targetIntrprtrLnk: string): NetworkPreferredToken {\r\n\treturn new NetworkPreferredToken(inputLDTokenString + \"_\" + targetIntrprtrLnk);\r\n}\r\n\r\nexport function linearLDTokenStr(ldTokenStr: string, id: number): string {\r\n\treturn ldTokenStr + '-' + ITPT_LINEAR_SPLIT + id;\r\n}\r\n\r\nexport function refMapBaseTokenStr(ldTokenStr: string): string {\r\n\treturn ldTokenStr + \"_\" + ITPT_REFMAP_BASE;\r\n}\r\n\r\nexport class NetworkPreferredToken implements ILDToken {\r\n\tprivate nwVal: string = null;\r\n\tprivate clientVal: string = null;\r\n\r\n\tconstructor(initialVal: string) {\r\n\t\tif (!initialVal || initialVal.length === 0)\r\n\t\t\tthis.clientVal = shortId.generate();\r\n\t\telse\r\n\t\t\tthis.clientVal = initialVal;\r\n\t}\r\n\tgetNetworkVal(): string {\r\n\t\treturn this.nwVal;\r\n\t}\r\n\tsetNetworkVal(val: string) {\r\n\t\tif (!val || val.length === 0) this.nwVal = null;\r\n\t\tthis.nwVal = val;\r\n\t}\r\n\tgetClientTokenVal(): string {\r\n\t\treturn this.clientVal;\r\n\t}\r\n\tsetClientTokenVal(val: string) {\r\n\t\tif (!val || val.length === 0) this.clientVal = null;\r\n\t\tthis.clientVal = val;\r\n\t}\r\n\tget(): string {\r\n\t\t//let rv: string = null;\r\n\t\tif (this.clientVal && this.nwVal) return this.nwVal;\r\n\t\tif (!this.clientVal && !this.nwVal) return null;\r\n\t\treturn this.clientVal ? this.clientVal : this.nwVal;\r\n\t}\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { Store } from 'redux';\r\nimport { Provider, connect } from 'react-redux';\r\nimport { ExplorerState, configureStore, modAPI, IAppConfigStatePart } from 'appstate/store';\r\nimport './styles/styles.scss';\r\n//import { DevTools } from './appstate/devTools';\r\nimport { initLDConnect } from 'sidefx/nonVisualConnect';\r\nimport {\r\n\tBrowserRouter as Router\r\n} from 'react-router-dom';\r\nimport { appItptMatcherFn } from 'appconfig/appItptMatcher';\r\nimport { initEssentialInterpreters } from 'components/essentials/initEssentialItptRetrieverSetup';\r\nimport { Route, Switch } from 'react-router';\r\nimport { LDRouteProps } from 'appstate/LDProps';\r\nimport { initEssentialItpts } from 'defaults/initEssentialItpts';\r\nimport { initGameItpt } from 'components/game/initGameItpts';\r\nimport { initBaseHtmlItpt } from 'components/basic-html/initBaseHtmlItpt';\r\nimport { LDApproot } from 'ldapproot';\r\n//import { initShnyderItpts } from 'components/shnyder/initShnyderItpts';\r\nimport { initRequiredMods } from 'modding/initMods';\r\nimport { mapStateToPropsRoot } from 'appstate/reduxFns';\r\nimport { IModSpec } from 'apis/mod-api';\r\n\r\nexport const APP_LD_KEY = \"app\";\r\n\r\nconst firstDisplayedBlock: string = \"shnyder-website/main-page\";\r\n\r\nconst initialState: ExplorerState = {\r\n\tappCfg: {\r\n\t\tappKey: APP_LD_KEY,\r\n\t\tmainItpt: firstDisplayedBlock,\r\n\t\terrorMsg: null\r\n\t},\r\n\tldoptionsMap: {},\r\n\tldNonVisualMap: {},\r\n\tmods: {\r\n\t\tisIdle: true,\r\n\t\tmap: {}\r\n\t},\r\n\tisLoading: false,\r\n\tactionHandlerMap: {\r\n\t\tidHandler: {},\r\n\t\ttypehandler: {}\r\n\t}\r\n};\r\n\r\nexport interface AppRootProps {\r\n\tcfg: IAppConfigStatePart;\r\n\tisLoading: boolean;\r\n}\r\nexport interface AppRootState {\r\n\tisDemoInitialized: boolean;\r\n\tcfg: IAppConfigStatePart;\r\n\tisLoading: boolean;\r\n}\r\nexport const applicationStore: Store<ExplorerState> = configureStore(initialState);\r\nexport function rootSetup(requiredMods: IModSpec[]): void {\r\n\tappItptMatcherFn();\r\n\tinitEssentialItpts();\r\n\tinitBaseHtmlItpt();\r\n\tinitEssentialInterpreters();\r\n\tinitGameItpt();\r\n\tinitLDConnect();\r\n\tinitRequiredMods(modAPI, requiredMods);\r\n\t//initShnyderItpts();\r\n}\r\n\r\nexport class PureAppRoot extends Component<AppRootProps, AppRootState>{\r\n\r\n\tstatic getDerivedStateFromProps(nextProps: AppRootProps, prevState: AppRootState): AppRootState | null {\r\n\t\tif (!prevState || !prevState.cfg ||\r\n\t\t\tprevState.cfg.appKey !== nextProps.cfg.appKey\r\n\t\t\t|| prevState.cfg.mainItpt !== nextProps.cfg.mainItpt\r\n\t\t\t|| prevState.isLoading !== nextProps.isLoading\r\n\t\t\t|| !!nextProps.cfg.errorMsg\r\n\t\t) {\r\n\t\t\treturn { ...prevState, ...nextProps };\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisDemoInitialized: false,\r\n\t\t\tcfg: { appKey: \"\", mainItpt: \"\", errorMsg: null },\r\n\t\t\tisLoading: true\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { cfg, isLoading } = this.state;\r\n\t\tconst errorMsg = cfg.errorMsg;\r\n\t\tif (errorMsg) {\r\n\t\t\treturn <div>encountered an error while loading a Mod: {errorMsg}</div>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{!isLoading ?\r\n\t\t\t\t\t<Router>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path=\"/\" render={(routeProps: LDRouteProps) => {\r\n\t\t\t\t\t\t\t\treturn <LDApproot initiallyDisplayedItptName={cfg.mainItpt}\r\n\t\t\t\t\t\t\t\t\tldTokenString={cfg.appKey} routes={routeProps} />;\r\n\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t{/*<Route component={FourOhFournomatch} />*/}\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Router>\r\n\t\t\t\t\t: <div className=\"approot-loading\">loading</div>}\r\n\t\t\t\t{/*isProduction ? null : isStateDebug ? <DevTools /> : null*/}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst ReduxAppRoot = connect<AppRootProps>(mapStateToPropsRoot)(PureAppRoot);\r\n\r\nexport const AppRoot = () =>\r\n\t<Provider store={applicationStore}>\r\n\t\t<ReduxAppRoot />\r\n\t</Provider>;\r\n","export class LDError extends Error{\r\n\r\n}\r\n\r\nexport interface LDErrorMsgState{\r\n    type: string;\r\n    message: string;\r\n}\r\n","import { ActionsObservable, ofType } from 'redux-observable';\r\nimport { from, of } from 'rxjs';\r\nimport { LDError, LDErrorMsgState } from './../LDError';\r\nimport { ILDOptionsMapStatePart } from 'appstate/store';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { ILDToken, NetworkPreferredToken } from 'ldaccess/ildtoken';\r\nimport { ldOptionsDeepCopy } from 'ldaccess/ldUtils';\r\nimport { DEFAULT_ITPT_RETRIEVER_NAME } from 'defaults/DefaultItptRetriever';\r\nimport { OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\r\nimport { LDOptionsAPI } from 'apis/ldoptions-api';\r\nimport { applicationStore } from 'approot';\r\nimport { ActionKeysDict } from 'components/actions/ActionDict';\r\nimport { ILDWebResource } from 'ldaccess/ildresource';\r\n\r\nexport const LDOPTIONS_CLIENTSIDE_CREATE = 'shnyder/LDOPTIONS_CLIENTSIDE_CREATE';\r\nexport const LDOPTIONS_CLIENTSIDE_UPDATE = 'shnyder/LDOPTIONS_CLIENTSIDE_UPDATE';\r\nexport const LDOPTIONS_REQUEST_ASYNC = 'shnyder/LDOPTIONS_REQUEST_ASYNC';\r\nexport const LDOPTIONS_REQUEST_ERROR = 'shnyder/LDOPTIONS_REQUEST_ERROR';\r\nexport const LDOPTIONS_REQUEST_RESULT = 'shnyder/LDOPTIONS_REQUEST_RESULT';\r\nexport const LDOPTIONS_KV_UPDATE = 'shnyder/LDOPTIONS_KV_UPDATE';\r\nexport const ACTION_LDACTION = 'shnyder/ACTION_LDACTION';\r\n\r\nexport type LD_KVUpdateAction = { type: 'shnyder/LDOPTIONS_KV_UPDATE', changedKvStores: IKvStore[], thisLdTkStr: string, updatedKvMap: OutputKVMap };\r\n\r\nexport type LDActionType = { type: 'shnyder/ACTION_LDACTION', payload: any, idHandler: string, typeHandler: string };\r\n\r\nexport type LDAction =\r\n\t{ type: 'shnyder/LDOPTIONS_CLIENTSIDE_CREATE', kvStores: IKvStore[], lang: string, alias: string }\r\n\t| { type: 'shnyder/LDOPTIONS_CLIENTSIDE_UPDATE', updatedLDOptions: ILDOptions }\r\n\t| { type: 'shnyder/LDOPTIONS_REQUEST_ASYNC', isExternalAPICall: boolean, uploadData: ILDOptions, targetUrl: string, targetReceiverLnk: string }\r\n\t| { type: 'shnyder/LDOPTIONS_REQUEST_RESULT', ldOptionsPayload: ILDWebResource, targetReceiverLnk: string }\r\n\t| { type: 'shnyder/LDOPTIONS_REQUEST_ERROR', message: string, targetReceiverLnk: string }\r\n\t| LD_KVUpdateAction\r\n\t| LDActionType;\r\n\r\nconst externalAPICallDict = new Map<string, () => Promise<any>>();\r\n\r\n//Action factories, return action objects\r\nexport const ldOptionsClientSideCreateAction = (kvStores: IKvStore[], lang: string, alias: string) => ({\r\n\ttype: LDOPTIONS_CLIENTSIDE_CREATE,\r\n\tkvStores: kvStores,\r\n\tlang: lang,\r\n\talias: alias\r\n});\r\n\r\nexport const ldOptionsClientSideUpdateAction = (updatedLDOptions: ILDOptions) => ({\r\n\ttype: LDOPTIONS_CLIENTSIDE_UPDATE,\r\n\tupdatedLDOptions: updatedLDOptions\r\n});\r\n\r\n/**\r\n * used to wrap any calls to APIs so that they can be easily consumed by the state\r\n * @param apiCallOverride !!! if set, uploadData and targetUrl will be ignored.\r\n * @param uploadData default call: upload data for jsonld-POST request\r\n * @param targetUrl default call: REST endpoint (jsonld)\r\n * @param targetReceiverLnk the receiving interpreter's link\r\n */\r\nexport const ldOptionsRequestAction = (apiCallOverride: () => Promise<any>, uploadData?: ILDOptions, targetUrl?: string, targetReceiverLnk?) => {\r\n\tif (apiCallOverride) {\r\n\t\texternalAPICallDict.set(targetReceiverLnk, apiCallOverride);\r\n\t\treturn {\r\n\t\t\tisExternalAPICall: true,\r\n\t\t\ttype: LDOPTIONS_REQUEST_ASYNC,\r\n\t\t\tuploadData: uploadData,\r\n\t\t\ttargetUrl: targetUrl,\r\n\t\t\ttargetReceiverLnk\r\n\t\t};\r\n\t} else {\r\n\t\treturn {\r\n\t\t\tisExternalAPICall: false,\r\n\t\t\ttype: LDOPTIONS_REQUEST_ASYNC,\r\n\t\t\tuploadData: uploadData,\r\n\t\t\ttargetUrl: targetUrl,\r\n\t\t\ttargetReceiverLnk\r\n\t\t};\r\n\t}\r\n};\r\n\r\nexport const ldOptionsResultAction = (ldOptionsPayload: ILDWebResource, targetReceiverLnk) => {\r\n\texternalAPICallDict.delete(targetReceiverLnk);\r\n\treturn {\r\n\t\ttype: LDOPTIONS_REQUEST_RESULT,\r\n\t\tldOptionsPayload,\r\n\t\ttargetReceiverLnk\r\n\t};\r\n};\r\n\r\nexport const ldOptionsFailureAction = (message: string, targetReceiverLnk): LDErrorMsgState => {\r\n\texternalAPICallDict.delete(targetReceiverLnk);\r\n\treturn {\r\n\t\ttype: LDOPTIONS_REQUEST_ERROR,\r\n\t\tmessage,\r\n\t\t//targetReceiverLnk\r\n\t};\r\n};\r\n\r\nexport const dispatchKvUpdateAction = (changedKvStores: IKvStore[], thisLdTkStr: string, updatedKvMap: OutputKVMap) => ({\r\n\ttype: LDOPTIONS_KV_UPDATE,\r\n\tchangedKvStores,\r\n\tthisLdTkStr,\r\n\tupdatedKvMap\r\n});\r\n\r\n/**\r\n * dispatches an LDAction that can be handled globally by a type- or id- action-handler. Used for handling button-pressing etc.\r\n * @param ldId one of id or ldType has to be defined\r\n * @param ldType one of id or ldType has to be defined\r\n * @param payload the payload for the actionhandler\r\n */\r\nexport const ldAction = (ldId: string, ldType: string, payload): LDActionType => {\r\n\tconst allState = applicationStore.getState();\r\n\tlet idHandler = null;\r\n\tlet typeHandler = null;\r\n\tif (ldId) {\r\n\t\tidHandler = allState.actionHandlerMap.idHandler[ldId];\r\n\t}\r\n\tif (ldType) {\r\n\t\ttypeHandler = allState.actionHandlerMap.typehandler[ldType];\r\n\t}\r\n\treturn { type: ACTION_LDACTION, payload, idHandler, typeHandler };\r\n};\r\n\r\n//this will modify the hashmap containing all the ILDOptions\r\nexport const ldOptionsMapReducer = (\r\n\tstate: ILDOptionsMapStatePart = {}, action: LDAction): ILDOptionsMapStatePart => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_LDACTION:\r\n\t\t\tconst { idHandler, typeHandler } = action;\r\n\t\t\tlet typedCfg = {};\r\n\t\t\tlet idCfg = {};\r\n\t\t\tif (idHandler) {\r\n\t\t\t\tlet idLDOptions: ILDOptions = ldOptionsDeepCopy(state[idHandler]);\r\n\t\t\t\tlet internalAction = idLDOptions.resource.kvStores.find((a) => a.key === ActionKeysDict.action_internal);\r\n\t\t\t\tif (internalAction) {\r\n\t\t\t\t\tinternalAction.value = action.payload;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tidLDOptions.resource.kvStores.unshift({\r\n\t\t\t\t\t\tkey: ActionKeysDict.action_internal,\r\n\t\t\t\t\t\tvalue: action.payload,\r\n\t\t\t\t\t\tldType: undefined\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tidCfg = { [idHandler]: idLDOptions };\r\n\t\t\t}\r\n\t\t\tif (typeHandler) {\r\n\t\t\t\tlet typeLDOptions: ILDOptions = ldOptionsDeepCopy(state[typeHandler]);\r\n\t\t\t\tlet internalAction = typeLDOptions.resource.kvStores.find((a) => a.key === ActionKeysDict.action_internal);\r\n\t\t\t\tif (internalAction) {\r\n\t\t\t\t\tinternalAction.value = action.payload;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttypeLDOptions.resource.kvStores.unshift({\r\n\t\t\t\t\t\tkey: ActionKeysDict.action_internal,\r\n\t\t\t\t\t\tvalue: action.payload,\r\n\t\t\t\t\t\tldType: undefined\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\ttypedCfg = { [typeHandler]: typeLDOptions };\r\n\t\t\t}\r\n\t\t\tlet newLDActionState = Object.assign({}, state, { ...idCfg, ...typedCfg });\r\n\t\t\treturn newLDActionState;\r\n\t\tcase LDOPTIONS_CLIENTSIDE_CREATE:\r\n\t\t\tlet isUpdateNeeded: boolean = false;\r\n\t\t\tlet actionAlias: string = action.alias;\r\n\t\t\tif (!state[actionAlias]) {\r\n\t\t\t\tisUpdateNeeded = true;\r\n\t\t\t} else {\r\n\t\t\t\t//check for changes\r\n\t\t\t\tlet singleLDOptions: ILDOptions = state[actionAlias];\r\n\t\t\t\tif ((singleLDOptions.lang !== action.lang)\r\n\t\t\t\t\t|| (singleLDOptions.ldToken.get() !== action.alias)\r\n\t\t\t\t) {\r\n\t\t\t\t\tisUpdateNeeded = true;\r\n\t\t\t\t}\r\n\t\t\t\t//check KvStores\r\n\t\t\t\tif (!action.kvStores && !singleLDOptions.resource.kvStores) break;\r\n\t\t\t\tif (!isUpdateNeeded &&\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\t(!action.kvStores && singleLDOptions.resource.kvStores)\r\n\t\t\t\t\t\t|| (action.kvStores && !singleLDOptions.resource.kvStores)\r\n\t\t\t\t\t\t|| (action.kvStores.length !== singleLDOptions.resource.kvStores.length)\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tisUpdateNeeded = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//check kvStores in detail, quick and dirty deep compare\r\n\t\t\t\t\tlet kvStoresA: IKvStore[] = action.kvStores;\r\n\t\t\t\t\tlet kvStoresB: IKvStore[] = singleLDOptions.resource.kvStores;\r\n\t\t\t\t\tisUpdateNeeded = !(JSON.stringify(kvStoresA) === JSON.stringify(kvStoresB));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isUpdateNeeded) {\r\n\t\t\t\tlet ldToken: ILDToken = new NetworkPreferredToken(action.alias);\r\n\t\t\t\tlet newLDCfg: ILDOptions = {\r\n\t\t\t\t\tlang: action.lang,\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tldToken: ldToken,\r\n\t\t\t\t\tvisualInfo: {\r\n\t\t\t\t\t\tretriever: DEFAULT_ITPT_RETRIEVER_NAME\r\n\t\t\t\t\t},\r\n\t\t\t\t\tresource: {\r\n\t\t\t\t\t\tkvStores: action.kvStores,\r\n\t\t\t\t\t\twebInResource: null,\r\n\t\t\t\t\t\twebOutResource: null\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tactionAlias = ldToken.get();\r\n\t\t\t\tlet newState = Object.assign({}, state, { [actionAlias]: newLDCfg });\r\n\t\t\t\treturn newState;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase LDOPTIONS_CLIENTSIDE_UPDATE:\r\n\t\t\tlet tokenVal = (action.updatedLDOptions.ldToken as NetworkPreferredToken).get();\r\n\t\t\tlet updatedLDOptionsObj = { ...action.updatedLDOptions };\r\n\t\t\tlet updatedState = Object.assign({}, state, { [tokenVal]: updatedLDOptionsObj });\r\n\t\t\treturn updatedState;\r\n\t\tcase LDOPTIONS_REQUEST_ASYNC:\r\n\t\t\tconsole.log(\"async ldoptions request\");\r\n\t\t\tconsole.dir(action);\r\n\t\t\tlet asyncLnk = action.targetReceiverLnk;\r\n\t\t\tlet asyncReqLDOptions = ldOptionsDeepCopy(state[asyncLnk]);\r\n\t\t\tasyncReqLDOptions.isLoading = true;\r\n\t\t\tlet asyncedState = Object.assign({}, state, { [asyncLnk]: asyncReqLDOptions });\r\n\t\t\treturn asyncedState;\r\n\t\tcase LDOPTIONS_REQUEST_RESULT:\r\n\t\t\tlet lnk = action.targetReceiverLnk;\r\n\t\t\tlet payload = action.ldOptionsPayload;\r\n\t\t\tlet newLDOptions = ldOptionsDeepCopy(state[lnk]);\r\n\t\t\tnewLDOptions.isLoading = false;\r\n\t\t\tnewLDOptions.resource.webInResource = payload;\r\n\t\t\tlet reqResultState = Object.assign({}, state, { [lnk]: newLDOptions });\r\n\t\t\treturn reqResultState;\r\n\t\tcase LDOPTIONS_REQUEST_ERROR:\r\n\t\t\tconsole.log('ldOptions Error message received, subMsg: ' + action.message);\r\n\t\t\treturn state;\r\n\t\tcase LDOPTIONS_KV_UPDATE:\r\n\t\t\tlet stateCopy = { ...state };\r\n\t\t\tlet { changedKvStores, updatedKvMap, thisLdTkStr } = action;\r\n\t\t\tstateCopy[thisLdTkStr] = ldOptionsDeepCopy(stateCopy[thisLdTkStr]);\r\n\t\t\tchangedKvStores.forEach((kvElem) => {\r\n\t\t\t\tlet elemKey = kvElem.key;\r\n\t\t\t\tlet modKVMapPart = updatedKvMap[elemKey];\r\n\t\t\t\tif (!modKVMapPart || elemKey === null) return;\r\n\t\t\t\t//modify on \"this\" first:\r\n\t\t\t\tlet thisTokenStrKVIdx = stateCopy[thisLdTkStr].resource.kvStores.findIndex((a) => a.key === elemKey);\r\n\t\t\t\tconst srcKvCopy = stateCopy[thisLdTkStr].resource.kvStores.slice();\r\n\t\t\t\tif (thisTokenStrKVIdx === -1) {\r\n\t\t\t\t\tsrcKvCopy.push(kvElem);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsrcKvCopy[thisTokenStrKVIdx] = kvElem;\r\n\t\t\t\t}\r\n\t\t\t\tstateCopy[thisLdTkStr].resource.kvStores = srcKvCopy;\r\n\t\t\t\t//then modify on target, copying to target property key:\r\n\t\t\t\tfor (let idx = 0; idx < modKVMapPart.length; idx++) {\r\n\t\t\t\t\tconst outputElem = modKVMapPart[idx];\r\n\t\t\t\t\tlet targetTokenStr = outputElem.targetLDToken.get();\r\n\t\t\t\t\tlet targetProp = outputElem.targetProperty;\r\n\t\t\t\t\tstateCopy[targetTokenStr] = ldOptionsDeepCopy(stateCopy[targetTokenStr]);\r\n\t\t\t\t\tconst targetKvCopy = stateCopy[targetTokenStr].resource.kvStores.slice();\r\n\t\t\t\t\tlet targetTokenStrKvIdx = targetKvCopy.findIndex((a) => a.key === targetProp);\r\n\t\t\t\t\tlet kvElemCopy: IKvStore = {\r\n\t\t\t\t\t\tkey: targetProp,\r\n\t\t\t\t\t\tvalue: kvElem.value,\r\n\t\t\t\t\t\tldType: kvElem.ldType\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttargetKvCopy[targetTokenStrKvIdx] = kvElemCopy;\r\n\t\t\t\t\tstateCopy[targetTokenStr].resource.kvStores = targetKvCopy;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn stateCopy;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nexport const requestLDOptionsEpic = (action$: ActionsObservable<any>, store: any, { ldOptionsAPI }: any) => {\r\n\tconst _LDOAPI: LDOptionsAPI = ldOptionsAPI;\r\n\treturn action$.pipe(\r\n\t\tofType(LDOPTIONS_REQUEST_ASYNC),\r\n\t\ttap(() => console.log(\"Requesting LD Options from network\")),\r\n\t\tmergeMap((action) => {\r\n\t\t\tconsole.log(action.targetReceiverLnk);\r\n\t\t\tif (action.isExternalAPICall) {\r\n\t\t\t\tlet apiCallOverride: () => Promise<any> = externalAPICallDict.get(action.targetReceiverLnk);\r\n\t\t\t\tlet apiObservable = from(apiCallOverride());\r\n\t\t\t\treturn apiObservable.pipe(map((val: any) => {\r\n\t\t\t\t\t/*let response: IWebResource = {\r\n\t\t\t\t\t\thypermedia: val,\r\n\t\t\t\t\t\tiri: null,\r\n\t\t\t\t\t\ttype: null\r\n\t\t\t\t\t};*/\r\n\t\t\t\t\treturn ldOptionsResultAction(val, action.targetReceiverLnk);\r\n\t\t\t\t}),\r\n\t\t\t\t\tcatchError((error) =>\r\n\t\t\t\t\t\tof(ldOptionsFailureAction(\r\n\t\t\t\t\t\t\t`An error occured during ld getting: ${error}`, action.targetReceiverLnk\r\n\t\t\t\t\t\t))));\r\n\t\t\t} else {\r\n\t\t\t\tif (action.uploadData === null) {\r\n\t\t\t\t\tlet rvGET = _LDOAPI.getLDOptions(action.targetUrl);\r\n\t\t\t\t\treturn rvGET.pipe(\r\n\t\t\t\t\t\tmap((response: ILDWebResource) => ldOptionsResultAction(response, action.targetReceiverLnk))\r\n\t\t\t\t\t\t,\r\n\t\t\t\t\t\tcatchError((error: LDError) =>\r\n\t\t\t\t\t\t\tof(ldOptionsFailureAction(\r\n\t\t\t\t\t\t\t\t`An error occured during ld getting: ${error.message + \" \" + error.stack}`, action.targetReceiverLnk\r\n\t\t\t\t\t\t\t))));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet rvPOST = _LDOAPI.postLDOptions(action.uploadData, action.targetUrl);\r\n\t\t\t\t\treturn rvPOST.pipe(\r\n\t\t\t\t\t\tmap((response: ILDWebResource) => ldOptionsResultAction(response, action.targetReceiverLnk))\r\n\t\t\t\t\t\t,\r\n\t\t\t\t\t\tcatchError((error: LDError) =>\r\n\t\t\t\t\t\t\tof(ldOptionsFailureAction(\r\n\t\t\t\t\t\t\t\t`An error occured during ld posting: ${error.message + \" \" + error.stack}`, action.targetReceiverLnk\r\n\t\t\t\t\t\t\t))));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t);\r\n};\r\n","import { DefaultItptMatcher } from \"defaults/DefaultItptMatcher\";\r\nimport { IItptMatcher } from \"ldaccess/iitpt-matcher\";\r\nimport { DEFAULT_ITPT_RETRIEVER_NAME } from \"defaults/DefaultItptRetriever\";\r\nimport { appItptRetrFn } from \"./appItptRetriever\";\r\n\r\nclass AppItptMatcher extends DefaultItptMatcher {\r\n}\r\nvar appItptMatcher: IItptMatcher = null;\r\n\r\nexport let appItptMatcherFn = (): IItptMatcher => {\r\n\tif (appItptMatcher == null) {\r\n\t\tappItptMatcher = new AppItptMatcher();\r\n\t\tlet defaultRetriever = appItptRetrFn();\r\n\t\tappItptMatcher.setItptRetriever(DEFAULT_ITPT_RETRIEVER_NAME, defaultRetriever);\r\n\t}\r\n\treturn appItptMatcher;\r\n};\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__15__;","module.exports = __WEBPACK_EXTERNAL_MODULE__16__;","import { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ILDOptions } from \"./ildoptions\";\r\nimport { BlueprintConfig } from \"./ldBlueprint\";\r\n\r\nexport function getKVStoreByKey(input: IKvStore[], searchKey: string): IKvStore {\r\n\tlet rv: IKvStore = null;\r\n\tif (input && input.length > 0) {\r\n\t\tfor (let i = 0; i < input.length; i++) {\r\n\t\t\tconst elem = input[i];\r\n\t\t\tif (elem.key === searchKey) { rv = elem; break; }\r\n\t\t}\r\n\t}\r\n\treturn rv;\r\n}\r\n\r\nexport function getAllKVStoresByKey(input: IKvStore[], searchKey: string): IKvStore[] {\r\n\tlet rv: IKvStore[] = [];\r\n\tif (input && input.length > 0) {\r\n\t\tfor (let i = 0; i < input.length; i++) {\r\n\t\t\tconst elem = input[i];\r\n\t\t\tif (elem.key === searchKey) { rv.push(elem); }\r\n\t\t}\r\n\t}\r\n\treturn rv;\r\n}\r\n\r\nexport function getKVStoreByKeyFromLDOptionsOrCfg(ldOptions: ILDOptions, cfg: BlueprintConfig, searchKey: string): IKvStore {\r\n\tlet rv: IKvStore = null;\r\n\tlet kvs = ldOptions && ldOptions.resource && ldOptions.resource.kvStores ? ldOptions.resource.kvStores : [];\r\n\trv = kvs.find((val) => searchKey === val.key);\r\n\trv = rv ? rv : cfg.initialKvStores.find((val) => searchKey === val.key);\r\n\treturn rv;\r\n}\r\n","export enum SideFXDict {\r\n\t//side effects as in state-machine side effects\r\n\t//keys\r\n\tsrvURL = \"srvURL\",\r\n\tidentifier = \"identifier\"\r\n}\r\n","import React from 'react';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\n\r\nimport { initLDLocalState, gdsfpLD } from '../generic/generatorFns';\r\nimport { Component } from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\n\r\nlet cfgIntrprtKeys: string[] =\r\n\t[UserDefDict.inputData];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: UserDefDict.inputData,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\nexport const createTextBasedBpCfg: (nameSelf: string) => BlueprintConfig = (nameSelf: string) => {\r\n\treturn {\r\n\t\tsubItptOf: null,\r\n\t\tnameSelf: nameSelf,\r\n\t\tinitialKvStores: initialKVStores,\r\n\t\tinterpretableKeys: cfgIntrprtKeys,\r\n\t\tcrudSkills: \"cRud\",\r\n\t\tcanInterpretType: LDDict.Text\r\n\t};\r\n};\r\n\r\nexport interface TextBasedComponentState extends LDLocalState {\r\n}\r\n\r\nexport abstract class PureTextBasedComponent extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, TextBasedComponentState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: TextBasedComponentState): null | TextBasedComponentState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [], [UserDefDict.inputData], null, [], [true]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD };\r\n\t\treturn {\r\n\t\t\t...rvNew\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [],\r\n\t\t\t[UserDefDict.inputData], [], [true]);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <div>{singleTextValue ? singleTextValue : null}</div>;\r\n\t}\r\n}\r\n\r\nexport const H1TextComponentName = 'shnyder/basichtml/h1';\r\n@ldBlueprint(createTextBasedBpCfg(H1TextComponentName))\r\nexport class PureH1TextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <h1>{singleTextValue ? singleTextValue : null}</h1>;\r\n\t}\r\n}\r\n\r\nexport const H2TextComponentName = 'shnyder/basichtml/h2';\r\n@ldBlueprint(createTextBasedBpCfg(H2TextComponentName))\r\nexport class PureH2TextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <h2>{singleTextValue ? singleTextValue : null}</h2>;\r\n\t}\r\n}\r\n\r\nexport const H3TextComponentName = 'shnyder/basichtml/h3';\r\n@ldBlueprint(createTextBasedBpCfg(H3TextComponentName))\r\nexport class PureH3TextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <h3>{singleTextValue ? singleTextValue : null}</h3>;\r\n\t}\r\n}\r\n\r\nexport const H4TextComponentName = 'shnyder/basichtml/h4';\r\n@ldBlueprint(createTextBasedBpCfg(H4TextComponentName))\r\nexport class PureH4TextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <h4>{singleTextValue ? singleTextValue : null}</h4>;\r\n\t}\r\n}\r\n\r\nexport const SpanTextComponentName = 'shnyder/basichtml/span';\r\n@ldBlueprint(createTextBasedBpCfg(SpanTextComponentName))\r\nexport class PureSpanTextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <span>{singleTextValue ? singleTextValue : null}</span>;\r\n\t}\r\n}\r\n\r\nexport const BoldTextComponentName = 'shnyder/basichtml/bold';\r\n@ldBlueprint(createTextBasedBpCfg(BoldTextComponentName))\r\nexport class PureBoldTextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <b>{singleTextValue ? singleTextValue : null}</b>;\r\n\t}\r\n}\r\n\r\nexport const ItalicsTextComponentName = 'shnyder/basichtml/italics';\r\n@ldBlueprint(createTextBasedBpCfg(ItalicsTextComponentName))\r\nexport class PureItalicsTextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <i>{singleTextValue ? singleTextValue : null}</i>;\r\n\t}\r\n}\r\n\r\nexport const ParagraphTextComponentName = 'shnyder/basichtml/paragraph';\r\n@ldBlueprint(createTextBasedBpCfg(ParagraphTextComponentName))\r\nexport class PureParagraphTextComponent extends PureTextBasedComponent {\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst singleTextValue = localValues.get(UserDefDict.inputData);\r\n\t\treturn <p>{singleTextValue ? singleTextValue : null}</p>;\r\n\t}\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__20__;","import { IItptRetriever } from \"ldaccess/iitpt-retriever\";\r\n\r\nimport { ReduxItptRetriever } from \"ld-react-redux-connect/ReduxItptRetriever\";\r\n\r\nclass AppItptRetriever extends ReduxItptRetriever{\r\n\r\n}\r\n\r\nvar appIntRetr: IItptRetriever = null;\r\n\r\nexport let appItptRetrFn = (): IItptRetriever => {\r\n\tif (appIntRetr == null){\r\n\t\tappIntRetr = new AppItptRetriever();\r\n\t}\r\n\treturn appIntRetr;\r\n};\r\n","import { isValidElement } from \"react\";\r\n\r\nexport function isClassComponent(component) {\r\n\treturn (\r\n\t\ttypeof component === 'function' &&\r\n\t\t!!component.prototype.isReactComponent\r\n\t) ? true : false;\r\n}\r\n\r\nexport function isFunctionComponent(component) {\r\n\treturn (\r\n\t\ttypeof component === 'function' &&\r\n\t\tString(component).includes('return React.createElement')\r\n\t) ? true : false;\r\n}\r\n\r\nexport function isSomeWhatReact(component) {\r\n\treturn !!component[\"$$typeof\"];\r\n}\r\n\r\nexport function isReactComponent(component) {\r\n\tif (!component) return false;\r\n\treturn (\r\n\t\tisClassComponent(component) ||\r\n\t\tisFunctionComponent(component) ||\r\n\t\tisCompositeTypeElement(component) ||\r\n\t\tisRouteWrappedComponent(component) ||\r\n\t\tisSomeWhatReact(component)\r\n\t) ? true : false;\r\n}\r\n\r\nexport function isRouteWrappedComponent(component) {\r\n\treturn !!Object.getPrototypeOf(component).WrappedComponent;\r\n}\r\n\r\nexport function isElement(element) {\r\n\treturn isValidElement(element);\r\n}\r\n\r\nexport function isDOMTypeElement(element) {\r\n\treturn isElement(element) && typeof element.type === 'string';\r\n}\r\n\r\nexport function isCompositeTypeElement(element) {\r\n\treturn isElement(element) && typeof element.type === 'function';\r\n}\r\n","import { ExplorerState } from \"appstate/store\";\r\nimport { LDOwnProps, LDConnectedState, LDConnectedDispatch } from \"appstate/LDProps\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldOptionsClientSideCreateAction, ldOptionsClientSideUpdateAction, dispatchKvUpdateAction, ldAction } from \"appstate/epicducks/ldOptions-duck\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { OutputKVMapElement, OutputKVMap, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { ldOptionsDeepCopy } from \"ldaccess/ldUtils\";\r\nimport { linearSplitRequestAction } from \"./epicducks/linearSplit-duck\";\r\nimport { refMapREQUESTAction, refMapSUCCESSAction } from \"./epicducks/refMap-duck\";\r\nimport { Dispatch, Action } from \"redux\";\r\nimport { ITPT_REFMAP_BASE } from \"ldaccess/iitpt-retriever\";\r\nimport { AppRootProps } from \"approot\";\r\n\r\nexport const mapStateToPropsRoot = (state: ExplorerState, ownProps: AppRootProps): AppRootProps => {\r\n\treturn { cfg: { ...state.appCfg }, isLoading: state.isLoading };\r\n};\r\n\r\n//final:\r\nexport const mapStateToProps = (state: ExplorerState, ownProps: LDOwnProps): LDOwnProps & LDConnectedState => {\r\n\tlet tokenString: string = ownProps ? ownProps.ldTokenString : null;\r\n\tlet ldOptionsLoc: ILDOptions = tokenString ? state.ldoptionsMap[tokenString] : null;\r\n\t//ldOptionsLoc = ldOptionsLoc ? {...ldOptionsLoc} : null; //only spread if exists\r\n\tif (ldOptionsLoc) {\r\n\t\tldOptionsLoc = ldTkStrRefToFilledProp(state, ownProps, ldOptionsLoc);\r\n\t\t//ldOptionsLoc = ldOptionsDeepCopy(ldOptionsLoc); //causes circular calls\r\n\t}\r\n\treturn {\r\n\t\t...ownProps,\r\n\t\tldOptions: (ldOptionsLoc)\r\n\t};\r\n};\r\n\r\nconst ldTkStrRefToFilledProp = (state: ExplorerState, ownProps: LDOwnProps, ldOptionsLoc: ILDOptions): ILDOptions => {\r\n\tlet rv: ILDOptions = { ...ldOptionsLoc };\r\n\tlet ldTokenString: string = ldOptionsLoc.ldToken.get();\r\n\t/*let newKVStores = */\r\n\tldOptionsLoc.resource.kvStores.map((val, idx) => {\r\n\t\tif (val.ldType !== UserDefDict.ldTokenStringReference) return val;\r\n\t\tlet ldOptionsSub = state.ldoptionsMap[val.value];\r\n\t\tif (!ldOptionsSub) return val;\r\n\t\tlet outPutKVMap = ldOptionsSub.resource.kvStores.find((elem) => elem.key === UserDefDict.outputKVMapKey);\r\n\t\tif (!outPutKVMap) return val;\r\n\t\toutPutKVMap = outPutKVMap.value;\r\n\t\tif (!outPutKVMap) return val;\r\n\t\tlet rvInner = null;\r\n\t\tfor (const key in outPutKVMap) {\r\n\t\t\tif (outPutKVMap.hasOwnProperty(key)) {\r\n\t\t\t\tconst element: OutputKVMapElement = outPutKVMap[key];\r\n\t\t\t\tif (element.targetLDToken.get() !== ldTokenString) continue;\r\n\r\n\t\t\t\tif (element.targetProperty !== val.key) continue;\r\n\t\t\t\trvInner = ldOptionsSub.resource.kvStores.find((elem) => elem.key === key);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!rvInner) return val;\r\n\t\treturn rvInner;\r\n\t});\r\n\t/*let newResource: ILDResource = {\r\n\t\tkvStores: newKVStores,\r\n\t\twebInResource: ldOptionsLoc.resource.webInResource,\r\n\t\twebOutResource: ldOptionsLoc.resource.webOutResource\r\n\t};*/\r\n\treturn rv;\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch: Dispatch<Action<any>>, ownProps: LDOwnProps): LDConnectedDispatch => ({\r\n\tnotifyLDOptionsChange: (ldOptions: ILDOptions) => {\r\n\t\tif (!ldOptions) {\r\n\t\t\tlet kvStores: IKvStore[] = [/*ownProps.singleKV*/];\r\n\t\t\tlet lang: string;\r\n\t\t\tlet alias: string = ownProps.ldTokenString;\r\n\t\t\tdispatch(ldOptionsClientSideCreateAction(kvStores, lang, alias));\r\n\t\t} else {\r\n\t\t\tdispatch(ldOptionsClientSideUpdateAction(ldOptions));\r\n\t\t}\r\n\t},\r\n\tnotifyLDOptionsLinearSplitChange: (ldOptions: ILDOptions) => {\r\n\t\tif (!ldOptions) return;\r\n\t\tdispatch(linearSplitRequestAction(ldOptions));\r\n\t},\r\n\tnotifyLDOptionsRefMapSplitChange: (ldOptions: ILDOptions, refMap: BlueprintConfig) => {\r\n\t\tif (!ldOptions) return;\r\n\t\tconst { canInterpretType } = refMap;\r\n\t\tif (!ldOptions.resource || !ldOptions.resource.kvStores || ldOptions.resource.kvStores.length < 1) {\r\n\t\t\t//console.warn(\"can't dispatch RefMap Split\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet newLDOptions = ldOptionsDeepCopy(ldOptions);\r\n\t\tconst matchingTypeKV = newLDOptions.resource.kvStores.find((a) => a.ldType === canInterpretType);\r\n\t\tif (!matchingTypeKV) {\r\n\t\t\t//console.warn(\"can't dispatch RefMap Split\");\r\n\t\t\t//return;\r\n\t\t} else {\r\n\t\t\tconst newKvArr: IKvStore[] = [];\r\n\t\t\tconst matchVal = matchingTypeKV.value;\r\n\t\t\tif (!(!matchVal && matchVal !== false)) {\r\n\t\t\t\tconst matchValAsObj: { [s: string]: any } = matchVal;\r\n\t\t\t\tfor (const keyPart in matchValAsObj) {\r\n\t\t\t\t\tif (matchValAsObj.hasOwnProperty(keyPart)) {\r\n\t\t\t\t\t\tconst valPart = matchValAsObj[keyPart];\r\n\t\t\t\t\t\tconst newKV: IKvStore = { key: keyPart, value: valPart, ldType: null };\r\n\t\t\t\t\t\tnewKvArr.push(newKV);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tnewLDOptions.resource.kvStores = newKvArr;\r\n\t\t}\r\n\t\tlet refMapKv = refMap.initialKvStores.find((val) => val.key === UserDefDict.intrprtrBPCfgRefMapKey);\r\n\t\tif (refMapKv && refMapKv.value && refMapKv.value[ITPT_REFMAP_BASE]) {\r\n\t\t\tdispatch(refMapSUCCESSAction(newLDOptions));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch(refMapREQUESTAction(newLDOptions, refMap));\r\n\t},\r\n\tdispatchKvOutput: (changedKvStores: IKvStore[], thisLdTkStr: string, updatedKvMap: OutputKVMap) => {\r\n\t\tif (!(changedKvStores && thisLdTkStr && updatedKvMap)) {\r\n\t\t\t//console.warn(\"dispatching KVs failed because not all values were set\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdispatch(dispatchKvUpdateAction(changedKvStores, thisLdTkStr, updatedKvMap));\r\n\t\treturn;\r\n\t},\r\n\tdispatchLdAction: (ldId: string, ldType: string, payload) => {\r\n\t\tif (!payload) return;\r\n\t\tif (!ldId && !ldType) return;\r\n\t\tdispatch(ldAction(ldId, ldType, payload));\r\n\t}\r\n});\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { SideFXDict } from './SideFXDict';\r\nimport { gdsfpLD, initLDLocalState } from 'components/generic/generatorFns';\r\nimport { applicationStore } from 'approot';\r\nimport { ldOptionsClientSideUpdateAction, ldOptionsRequestAction } from 'appstate/epicducks/ldOptions-duck';\r\nimport { ldOptionsDeepCopy, isObjPropertyRef } from 'ldaccess/ldUtils';\r\nimport { getKVStoreByKey } from 'ldaccess/kvConvenienceFns';\r\nimport { ILDOptionsMapStatePart } from 'appstate/store';\r\n\r\nimport { nameSpaceMap } from \"ldaccess/ns/nameSpaceMap\";\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { ILDWebResource } from 'ldaccess/ildresource';\r\n\r\nexport const ldRetrCfgIntrprtKeys: string[] = [SideFXDict.srvURL, SideFXDict.identifier];\r\n/*let ldRetrInitialKVStores: IKvStore[] = [\r\n\t{ key: SideFXDict.srvURL, value: undefined, ldType: LDDict.Text },\r\n\t{ key: SideFXDict.identifier, value: undefined, ldType: LDDict.Text }\r\n];*/\r\n\r\nexport type LDRetrieverSuperState = LDLocalState & {\r\n\tisInputDirty: boolean;\r\n\tisOutputDirty: boolean;\r\n\twebContent: ILDWebResource;\r\n\tretrieverStoreKey: string;\r\n\tinterpretableKeys: string[];\r\n};\r\n\r\nexport abstract class LDRetrieverSuperRewrite implements IBlueprintItpt {\r\n\t//member-declarations for the interface\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tinitialKvStores: IKvStore[];\r\n\tinputKeys: string[];\r\n\tprotected state: LDRetrieverSuperState;\r\n\t//non-interface declarations\r\n\tprotected apiCallOverride: (() => Promise<any>) | null = null;\r\n\r\n\tconstructor(ldTkStr?: string, inputKeys?: string[]) {\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tinputKeys = inputKeys ? inputKeys : ldRetrCfgIntrprtKeys;\r\n\t\tthis.inputKeys = inputKeys;\r\n\t\tconst ldState = initLDLocalState(this.cfg, null, [], [...inputKeys, UserDefDict.outputKVMapKey]);\r\n\t\tlet okvMap = ldState.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\tif (okvMap) {\r\n\t\t\tthis.outputKVMap = okvMap;\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\tisInputDirty: false,\r\n\t\t\tisOutputDirty: false,\r\n\t\t\twebContent: null,\r\n\t\t\tretrieverStoreKey: ldTkStr,\r\n\t\t\tinterpretableKeys: this.inputKeys,\r\n\t\t\t...ldState\r\n\t\t};\r\n\t}\r\n\r\n\tsetState(input: LDRetrieverSuperState) {\r\n\t\tthis.state = input;\r\n\t}\r\n\r\n\tconsumeLDOptions(ldOptions: ILDOptions) {\r\n\t\tif (!ldOptions || !ldOptions.resource || !ldOptions.resource.kvStores) return;\r\n\t\tconst gdsfpResult = this.consumeLDOptionsLikeGDSFP(ldOptions);\r\n\t\tif (gdsfpResult) {\r\n\t\t\tfor (let idx = 0; idx < this.inputKeys.length; idx++) {\r\n\t\t\t\tconst inputKey = this.inputKeys[idx];\r\n\t\t\t\tlet param = gdsfpResult.localValues.get(inputKey);\r\n\t\t\t\tif (!param) break;\r\n\t\t\t\tlet prevParam = this.state.localValues.get(inputKey);\r\n\t\t\t\tif (param !== prevParam) {\r\n\t\t\t\t\tgdsfpResult.isInputDirty = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet okvMap = gdsfpResult.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\t\tif (okvMap) {\r\n\t\t\t\tthis.outputKVMap = okvMap;\r\n\t\t\t}\r\n\t\t\tthis.setState(gdsfpResult);\r\n\t\t\tthis.setWebContent(ldOptions);\r\n\t\t\tthis.evalDirtyInput();\r\n\t\t\tthis.evalDirtyOutput();\r\n\t\t}\r\n\t}\r\n\r\n\tsetWebContent(value: ILDOptions) {\r\n\t\tif (value.isLoading) return;\r\n\t\tif (value.resource.webInResource && (value.resource.webInResource !== this.state.webContent)) {\r\n\t\t\tconst changedState = {\r\n\t\t\t\t...this.state,\r\n\t\t\t\twebContent: value.resource.webInResource,\r\n\t\t\t\tisOutputDirty: true\r\n\t\t\t};\r\n\t\t\tthis.setState(changedState);\r\n\t\t}\r\n\t}\r\n\r\n\tevalDirtyOutput() {\r\n\t\tif (this.state.isInputDirty) return;\r\n\t\tif (this.state.isOutputDirty && this.outputKVMap && this.state.webContent) {\r\n\t\t\tthis.setState({ ...this.state, isOutputDirty: false });\r\n\t\t\tthis.refreshOutput();\r\n\t\t}\r\n\t}\r\n\r\n\tevalDirtyInput() {\r\n\t\tif (this.state.isInputDirty) {\r\n\t\t\tif (!this.apiCallOverride) {\r\n\t\t\t\tconst { localValues } = this.state;\r\n\t\t\t\t//if it's an jsonld-request\r\n\t\t\t\tlet srvUrl: string = localValues.get(this.inputKeys[0]);\r\n\t\t\t\tlet identifier: string = localValues.get(this.inputKeys[1]);\r\n\t\t\t\tif (srvUrl && srvUrl.length > 0\r\n\t\t\t\t\t&& identifier !== null && identifier !== undefined) {\r\n\t\t\t\t\tthis.setState({ ...this.state, isInputDirty: false });\r\n\t\t\t\t\tlet idStr = identifier.toString();\r\n\t\t\t\t\tlet idSplitIdx = idStr.indexOf('/');\r\n\t\t\t\t\tlet requestURL;\r\n\t\t\t\t\tif (idSplitIdx !== -1) {\r\n\t\t\t\t\t\tconsole.log(idStr.slice(0, idSplitIdx));\r\n\t\t\t\t\t\tlet nsMHasValue = false;\r\n\t\t\t\t\t\tlet nsMSearchVal = idStr.slice(0, idSplitIdx);\r\n\t\t\t\t\t\tfor (const nsMEntry of\r\n\t\t\t\t\t\t\tnameSpaceMap.values()) {\r\n\t\t\t\t\t\t\tif (nsMEntry === nsMSearchVal) {\r\n\t\t\t\t\t\t\t\tnsMHasValue = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (nsMHasValue) {\r\n\t\t\t\t\t\t\tlet idNS = idStr.slice(0, idSplitIdx);\r\n\t\t\t\t\t\t\tlet idId = idStr.slice(idSplitIdx + 1, idStr.length);\r\n\t\t\t\t\t\t\t/*let reqSplitString = srvUrl.value.replace('{' + SideFXDict.identifier + '}',\r\n\t\t\t\t\t\t\t\t'{namespace}/' + '{' + SideFXDict.identifier + '}');\r\n\t\t\t\t\t\t\trequestURL = URI.expand(reqSplitString, {\r\n\t\t\t\t\t\t\t\tnamespace: idNS,\r\n\t\t\t\t\t\t\t\tidentifier: idId\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\trequestURL = srvUrl.value;*/\r\n\t\t\t\t\t\t\trequestURL = srvUrl;\r\n\t\t\t\t\t\t\trequestURL = requestURL.replace('{' + SideFXDict.identifier + '}', idNS + '/' + idId);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//TODO: enter error state\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst idVal = identifier;\r\n\t\t\t\t\t\tif (!idVal || isObjPropertyRef(idVal)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trequestURL = srvUrl + idVal;\r\n\t\t\t\t\t\t/*let test = URI;\r\n\t\t\t\t\t\trequestURL = test.expand(srvUrl.value, {\r\n\t\t\t\t\t\t\tidentifier: identifier.value\r\n\t\t\t\t\t\t});*/\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({ ...this.state, isInputDirty: false });\r\n\t\t\t\t\tlet reqAsString = requestURL; // requestURL.valueOf();\r\n\t\t\t\t\tthis.callToAPI(null, reqAsString, this.state.retrieverStoreKey);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ ...this.state, isInputDirty: false });\r\n\t\t\t\tthis.callToAPI(null, null, this.state.retrieverStoreKey);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected callToAPI(uploadData?: ILDOptions, targetUrl?: string, targetReceiverLnk?): void {\r\n\t\tapplicationStore.dispatch(ldOptionsRequestAction(this.apiCallOverride, uploadData, targetUrl, targetReceiverLnk));\r\n\t}\r\n\r\n\tprotected refreshOutput(): void {\r\n\t\tlet okvmPNs = Object.getOwnPropertyNames(this.outputKVMap);\r\n\t\tlet webObj = this.state.webContent;\r\n\t\tconsole.log(\"ldRetrieverSuper got new output\");\r\n\t\tconsole.log(webObj);\r\n\t\tconsole.log(okvmPNs);\r\n\t\tconsole.log(this.outputKVMap);\r\n\t\tlet statePart: ILDOptionsMapStatePart = {};\r\n\t\tokvmPNs.forEach((pn) => {\r\n\t\t\tlet fillValue = webObj[pn];\r\n\t\t\tlet outputElems = this.outputKVMap[pn];\r\n\t\t\tfor (let i = 0; i < outputElems.length; i++) {\r\n\t\t\t\tconst outputElem = outputElems[i];\r\n\t\t\t\tlet targetTokenLnk = outputElem.targetLDToken.get();\r\n\t\t\t\tlet targetProp = outputElem.targetProperty;\r\n\t\t\t\tlet newLDOptions: ILDOptions;\r\n\t\t\t\tif (statePart[targetTokenLnk]) {\r\n\t\t\t\t\tnewLDOptions = statePart[targetTokenLnk];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewLDOptions = applicationStore.getState().ldoptionsMap[targetTokenLnk];\r\n\t\t\t\t\tnewLDOptions = ldOptionsDeepCopy(newLDOptions);\r\n\t\t\t\t\tstatePart[targetTokenLnk] = newLDOptions;\r\n\t\t\t\t}\r\n\t\t\t\tlet targetKVStore = getKVStoreByKey(newLDOptions.resource.kvStores, targetProp);\r\n\t\t\t\tif (targetKVStore) {\r\n\t\t\t\t\ttargetKVStore.value = fillValue;\r\n\t\t\t\t\ttargetKVStore.ldType = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttargetKVStore = { key: targetProp, value: fillValue, ldType: null };\r\n\t\t\t\t\tnewLDOptions.resource.kvStores.push(targetKVStore);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (const key in statePart) {\r\n\t\t\tif (statePart.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = statePart[key];\r\n\t\t\t\tapplicationStore.dispatch(ldOptionsClientSideUpdateAction(element));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected consumeLDOptionsLikeGDSFP(ldOptions: ILDOptions): LDRetrieverSuperState | null {\r\n\t\tconst ldTkStr: string = ldOptions.ldToken.get();\r\n\t\tlet nextProps: LDConnectedState & LDOwnProps = {\r\n\t\t\tldOptions,\r\n\t\t\tldTokenString: ldTkStr\r\n\t\t};\r\n\t\tlet prevState: LDRetrieverSuperState = this.state;\r\n\r\n\t\tlet rvLD = gdsfpLD(nextProps, prevState,\r\n\t\t\t[],\r\n\t\t\t[...this.inputKeys, UserDefDict.outputKVMapKey],\r\n\t\t\tnull\r\n\t\t);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...this.state, ...rvLD, retrieverStoreKey: ldTkStr };\r\n\t\treturn { ...rvNew };\r\n\t}\r\n\r\n}\r\n","import { IItptRetriever } from \"ldaccess/iitpt-retriever\";\r\nimport { IBlueprintItpt, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\n\r\nexport const DEFAULT_ITPT_RETRIEVER_NAME = \"default\";\r\n\r\nexport interface IItptInfoItem {\r\n\tcanInterpretType: string;\r\n\tsubItptOf: string;\r\n\tnameSelf: string;\r\n\titpt: any;\r\n\tcrudSkills: string;\r\n\tbaseType: string;\r\n\tadditionalTypes: Array<string>;\r\n\ttags: string[];\r\n}\r\n\r\nexport class DefaultItptRetriever implements IItptRetriever {\r\n\tpublic name = DEFAULT_ITPT_RETRIEVER_NAME;\r\n\tprivate itptCollection: Array<IItptInfoItem> = [];\r\n\tprivate derivedItptMap: Map<string, IItptInfoItem> = new Map();\r\n\r\n\tconstructor(name: string = DEFAULT_ITPT_RETRIEVER_NAME) {\r\n\t\tthis.name = name;\r\n\t}\r\n\tsearchForObjItpt(term: string | string[], crudSkills: string) {\r\n\t\tif (term === null) throw new Error(\"search term undefined\");\r\n\t\tif (typeof term === \"string\") {\r\n\t\t\treturn this.searchSingleObjItpt(term, crudSkills);\r\n\t\t}\r\n\t\tlet multipleItpts: Array<IBlueprintItpt> = new Array();\r\n\t\tterm.forEach((elem) => {\r\n\t\t\tmultipleItpts.push(this.searchSingleObjItpt(elem, crudSkills));\r\n\t\t});\r\n\t\tif (multipleItpts.length === 0) return null;\r\n\t\treturn multipleItpts;\r\n\t}\r\n\r\n\tsearchForKVItpt(term: string, crudSkills: string) {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n\taddItpt(typeName: string, itpt: any, crudSkills: string, tags: string[]): void {\r\n\t\tlet preExistingIdx = this.itptCollection.findIndex(\r\n\t\t\t(curItm) => curItm.itpt[\"nameSelf\"] === itpt[\"nameSelf\"] && curItm.canInterpretType === typeName);\r\n\t\tif (itpt[\"cfg\"]) {\r\n\t\t\tlet cfg: BlueprintConfig = itpt[\"cfg\"];\r\n\t\t\tlet newItm: IItptInfoItem = {\r\n\t\t\t\tcanInterpretType: typeName,\r\n\t\t\t\tsubItptOf: null,\r\n\t\t\t\tnameSelf: cfg.nameSelf,\r\n\t\t\t\titpt: itpt,\r\n\t\t\t\tcrudSkills: crudSkills,\r\n\t\t\t\tbaseType: this.getBaseTypeFromType(typeName),\r\n\t\t\t\tadditionalTypes: this.getAdditionalTypesFromType(typeName),\r\n\t\t\t\ttags\r\n\t\t\t};\r\n\t\t\tif (preExistingIdx >= 0) {\r\n\t\t\t\tthis.itptCollection[preExistingIdx] = newItm;\r\n\t\t\t} else {\r\n\t\t\t\tthis.itptCollection.push(newItm);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgetItptList(): IItptInfoItem[] {\r\n\t\treturn this.itptCollection;\r\n\t}\r\n\r\n\tgetItptByNameSelf(nameSelf: string) {\r\n\t\tlet candidates: IItptInfoItem[] = this.itptCollection.filter(\r\n\t\t\t(curItm) => curItm.nameSelf === nameSelf);\r\n\t\tif (candidates == null) return null;\r\n\t\tif (candidates.length === 1) return candidates[0].itpt;\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsetDerivedItpt(ldTokenVal: string, itpt: any): void {\r\n\t\tif (!itpt) {\r\n\t\t\tthis.derivedItptMap.delete(ldTokenVal);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.derivedItptMap.set(ldTokenVal, itpt);\r\n\t}\r\n\thasDerivedItpt(ldTokenVal: string): boolean {\r\n\t\treturn this.derivedItptMap.has(ldTokenVal);\r\n\t}\r\n\tgetDerivedItpt(ldTokenVal: string): any {\r\n\t\tif (this.hasDerivedItpt(ldTokenVal)) {\r\n\t\t\treturn this.derivedItptMap.get(ldTokenVal);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * will combine two crudSkills by choosing the most permissive skills\r\n\t * @param crudSkillsA\r\n\t * @param crudSkillsB\r\n\t */\r\n/*\tprivate extendCrudSkills(crudSkillsA: string, crudSkillsB: string): string {\r\n\t\tif (crudSkillsA === crudSkillsB) return crudSkillsA;\r\n\t\tlet rv: string = \"\";\r\n\t\tfor (var i = 0; i < crudSkillsA.length; i++) {\r\n\t\t\tlet a = crudSkillsA[i];\r\n\t\t\tlet b = crudSkillsB[i];\r\n\t\t\trv += a < b ? a : b;\r\n\t\t}\r\n\t\treturn rv;\r\n\t}*/\r\n\r\n\tprivate searchSingleObjItpt(term: string, crudSkills: string) {\r\n\t\tlet searchBaseType: string = this.getBaseTypeFromType(term);\r\n\t\t//let searchAdditionalTypes: string[] = this.getAdditionalTypesFromType(term);\r\n\t\tlet candidates: IItptInfoItem[] = this.itptCollection.filter(\r\n\t\t\t(curItm) => curItm.baseType === searchBaseType);\r\n\t\tif (candidates == null) return null;\r\n\t\tif (candidates.length === 1) return candidates[0].itpt;\r\n\t\tlet candidatesMatch2 = candidates.filter(\r\n\t\t\t(curItm) => curItm.crudSkills === crudSkills\r\n\t\t);\r\n\t\tif (candidatesMatch2 !== null || candidatesMatch2.length > 0) candidates = candidatesMatch2;\r\n\t\tif (candidates.length === 1) return candidates[0].itpt;\r\n\t\treturn null;\r\n\t\t//TODO: perform a mapping against the additionalTypes\r\n\t}\r\n\r\n\tprivate getBaseTypeFromType(rawType: string): string {\r\n\t\treturn rawType;\r\n\t}\r\n\r\n\tprivate getAdditionalTypesFromType(rawType: string): string[] {\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n","import { ActionsObservable, ofType } from \"redux-observable\";\r\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\r\nimport { IModStatePart, SingleModStateKeysDict, IModStatus } from 'appstate/modstate';\r\nimport { of, from } from 'rxjs';\r\nimport { ModAPI } from 'apis/mod-api';\r\n\r\nexport const MOD_LOAD_REQUEST = \"Mod/MOD_LOAD_REQUEST\";\r\nexport const MOD_LOAD_RESULT = \"Mod/MOD_LOAD_RESULT\";\r\nexport const MOD_LOAD_RESULT_ALL = \"Mod/MOD_LOAD_RESULT_ALL\";\r\nexport const MOD_LOAD_ERROR = \"Mod/MOD_LOAD_ERROR\";\r\n\r\nexport type ModErrorAction = { type: 'Mod/MOD_LOAD_ERROR', modId: string, message: string };\r\nexport type ModAction =\r\n\t{ type: 'Mod/MOD_LOAD_REQUEST', modId: string }\r\n\t| { type: 'Mod/MOD_LOAD_RESULT', statusResult: IModStatus }\r\n\t| { type: 'Mod/MOD_LOAD_RESULT_ALL', statusResult: IModStatus }\r\n\t| ModErrorAction;\r\n\r\nexport interface IModAjaxError {\r\n\ttype: string;\r\n\tmodId: string;\r\n\tmessage: string;\r\n}\r\n\r\nexport const loadMod = (modId: string) => ({\r\n\ttype: MOD_LOAD_REQUEST,\r\n\tmodId\r\n});\r\n\r\nexport const loadModResult = (statusResult: IModStatus) => ({\r\n\ttype: MOD_LOAD_RESULT,\r\n\tstatusResult\r\n});\r\n\r\nexport const loadModResultAll = (statusResult: IModStatus) => ({\r\n\ttype: MOD_LOAD_RESULT_ALL,\r\n\tstatusResult\r\n});\r\n\r\nexport const loadModFailure = (modId: string, message: string): IModAjaxError => ({\r\n\ttype: MOD_LOAD_ERROR,\r\n\tmodId,\r\n\tmessage\r\n});\r\n\r\nexport const modStatePartReducer = (\r\n\tstate: IModStatePart, action: ModAction): IModStatePart => {\r\n\tlet newState = Object.assign({}, state);\r\n\tswitch (action.type) {\r\n\t\tcase MOD_LOAD_REQUEST:\r\n\t\t\tnewState.map[action.modId] = { id: action.modId, name: null, state: SingleModStateKeysDict.loading };\r\n\t\t\treturn newState;\r\n\t\tcase MOD_LOAD_RESULT:\r\n\t\t\tnewState.map[action.statusResult.id] = action.statusResult;\r\n\t\t\treturn newState;\r\n\t\tcase MOD_LOAD_RESULT_ALL:\r\n\t\t\tnewState.map[action.statusResult.id] = action.statusResult;\r\n\t\t\treturn newState;\r\n\t\tcase MOD_LOAD_ERROR:\r\n\t\t\tnewState.map[action.modId] = { id: action.modId, name: null, state: SingleModStateKeysDict.error, errorMsg: action.message };\r\n\t\t\treturn newState;\r\n\t\tdefault:\r\n\t\t\treturn newState;\r\n\t}\r\n};\r\n\r\nexport const loadModEpic = (action$: ActionsObservable<any>, store: any, { modAPI }: any) => {\r\n\tconst _MODAPI: ModAPI = modAPI;\r\n\tconst modQueue: string[] = [];\r\n\treturn action$.pipe(\r\n\t\tofType(MOD_LOAD_REQUEST),\r\n\t\ttap(() => console.log(\"requesting Mod...\")), // debugging\r\n\t\tmergeMap((action) => {\r\n\t\t\tif (!_MODAPI.checkDependencies(action.modId)) {\r\n\t\t\t\tmodQueue.push(action.modId);\r\n\t\t\t\treturn from([]);\r\n\t\t\t} else {\r\n\t\t\t\tlet rv = from(_MODAPI.getModData(action.modId));\r\n\t\t\t\treturn rv.pipe(\r\n\t\t\t\t\tmap((response) => {\r\n\t\t\t\t\t\t_MODAPI.setModLoadingComplete(action.modId);\r\n\t\t\t\t\t\tfor (let idx = 0; idx < modQueue.length; idx++) {\r\n\t\t\t\t\t\t\tconst mod = modQueue[idx];\r\n\t\t\t\t\t\t\tif (_MODAPI.checkDependencies(mod)) {\r\n\t\t\t\t\t\t\t\tmodQueue.splice(idx, 1);\r\n\t\t\t\t\t\t\t\treturn loadMod(mod);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (_MODAPI.isRequiredLoadingComplete()) {\r\n\t\t\t\t\t\t\treturn loadModResultAll(response as any);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn loadModResult(response as any);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t,\r\n\t\t\t\t\tcatchError((error: Error) =>\r\n\t\t\t\t\t\tof(loadModFailure(action.modId,\r\n\t\t\t\t\t\t\t`An error occurred: ${error.message}`\r\n\t\t\t\t\t\t))));\r\n\t\t\t}\r\n\t\t}\r\n\t\t)\r\n\t);\r\n};\r\n","import { IBlueprintItpt, BlueprintConfig, OutputKVMap } from \"ldaccess/ldBlueprint\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { isObjPropertyRef, isOutputKVSame } from \"ldaccess/ldUtils\";\r\nimport { applicationStore } from \"approot\";\r\nimport { dispatchKvUpdateAction } from \"appstate/epicducks/ldOptions-duck\";\r\nimport { LDError } from \"appstate/LDError\";\r\n\r\nexport const AbstractDataTransformerItptKeys = [];\r\nexport const AbstractDataTransformerOutputKVs: IKvStore[] = [];\r\n\r\n/**\r\n * abstract class to implement a data flow. Should simplify the setup to\r\n * the following steps:\r\n * a) set input Itpt-Keys in the constructor\r\n * b) set an Array of your output-IKVstores in the constructor\r\n * c) override this.mappingFunction(...)\r\n */\r\nexport abstract class AbstractDataTransformer implements IBlueprintItpt {\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tinputParams: Map<string, IKvStore> = new Map();\r\n\titptKeys: string[];\r\n\toutputKvStores: IKvStore[];\r\n\tisInputDirty: boolean = false;\r\n\tisOutputDirty: boolean = false;\r\n\tldTkStr: string;\r\n\r\n\tconstructor(ldTkStr?: string) {\r\n\t\tthis.cfg = this.constructor[\"cfg\"];\r\n\t\tthis.ldTkStr = ldTkStr;\r\n\t\tthis.itptKeys = AbstractDataTransformerItptKeys;\r\n\t\tthis.outputKvStores = AbstractDataTransformerOutputKVs;\r\n\t\tconst outputKVMap = this.cfg.initialKvStores.find((val) => UserDefDict.outputKVMapKey === val.key);\r\n\t\tthis.setOutputKVMap(outputKVMap && outputKVMap.value ? outputKVMap.value : null);\r\n\t}\r\n\r\n\tconsumeLDOptions = (ldOptions: ILDOptions) => {\r\n\t\tif (!ldOptions || !ldOptions.resource || !ldOptions.resource.kvStores) return;\r\n\t\tthis.ldTkStr = ldOptions.ldToken.get();\r\n\t\tlet kvs = ldOptions.resource.kvStores;\r\n\t\tlet outputKVMap: IKvStore = kvs.find((val) => UserDefDict.outputKVMapKey === val.key);\r\n\t\toutputKVMap = outputKVMap ? outputKVMap : this.cfg.initialKvStores.find((val) => UserDefDict.outputKVMapKey === val.key);\r\n\t\tthis.setOutputKVMap(outputKVMap && outputKVMap.value ? outputKVMap.value : this.outputKVMap);\r\n\t\tfor (let inputidx = 0; inputidx < this.itptKeys.length; inputidx++) {\r\n\t\t\tconst inputKey = this.itptKeys[inputidx];\r\n\t\t\tlet param = kvs.find((val) => val.key === inputKey);\r\n\t\t\tif (param && param.value !== null && !isObjPropertyRef(param.value)\r\n\t\t\t\t&& JSON.stringify(param) !== JSON.stringify(this.inputParams.get(inputKey))) {\r\n\t\t\t\tthis.inputParams.set(inputKey, param);\r\n\t\t\t\tthis.isInputDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.evalDirtyInput();\r\n\t\tthis.evalDirtyOutput();\r\n\t}\r\n\tsetOutputKVMap = (value: OutputKVMap) => {\r\n\t\tif (!isOutputKVSame(value, this.outputKVMap)) this.isOutputDirty = true;\r\n\t\tthis.outputKVMap = value;\r\n\t}\r\n\tevalDirtyOutput = () => {\r\n\t\tif (this.isInputDirty) return;\r\n\t\tif (this.isOutputDirty && this.outputKVMap) {\r\n\t\t\tthis.isOutputDirty = false;\r\n\t\t\tthis.refreshOutput();\r\n\t\t}\r\n\t}\r\n\tevalDirtyInput = () => {\r\n\t\tif (this.isInputDirty) {\r\n\t\t\tthis.isInputDirty = false;\r\n\t\t\tthis.isOutputDirty = true;\r\n\t\t}\r\n\t}\r\n\tprotected mappingFunction(\r\n\t\tinputParams: Map<string, IKvStore>,\r\n\t\toutputKvStores: Map<string, IKvStore>): IKvStore[] {\r\n\t\tlet rv = [];\r\n\t\treturn rv;\r\n\t}\r\n\r\n\tprotected refreshOutput(): void {\r\n\t\tlet newOutputKvStores: Map<string, IKvStore> = new Map();\r\n\t\tthis.outputKvStores.\r\n\t\t\tforEach((kvStore) => {\r\n\t\t\t\tnewOutputKvStores.set(kvStore.key, { key: kvStore.key, value: kvStore.value, ldType: kvStore.ldType });\r\n\t\t\t});\r\n\t\tconst changedKvStores: IKvStore[] = this.mappingFunction(this.inputParams,\r\n\t\t\tnewOutputKvStores);\r\n\t\tconst thisLdTkStr: string = this.ldTkStr;\r\n\t\tif (!thisLdTkStr) {\r\n\t\t\tthrow new LDError(\"ldTkStr hasn't been set, can't refresh output\");\r\n\t\t} else {\r\n\t\t\tconst updatedKvMap: OutputKVMap = this.outputKVMap;\r\n\t\t\tapplicationStore.dispatch(dispatchKvUpdateAction(changedKvStores, thisLdTkStr, updatedKvMap));\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { LDRouteProps } from \"appstate/LDProps\";\r\n\r\nexport function cleanRouteString(destination: string, routes: LDRouteProps) {\r\n\tconst { match } = routes;\r\n\tlet route: string = destination;\r\n\tif (route.startsWith(\"/\")) {//i.e attach to path/create sub-path\r\n\t\troute = route.substring(1);\r\n\t\troute = match.url.endsWith(\"/\") ? match.url + route : `${match.url}/${route}`;\r\n\t} else if (route.startsWith(\"..\")) {\r\n\t\troute = route = match.url.endsWith(\"/\") ? match.url + route : `${match.url}/${route}`;\r\n\t} else {\r\n\t\troute = match.url.substr(0, match.url.lastIndexOf(\"/\") + 1) + route;\r\n\t}\r\n\tlet routeParts: string[] = route.split('/');\r\n\tlet newRouteParts: string[] = [];\r\n\tfor (let i = 0; i < routeParts.length; i++) {\r\n\t\tconst element = routeParts[i];\r\n\t\tif (element === '..') {\r\n\t\t\tnewRouteParts.pop();\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif ((i < routeParts.length - 1) || i === routeParts.length - 1) {\r\n\t\t\tnewRouteParts.push(element);\r\n\t\t}\r\n\t}\r\n\troute = newRouteParts.join('/');\r\n\treturn route;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__29__;","export const nameSpaceMap: Map<string, string> = new Map();\r\nnameSpaceMap.set(\"http://shnyder.com\", \"shnyder\");\r\nnameSpaceMap.set(\"http://schema.org\", \"schema\");\r\n","import { LDOwnProps, LDLocalState, LDConnectedState, LDConnectedDispatch, LDRouteProps } from \"appstate/LDProps\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig, OutputKVMap, IBlueprintItpt } from \"ldaccess/ldBlueprint\";\r\nimport { Component } from \"react\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"appstate/reduxFns\";\r\nimport { IReactCompInfoItm } from \"../reactUtils/iReactCompInfo\";\r\nimport { ldOptionsDeepCopy, isObjPropertyRef } from \"ldaccess/ldUtils\";\r\nimport { isRouteSame } from \"../reactUtils/compUtilFns\";\r\nimport { ObjectPropertyRef } from \"ldaccess/ObjectPropertyRef\";\r\nimport { appItptMatcherFn } from \"appconfig/appItptMatcher\";\r\nimport { linearLDTokenStr } from \"ldaccess/ildtoken\";\r\nimport { isReactComponent } from \"../reactUtils/reactUtilFns\";\r\nimport { LDError } from \"appstate/LDError\";\r\nimport { ErrorBoundaryState } from \"../errors/ErrorBoundaryState\";\r\nimport React from \"react\";\r\nexport interface BaseContOwnProps extends LDOwnProps {\r\n}\r\n\r\nexport interface BaseContOwnState extends LDLocalState, ErrorBoundaryState {\r\n\terrorMsg: string;\r\n\tnameSelf: string;\r\n\troutes: LDRouteProps | null;\r\n\tinterpretableKeys: (string | ObjectPropertyRef)[];\r\n}\r\n\r\nexport const COMP_BASE_CONTAINER = \"shnyder/baseContainer\";\r\n\r\nlet cfgType: string = UserDefDict.itptContainerObjType;\r\nlet cfgIntrprtKeys: string[] =\r\n\t[];\r\nlet initialKVStores: IKvStore[] = [];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tcanInterpretType: cfgType,\r\n\tnameSelf: COMP_BASE_CONTAINER,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class PureBaseContainerRewrite extends Component<BaseContOwnProps & LDConnectedState & LDConnectedDispatch, BaseContOwnState>\r\n{\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & BaseContOwnProps,\r\n\t\tprevState: null | BaseContOwnState): null | BaseContOwnState {\r\n\t\tif (!nextProps.ldOptions || !nextProps.ldOptions.resource ||\r\n\t\t\tnextProps.ldOptions.resource.kvStores.length === 0) return null;\r\n\t\tconst ldOptions = nextProps.ldOptions;\r\n\t\tif (ldOptions.isLoading) return null;\r\n\t\tlet interpretableKeys = prevState.interpretableKeys;\r\n\t\tlet ldTokenString = ldOptions.ldToken.get();\r\n\t\tlet retriever: string = ldOptions.visualInfo.retriever;\r\n\t\tlet interpretedBy = ldOptions.visualInfo.interpretedBy;\r\n\t\tlet newreactCompInfos: Map<string, IReactCompInfoItm> = new Map();\r\n\t\tlet newLDTypes: Map<string, string> = new Map();\r\n\t\tlet isLDTypeSame = true;\r\n\t\tlet isItptKey = false;\r\n\t\tldOptions.resource.kvStores.forEach((itm, idx, kvstores) => {\r\n\t\t\tlet prevStateLDType = prevState.localLDTypes.get(itm.key);\r\n\t\t\tnewLDTypes.set(itm.key, itm.ldType);\r\n\t\t\tif (interpretableKeys.length > 0 && interpretableKeys.findIndex((itptKey) => itptKey === itm.key) >= 0) {\r\n\t\t\t\tisItptKey = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!isLDTypeSame) return;\r\n\t\t\tif (prevStateLDType !== itm.ldType) {\r\n\t\t\t\tisLDTypeSame = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif ((!interpretedBy\r\n\t\t\t|| !isRouteSame(nextProps.routes, prevState.routes)\r\n\t\t\t|| !isLDTypeSame)\r\n\t\t\t&& !isItptKey) {\r\n\t\t\t//i.e. first time this ldOptions-Object gets interpreted, or itpt-change\r\n\t\t\tlet newldOptions = ldOptionsDeepCopy(ldOptions);\r\n\t\t\tnewldOptions.visualInfo.interpretedBy = prevState.nameSelf;\r\n\t\t\tnextProps.notifyLDOptionsLinearSplitChange(newldOptions);\r\n\t\t\tlet routes: LDRouteProps = nextProps.routes;\r\n\t\t\treturn { ...prevState, routes, localLDTypes: newLDTypes };\r\n\t\t}\r\n\t\tldOptions.resource.kvStores.forEach((elem, idx) => {\r\n\t\t\tlet elemKey: string = elem.key;\r\n\t\t\tif (elemKey === UserDefDict.outputKVMapKey) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tlet itpt: React.ComponentClass<LDOwnProps> & IBlueprintItpt = null;\r\n\t\t\tif (elem.ldType === UserDefDict.intrprtrClassType && elem.value && isObjPropertyRef(elem.value)) {\r\n\t\t\t\titpt = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt((elem.value as ObjectPropertyRef).objRef);\r\n\t\t\t} else {\r\n\t\t\t\titpt = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt(linearLDTokenStr(ldTokenString, idx));\r\n\t\t\t}\r\n\t\t\tlet newKey: string = elem.key; // \"_\" + idx;\r\n\t\t\tif (isReactComponent(itpt)) {\r\n\t\t\t\tlet ldTokenStringNew: string = linearLDTokenStr(ldTokenString, idx);\r\n\t\t\t\tif (isItptKey && isObjPropertyRef(elem.value)) {\r\n\t\t\t\t\tldTokenStringNew = (elem.value as ObjectPropertyRef).objRef;\r\n\t\t\t\t}\r\n\t\t\t\tnewreactCompInfos.set(newKey, { compClass: itpt, key: newKey, ldTokenString: ldTokenStringNew });\r\n\t\t\t\tnewLDTypes.set(newKey, itpt.cfg.canInterpretType);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new LDError(\"baseContainer got a non-visual component\");\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn { ...prevState, compInfos: newreactCompInfos, localLDTypes: newLDTypes };\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props?: BaseContOwnProps & LDConnectedState & LDConnectedDispatch) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = this.constructor[\"cfg\"];\r\n\t\tthis.state = {\r\n\t\t\thasError: false,\r\n\t\t\terrorMsg: '',\r\n\t\t\tnameSelf: this.cfg.nameSelf,\r\n\t\t\troutes: null,\r\n\t\t\tcompInfos: new Map(),\r\n\t\t\tlocalLDTypes: new Map(),\r\n\t\t\tlocalValues: new Map(),\r\n\t\t\tinterpretableKeys: this.cfg.interpretableKeys\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ ...this.state, hasError: true, errorMsg: info });\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { hasError, errorMsg } = this.state;\r\n\t\tif (!hasError) {\r\n\t\t\tlet { routes } = this.props;\r\n\t\t\troutes = routes ? { ...routes } : null;\r\n\t\t\tlet iterator = 0;\r\n\t\t\tlet reactComps = [];\r\n\t\t\tthis.state.compInfos.forEach((cInfoItmOrItms, key) => {\r\n\t\t\t\tlet cInfoAsArray = [];\r\n\t\t\t\tif (Array.isArray(cInfoItmOrItms)) {\r\n\t\t\t\t\tcInfoAsArray = cInfoItmOrItms;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcInfoAsArray = [cInfoItmOrItms];\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < cInfoAsArray.length; i++) {\r\n\t\t\t\t\tconst cInfoItm = cInfoAsArray[i];\r\n\t\t\t\t\tlet GenericComp = cInfoItm.compClass;\r\n\t\t\t\t\treactComps[iterator] = <GenericComp key={cInfoItm.key} routes={routes} ldTokenString={cInfoItm.ldTokenString} />;\r\n\t\t\t\t\titerator++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn <>\r\n\t\t\t\t{reactComps ? reactComps : null}\r\n\t\t\t</>;\r\n\t\t} else {\r\n\t\t\treturn <span>error caught in baseContainer: {errorMsg}</span>;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nexport const BaseContainerRewrite = connect<LDConnectedState, LDConnectedDispatch, BaseContOwnProps>(mapStateToProps, mapDispatchToProps)(PureBaseContainerRewrite);\r\n","import { ILDOptionsMapStatePart, ExplorerState } from \"../store\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { ldBlueprint, BlueprintConfig, OutputKVMap, OutputKVMapElement } from \"ldaccess/ldBlueprint\";\r\nimport { ActionsObservable, ofType } from \"redux-observable\";\r\nimport { of } from 'rxjs';\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ObjectPropertyRef } from \"ldaccess/ObjectPropertyRef\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { isObjPropertyRef, ldBlueprintCfgDeepCopy } from \"ldaccess/ldUtils\";\r\nimport { ITPT_REFMAP_BASE } from \"ldaccess/iitpt-retriever\";\r\nimport { refMapBaseTokenStr, ILDToken, NetworkPreferredToken, createConcatNetworkPreferredToken } from \"ldaccess/ildtoken\";\r\nimport { appItptMatcherFn } from \"appconfig/appItptMatcher\";\r\nimport { ReduxItptRetriever } from \"ld-react-redux-connect/ReduxItptRetriever\";\r\nimport { Store } from \"redux\";\r\nimport { isReactComponent } from \"components/reactUtils/reactUtilFns\";\r\nimport { connectNonVisLDComp } from \"sidefx/nonVisualConnect\";\r\n\r\nimport { concat as concat$ } from 'rxjs';\r\nimport { mergeMap } from \"rxjs/operators\";\r\nimport { LDOPTIONS_KV_UPDATE, LD_KVUpdateAction } from \"./ldOptions-duck\";\r\n\r\n/**\r\n * a duck for ReferenceMap-handling.\r\n * Note: No epic has been added yet\r\n */\r\n\r\nexport const REFMAP_REQUEST = 'shnyder/REFMAP_REQUEST'; //fills all static/non-ObjProp, nonldTkStrngRef,\r\nexport const REFMAP_SUCCESS = 'shnyder/REFMAP_SUCCESS';\r\n\r\nexport type RefMapRequestAction = { type: 'shnyder/REFMAP_REQUEST', ldOptionsBase: ILDOptions, refMap: BlueprintConfig };\r\nexport type RefMapSuccessAction = { type: 'shnyder/REFMAP_SUCCESS', ldOptionsBase: ILDOptions };\r\nexport type RefMapAction = RefMapRequestAction | RefMapSuccessAction | LD_KVUpdateAction;\r\n\r\n//Action factories, return action Objects\r\nexport const refMapREQUESTAction = (updatedLDOptions: ILDOptions, refMap: BlueprintConfig): RefMapAction => (\r\n\t{ type: REFMAP_REQUEST, ldOptionsBase: updatedLDOptions, refMap }\r\n);\r\n\r\nexport const refMapSUCCESSAction = (updatedLDOptions: ILDOptions): RefMapAction => (\r\n\t{ type: REFMAP_SUCCESS, ldOptionsBase: updatedLDOptions }\r\n);\r\n\r\nexport const refMapReducer = (\r\n\tstate: ILDOptionsMapStatePart = {}, action: RefMapAction): ILDOptionsMapStatePart => {\r\n\tlet ldOptionsBase: ILDOptions = null;\r\n\tlet stateCopy: ILDOptionsMapStatePart = null;\r\n\tswitch (action.type) {\r\n\t\tcase REFMAP_REQUEST:\r\n\t\t\t// let baseRefMap: BlueprintConfig = action.refMap;\r\n\t\t\tldOptionsBase = action.ldOptionsBase;\r\n\t\t\tldOptionsBase.isLoading = true;\r\n\t\t\tlet isRefMapNeedsUpdate: boolean = true;\r\n\t\t\t//make sure the creation algorithm only runs once\r\n\t\t\t/*if (ldOptionsBase.visualInfo.interpretedBy) {\r\n\t\t\t\tif (action.refMap.nameSelf !== ldOptionsBase.visualInfo.interpretedBy) {\r\n\t\t\t\t\tisRefMapNeedsUpdate = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tisRefMapNeedsUpdate = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisRefMapNeedsUpdate = true;\r\n\t\t\t}*/\r\n\t\t\tif (isRefMapNeedsUpdate) {\r\n\t\t\t\t//makes sure a copy of the RefMap-KV exists in the ILDOptions-Object (basically pushes itpt-declaration\r\n\t\t\t\t// to runtime-model, while making sure the declaration isn't changed by being used)\r\n\t\t\t\tstateCopy = { ...state };\r\n\t\t\t\tif (ldOptionsBase.ldToken.get() === \"app-l0-edit-l0_b4759e72-bdd3-4da9-ad54-b189cb8752c8_rmb_b491155c-d2e4-4429-b825-6b5373d98719_72e91f55-a3be-4aa9-bff0-34f13da5d375\") {\r\n\t\t\t\t\tconsole.dir(action.refMap);\r\n\t\t\t\t}\r\n\t\t\t\tlet modBPCfg: BlueprintConfig = ldBlueprintCfgDeepCopy(action.refMap);\r\n\t\t\t\tstateCopy = createRuntimeRefMapLinks(stateCopy, modBPCfg, ldOptionsBase);\r\n\t\t\t\tstateCopy = assignValuesToRuntimeRefMap(stateCopy, modBPCfg, ldOptionsBase);\r\n\t\t\t\tstateCopy = assignOutputKvMaps(stateCopy, modBPCfg, ldOptionsBase);\r\n\t\t\t\tconst preExistingRMKVidx = ldOptionsBase.resource.kvStores.findIndex((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\t\t\t\tconst rmKvToAdd = modBPCfg.initialKvStores.\r\n\t\t\t\t\tfind((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\t\t\t\tif (preExistingRMKVidx === -1) {\r\n\t\t\t\t\tldOptionsBase.resource.kvStores.unshift(rmKvToAdd);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tldOptionsBase.resource.kvStores.splice(preExistingRMKVidx, 1, rmKvToAdd);\r\n\t\t\t\t}\r\n\t\t\t\tstateCopy[ldOptionsBase.ldToken.get()] = ldOptionsBase;\r\n\t\t\t\treturn stateCopy;\r\n\t\t\t} else {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\t\tcase REFMAP_SUCCESS:\r\n\t\t\tstateCopy = { ...state };\r\n\t\t\tldOptionsBase = action.ldOptionsBase;\r\n\t\t\t//ldOptionsBase.isLoading = false;\r\n\t\t\tstateCopy[ldOptionsBase.ldToken.get()] = ldOptionsBase;\r\n\t\t\treturn stateCopy;\r\n\t\tcase LDOPTIONS_KV_UPDATE:\r\n\t\t\tlet stateCopyUpd = { ...state };\r\n\t\t\tlet { changedKvStores, updatedKvMap } = action;\r\n\t\t\tchangedKvStores.forEach((cKvStore) => {\r\n\t\t\t\tlet updElem = updatedKvMap[cKvStore.key];\r\n\t\t\t\tif (updElem) {\r\n\t\t\t\t\tupdElem.forEach((objPropRef) => {\r\n\t\t\t\t\t\tconst targetLDTkStr = objPropRef.targetLDToken.get();\r\n\t\t\t\t\t\tconst refMapIdx = stateCopyUpd[targetLDTkStr].resource.kvStores.findIndex((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\t\t\t\t\t\tif (refMapIdx !== -1) {\r\n\t\t\t\t\t\t\tconst refMapKv = stateCopyUpd[targetLDTkStr].resource.kvStores[refMapIdx];\r\n\t\t\t\t\t\t\tfor (const rmElem in refMapKv.value) {\r\n\t\t\t\t\t\t\t\tif (refMapKv.value.hasOwnProperty(rmElem)) {\r\n\t\t\t\t\t\t\t\t\tconst bpCfgElem: BlueprintConfig = refMapKv.value[rmElem];\r\n\t\t\t\t\t\t\t\t\tfor (let idx = 0; idx < bpCfgElem.interpretableKeys.length; idx++) {\r\n\t\t\t\t\t\t\t\t\t\tconst itptKeyItm = bpCfgElem.interpretableKeys[idx];\r\n\t\t\t\t\t\t\t\t\t\tif (itptKeyItm === objPropRef.targetProperty) {\r\n\t\t\t\t\t\t\t\t\t\t\t/*if (isObjPropertyRef(bpCfgElem.initialKvStores[idx].value)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif ((bpCfgElem.initialKvStores[idx].value as ObjectPropertyRef).objRef === thisLdTkStr) {*/\r\n\t\t\t\t\t\t\t\t\t\t\tconst subElementTkStr: string = createConcatNetworkPreferredToken(targetLDTkStr, rmElem).get();\r\n\t\t\t\t\t\t\t\t\t\t\tlet propIdx = stateCopyUpd[subElementTkStr].resource.kvStores.findIndex((ikv) => ikv.key === itptKeyItm);\r\n\t\t\t\t\t\t\t\t\t\t\tlet newInputKv: IKvStore = {\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey: itptKeyItm,\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: cKvStore.value,\r\n\t\t\t\t\t\t\t\t\t\t\t\tldType: cKvStore.ldType\r\n\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\tstateCopyUpd[subElementTkStr].resource.kvStores.splice(propIdx, 1, newInputKv);\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/*}\r\n\t\t\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet updBPCfg: BlueprintConfig = refMapKv.value[ITPT_REFMAP_BASE];\r\n\t\t\t\t\t\t\tupdBPCfg = ldBlueprintCfgDeepCopy(updBPCfg);\r\n\t\t\t\t\t\t\tupdBPCfg.initialKvStores.push({\r\n\t\t\t\t\t\t\t\tkey: UserDefDict.intrprtrBPCfgRefMapKey,\r\n\t\t\t\t\t\t\t\tldType: UserDefDict.intrprtrBPCfgRefMapType,\r\n\t\t\t\t\t\t\t\tvalue: updBPCfg\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t// ldBlueprintCfgDeepCopy(refMap as any); //.value[ITPT_REFMAP_BASE]);\r\n\t\t\t\t\t\t\tstateCopyUpd = assignValuesToRuntimeRefMap(stateCopyUpd, updBPCfg, stateCopyUpd[targetLDTkStr]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn stateCopyUpd;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nconst createRuntimeRefMapLinks: RefMapIteratorFn<ILDOptionsMapStatePart> = (\r\n\tmodifiedObj: ILDOptionsMapStatePart,\r\n\trmBPCfg: BlueprintConfig,\r\n\tldOptions: ILDOptions\r\n) => {\r\n\tlet { subItptOf } = rmBPCfg;\r\n\tlet ldTkStr = ldOptions.ldToken.get();\r\n\tlet ldBaseTokenStr = refMapBaseTokenStr(ldTkStr);\r\n\t//RefMaps have only one base, but are stored under individual ids. This will rename the base at runtime, for easier access\r\n\trmBPCfg.interpretableKeys.forEach((a) => {\r\n\t\tif (isObjPropertyRef(a)) {\r\n\t\t\tlet aAsOPR: ObjectPropertyRef = a as ObjectPropertyRef;\r\n\t\t\tif (aAsOPR.objRef === subItptOf) {\r\n\t\t\t\taAsOPR.objRef = ldBaseTokenStr;\r\n\t\t\t} else {\r\n\t\t\t\taAsOPR.objRef = createConcatNetworkPreferredToken(ldTkStr, aAsOPR.objRef).get();\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tlet rmKv: IKvStore = rmBPCfg.initialKvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\tif (!rmKv) {\r\n\t\tconsole.error(\"no RefMap found: \" + rmBPCfg.canInterpretType);\r\n\t}\r\n\tfor (const rmSubCfgKey in rmKv.value) {\r\n\t\tif (rmKv.value.hasOwnProperty(rmSubCfgKey)) {\r\n\t\t\t//create links on refMap-Copy\r\n\t\t\tconst rmSubCfg: BlueprintConfig = rmKv.value[rmSubCfgKey];\r\n\t\t\trmSubCfg.initialKvStores.forEach((b) => {\r\n\t\t\t\tif (isObjPropertyRef(b.value)) {\r\n\t\t\t\t\tlet aAsOPR: ObjectPropertyRef = b.value as ObjectPropertyRef;\r\n\t\t\t\t\tif (aAsOPR.objRef === subItptOf) {\r\n\t\t\t\t\t\taAsOPR.objRef = ldBaseTokenStr;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\taAsOPR.objRef = createConcatNetworkPreferredToken(ldTkStr, aAsOPR.objRef).get();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trmKv.value[ITPT_REFMAP_BASE] = rmKv.value[subItptOf];\r\n\tdelete rmKv.value[subItptOf];\r\n\treturn modifiedObj;\r\n};\r\n\r\nconst assignValuesToRuntimeRefMap: RefMapIteratorFn<ILDOptionsMapStatePart> = (\r\n\tmodifiedObj: ILDOptionsMapStatePart,\r\n\trmBPCfg: BlueprintConfig,\r\n\tldOptions: ILDOptions\r\n) => {\r\n\tlet rmKv: IKvStore = rmBPCfg.initialKvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\tlet ldTkStr = ldOptions.ldToken.get();\r\n\tfor (const rmSubCfgKey in rmKv.value) {\r\n\t\tif (rmKv.value.hasOwnProperty(rmSubCfgKey)) {\r\n\t\t\tconst rmSubCfg: BlueprintConfig = rmKv.value[rmSubCfgKey];\r\n\t\t\t//create runtime-objects\r\n\t\t\tlet rtNewToken: ILDToken = createConcatNetworkPreferredToken(ldTkStr, rmSubCfgKey);\r\n\t\t\tlet rtNewTkStr: string = rtNewToken.get();\r\n\t\t\tlet newInterpretedby: string = rmSubCfgKey === ITPT_REFMAP_BASE ? rmSubCfg.nameSelf : rmSubCfgKey;\r\n\t\t\tlet rtLDOptions: ILDOptions = {\r\n\t\t\t\tlang: ldOptions.lang,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tldToken: rtNewToken,\r\n\t\t\t\tvisualInfo: { retriever: ldOptions.visualInfo.retriever, interpretedBy: newInterpretedby },\r\n\t\t\t\tresource: { webInResource: null, webOutResource: null, kvStores: rmSubCfg.initialKvStores }\r\n\t\t\t};\r\n\t\t\tmodifiedObj[rtNewTkStr] = rtLDOptions;\r\n\t\t}\r\n\t}\r\n\tlet { interpretableKeys } = rmBPCfg;\r\n\t//let modRefMapKV: IKvStore = rmBPCfg.initialKvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\tinterpretableKeys.forEach((singleIntrpblKey) => {\r\n\t\tif (isObjPropertyRef(singleIntrpblKey)) {\r\n\t\t\t//property on another BPConfig\r\n\t\t\tlet sKeyAsObjPropRef: ObjectPropertyRef = singleIntrpblKey as ObjectPropertyRef;\r\n\t\t\tlet propName: string = sKeyAsObjPropRef.propRef;\r\n\t\t\tlet stateLdTkStr: string = sKeyAsObjPropRef.objRef;\r\n\t\t\tlet kvs = ldOptions.resource.kvStores;\r\n\t\t\tlet actualInputIdx = kvs.findIndex((a) => a.key === propName);\r\n\t\t\tif (actualInputIdx === -1) return;\r\n\t\t\tlet lastActualInputIdx = actualInputIdx + 1;\r\n\t\t\t//if handing over multiple kvStores with the same field, they'll be grouped together\r\n\t\t\twhile (kvs.length - 1 >= lastActualInputIdx && kvs[lastActualInputIdx].key === propName) {\r\n\t\t\t\tlastActualInputIdx++;\r\n\t\t\t}\r\n\t\t\tlet actualInputKv: IKvStore[] = kvs.slice(actualInputIdx, lastActualInputIdx);\r\n\t\t\tif (!actualInputKv) return;\r\n\t\t\tlet targetKvStores = modifiedObj[stateLdTkStr].resource.kvStores;\r\n\t\t\tlet propIdx = targetKvStores.findIndex((b) => b.key === propName);\r\n\t\t\tif (propIdx === -1) {\r\n\t\t\t\ttargetKvStores.unshift(...actualInputKv);\r\n\t\t\t} else {\r\n\t\t\t\t//same here for replacing group of kvs on the target\r\n\t\t\t\tlet lastPropIdx = propIdx + 1;\r\n\t\t\t\twhile (targetKvStores.length - 1 >= lastPropIdx && targetKvStores[lastPropIdx].key === propName) {\r\n\t\t\t\t\tlastPropIdx++;\r\n\t\t\t\t}\r\n\t\t\t\ttargetKvStores.splice(propIdx, propIdx - lastPropIdx, ...actualInputKv);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//is string, property on this BPConfig\r\n\t\t}\r\n\t});\r\n\treturn modifiedObj;\r\n};\r\n\r\nconst assignOutputKvMaps: RefMapIteratorFn<ILDOptionsMapStatePart> = (\r\n\tmodifiedObj: ILDOptionsMapStatePart,\r\n\trmBPCfg: BlueprintConfig,\r\n\tldOptions: ILDOptions\r\n) => {\r\n\t//let nonRmKv: IKvStore[] = rmBPCfg.initialKvStores.filter((a) => a.ldType !== UserDefDict.intrprtrBPCfgRefMapType);\r\n\tlet rmKv: IKvStore = rmBPCfg.initialKvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\tlet ldTkStr = ldOptions.ldToken.get();\r\n\tconst okvmMap: Map<string, OutputKVMap> = new Map();\r\n\tfor (const rmSubCfgKey in rmKv.value) {\r\n\t\tif (rmKv.value.hasOwnProperty(rmSubCfgKey)) {\r\n\t\t\tconst concatNWTk = createConcatNetworkPreferredToken(ldTkStr, rmSubCfgKey);\r\n\t\t\tconst concatNWTkStr = concatNWTk.get();\r\n\t\t\tconst rmSubCfg: BlueprintConfig = rmKv.value[rmSubCfgKey];\r\n\t\t\tlet targetLDToken: ILDToken = new NetworkPreferredToken(concatNWTkStr);\r\n\t\t\t//let outputKVs: OutputKVMap = {};\r\n\t\t\trmSubCfg.initialKvStores.forEach((kv) => {\r\n\t\t\t\tconst iKey = rmSubCfg.interpretableKeys.find((a) => a === kv.key);\r\n\t\t\t\tconst iKeyStr: string = iKey as string;\r\n\t\t\t\tif (!iKeyStr) return;\r\n\t\t\t\tif (!isObjPropertyRef(kv.value)) return;\r\n\t\t\t\tconst srcObjPropRef: ObjectPropertyRef = kv.value as ObjectPropertyRef;\r\n\t\t\t\tconst srcObjRef: string = srcObjPropRef.objRef;\r\n\t\t\t\tif (!okvmMap.has(srcObjRef)) {\r\n\t\t\t\t\tokvmMap.set(srcObjRef, {});\r\n\t\t\t\t}\r\n\t\t\t\tlet outputElem = okvmMap.get(srcObjRef)[srcObjPropRef.propRef];\r\n\t\t\t\tconst newOutputElem = { targetLDToken: targetLDToken, targetProperty: iKeyStr };\r\n\t\t\t\tif (outputElem) {\r\n\t\t\t\t\toutputElem.push(newOutputElem);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tokvmMap.get(srcObjRef)[srcObjPropRef.propRef] = [newOutputElem];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t//let rmIterator: number = 0;\r\n\trmBPCfg.initialKvStores.forEach((kvStore, idx) => {\r\n\t\tif ((kvStore.ldType === UserDefDict.intrprtrBPCfgRefMapType)\r\n\t\t\t|| !isObjPropertyRef(kvStore.value)) {\r\n\t\t//\trmIterator++;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst kvAsObjPropRef: ObjectPropertyRef = kvStore.value as ObjectPropertyRef;\r\n\t\tlet refString = \"\";\r\n\t\t//let newToken: NetworkPreferredToken = null;\r\n\t\t/*\t\tif ((idx - rmIterator < rmBPCfg.interpretableKeys.length)\r\n\t\t\t\t\t&& (rmBPCfg.interpretableKeys[idx - rmIterator] === kvStore.key)) {*/\r\n\t\tif (rmKv.value.rmb.nameSelf === kvAsObjPropRef.objRef) {\r\n\t\t\trefString = refMapBaseTokenStr(ldTkStr);\r\n\t\t//\tnewToken = new NetworkPreferredToken(refString);\r\n\t\t} else {\r\n\t\t\tconst concatNWTk = createConcatNetworkPreferredToken(ldTkStr, kvAsObjPropRef.objRef);\r\n\t\t\trefString = concatNWTk.get();\r\n\t\t//\tnewToken = concatNWTk;\r\n\t\t}\r\n\t\tconst ldOKV = ldOptions.resource.kvStores.find((val) => val.ldType === UserDefDict.outputKVMapType);\r\n\t\tif (!ldOKV) return;\r\n\t\tif (ldOKV.value.hasOwnProperty(kvStore.key)) {\r\n\t\t\tconst okvArr: OutputKVMapElement[] = ldOKV.value[kvStore.key];\r\n\t\t\tokvArr.forEach((okvElem) => {\r\n\t\t\t\tconst newOutputElem = { ...okvElem };\r\n\t\t\t\tconst srcObjRef = kvAsObjPropRef.propRef;\r\n\t\t\t\tif (!okvmMap.has(refString)) {\r\n\t\t\t\t\tokvmMap.set(refString, {});\r\n\t\t\t\t}\r\n\t\t\t\tlet outputElem = okvmMap.get(refString)[srcObjRef];\r\n\t\t\t\tif (outputElem) {\r\n\t\t\t\t\toutputElem.push(newOutputElem);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tokvmMap.get(refString)[srcObjRef] = [newOutputElem];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t/*} else {\r\n\t\t\tconsole.log(\"test\");\r\n\t\t}*/\r\n\t});\r\n\tokvmMap.forEach((val, key) => {\r\n\t\tif (!modifiedObj[key]) {\r\n\t\t\tconsole.dir(modifiedObj);\r\n\t\t\tconsole.log(key);\r\n\t\t}\r\n\t\tmodifiedObj[key].resource.kvStores.push({ key: UserDefDict.outputKVMapKey, value: val, ldType: UserDefDict.outputKVMapType });\r\n\t});\r\n\treturn modifiedObj;\r\n};\r\n/*\r\nconst assignExternalOutputKvMap: RefMapIteratorFn<ILDOptionsMapStatePart> = (\r\n\tmodifiedObj: ILDOptionsMapStatePart,\r\n\trmBPCfg: BlueprintConfig,\r\n\tldOptions: ILDOptions\r\n) => {\r\n\tlet nonRmKv: IKvStore[] = rmBPCfg.initialKvStores.filter((a) => a.ldType !== UserDefDict.intrprtrBPCfgRefMapType);\r\n\tlet ldTkStr = ldOptions.ldToken.get();\r\n\tconst okvmMap: Map<string, OutputKVMap> = new Map();\r\n\tfor (const rmSubCfgKey in rmKv.value) {\r\n\t\tif (rmKv.value.hasOwnProperty(rmSubCfgKey)) {\r\n\t\t\tconst concatNWTk = createConcatNetworkPreferredToken(ldTkStr, rmSubCfgKey);\r\n\t\t\tconst concatNWTkStr = concatNWTk.get();\r\n\t\t\tconst rmSubCfg: BlueprintConfig = rmKv.value[rmSubCfgKey];\r\n\t\t\tlet targetLDToken: ILDToken = new NetworkPreferredToken(concatNWTkStr);\r\n\t\t\tlet outputKVs: OutputKVMap = {};\r\n\t\t\trmSubCfg.initialKvStores.forEach((kv) => {\r\n\t\t\t\tconst iKey = rmSubCfg.interpretableKeys.find((a) => a === kv.key);\r\n\t\t\t\tconst iKeyStr: string = iKey as string;\r\n\t\t\t\tif (!iKeyStr) return;\r\n\t\t\t\tif (!isObjPropertyRef(kv.value)) return;\r\n\t\t\t\tconst srcObjPropRef: ObjectPropertyRef = kv.value as ObjectPropertyRef;\r\n\t\t\t\tconst srcObjRef: string = srcObjPropRef.objRef;\r\n\t\t\t\tif (!okvmMap.has(srcObjRef)) {\r\n\t\t\t\t\tokvmMap.set(srcObjRef, {});\r\n\t\t\t\t}\r\n\t\t\t\tlet outputElem = okvmMap.get(srcObjRef)[srcObjPropRef.propRef];\r\n\t\t\t\tconst newOutputElem = { targetLDToken: targetLDToken, targetProperty: iKeyStr };\r\n\t\t\t\tif (outputElem) {\r\n\t\t\t\t\toutputElem.push(newOutputElem);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tokvmMap.get(srcObjRef)[srcObjPropRef.propRef] = [newOutputElem];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tokvmMap.forEach((val, key) => {\r\n\t\tmodifiedObj[key].resource.kvStores.push({ key: UserDefDict.outputKVMapKey, value: val, ldType: UserDefDict.outputKVMapType });\r\n\t});\r\n\treturn modifiedObj;\r\n};*/\r\n\r\n/*\r\nconst itptRefMapTypeRMReqFn: RefMapIteratorFn<ILDOptionsMapStatePart> = (\r\n\tmodifiedObj: ILDOptionsMapStatePart,\r\n\trmBPCfg: BlueprintConfig,\r\n\tldOptions: ILDOptions\r\n) => {\r\n\tlet rmKvVal: { [s: string]: BlueprintConfig } = originalRefMapKv.value;\r\n\tfor (const rmSubCfgKey in rmKvVal) {\r\n\t\tif (rmKvVal.hasOwnProperty(rmSubCfgKey)) {\r\n\t\t\tconst rmSubCfg = rmKvVal[rmSubCfgKey];\r\n\r\n\t\t}\r\n\t}\r\n\treturn modifiedObj;\r\n};*/\r\n\r\ntype RefMapIteratorFn<T> = (modifiedObj: T, rmBPCfg: BlueprintConfig, ldOptions: ILDOptions) => T;\r\n/*\r\nfunction traverseRefMap<MO>(\r\n\tmodifiedObj: MO,\r\n\trmBPCfg: BlueprintConfig,\r\n\ttopLayerFn: RefMapIteratorFn<MO>,\r\n\tioSigFn: RefMapIteratorFn<MO>,\r\n\trefMapFN: RefMapIteratorFn<MO>,\r\n\tldOptions: ILDOptions): MO {\r\n\tlet rv: MO = topLayerFn(modifiedObj, rmBPCfg, ldOptions);\r\n\tlet refMapKV: IKvStore = rmBPCfg.initialKvStores && rmBPCfg.initialKvStores.length > 0\r\n\t\t? rmBPCfg.initialKvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType)\r\n\t\t: null;\r\n\trv = ioSigFn(modifiedObj, rmBPCfg, ldOptions);\r\n\trv = refMapKV ? refMapFN(modifiedObj, rmBPCfg, ldOptions) : rv;\r\n\treturn rv;\r\n\t}*/\r\n\r\n/*\r\nfunction assignDerivedItpt(retriever: string, newLDTokenStr: string, bpCfg: BlueprintConfig, ldOptions: ILDOptions): void {\r\n\tlet baseItpt = appItptMatcherFn().getItptRetriever(retriever).getItptByNameSelf(bpCfg.nameSelf);\r\n\tlet wrappedItpt = ldBlueprint(bpCfg)(baseItpt);\r\n\tappItptMatcherFn().getItptRetriever(retriever).setDerivedItpt(newLDTokenStr, wrappedItpt);\r\n}*/\r\n\r\nexport const refMapEpic = (action$: ActionsObservable<any>, store: Store<ExplorerState>) => {\r\n\treturn action$.pipe(\r\n\t\tofType(REFMAP_REQUEST),\r\n\t\t/*.do(() => console.log(\"REQUESTing Refmap Async part (itpt-retrieval)\"))*/\r\n\t\tmergeMap((action: RefMapRequestAction) => {\r\n\t\t\tlet ldOptionsObj: ILDOptions = action.ldOptionsBase;\r\n\t\t\t// let baseRefMap: BlueprintConfig = action.refMap;\r\n\t\t\t//let refMapREQUESTPromise = new Promise((resolve, reject) => {\r\n\t\t\tlet rv = createItpts(ldOptionsObj, store);\r\n\t\t\t//\tldOptionsObj.isLoading = false;\r\n\t\t\t//\tresolve(ldOptionsObj);\r\n\t\t\t//});\r\n\t\t\t//let rv = Observable.from(refMapREQUESTPromise);\r\n\t\t\treturn concat$(\r\n\t\t\t\trv,\r\n\t\t\t\tof(refMapSUCCESSAction({ ...ldOptionsObj, isLoading: false }))\r\n\t\t\t);\r\n\t\t})\r\n\t);\r\n};\r\n\r\ninterface InstancePrepItm {\r\n\toutputKVs: OutputKVMap;\r\n\tconcatNWTk: ILDToken;\r\n\tconcatNWTkStr: string;\r\n\toriginalBPCfgCopy: BlueprintConfig;\r\n\tsubCfg: BlueprintConfig;\r\n\titpt: any;\r\n}\r\n\r\nconst createItpts: (\r\n\tldOptions: ILDOptions,\r\n\tstore: Store<ExplorerState>\r\n) => ActionsObservable<RefMapAction> = (\r\n\tldOptions: ILDOptions,\r\n\tstore: Store<ExplorerState>\r\n) => {\r\n\t\tlet { retriever } = ldOptions.visualInfo;\r\n\t\tlet itptRetriever: ReduxItptRetriever = appItptMatcherFn().getItptRetriever(retriever) as ReduxItptRetriever;\r\n\t\tlet ldTkStr = ldOptions.ldToken.get();\r\n\t\tlet rmKv = ldOptions.resource.kvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\t\tlet rmKvVal = rmKv.value;\r\n\t\tlet instancePrep: Map<string, InstancePrepItm> = new Map();\r\n\t\tfor (const rmSubCfgKey in rmKvVal) {\r\n\t\t\tif (rmKvVal.hasOwnProperty(rmSubCfgKey)) {\r\n\t\t\t\tconst concatNWTk = createConcatNetworkPreferredToken(ldTkStr, rmSubCfgKey);\r\n\t\t\t\tconst concatNWTkStr = concatNWTk.get();\r\n\t\t\t\tlet newOutputKvMap: OutputKVMap = {};\r\n\t\t\t\tlet newInstancePrepItm: InstancePrepItm = {\r\n\t\t\t\t\tconcatNWTk: concatNWTk,\r\n\t\t\t\t\tconcatNWTkStr: concatNWTkStr,\r\n\t\t\t\t\toutputKVs: newOutputKvMap,\r\n\t\t\t\t\toriginalBPCfgCopy: null,\r\n\t\t\t\t\tsubCfg: rmKvVal[rmSubCfgKey],\r\n\t\t\t\t\titpt: null\r\n\t\t\t\t};\r\n\t\t\t\tinstancePrep.set(concatNWTkStr, newInstancePrepItm);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//prepare data\r\n\t\tinstancePrep.forEach((element, prepSubCfgKey) => {\r\n\t\t\tlet { subCfg } = element;\r\n\t\t\tconst subCfgsubItptOf: string = subCfg.subItptOf;\r\n\t\t\tlet itpt: any = null;\r\n\t\t\titpt = itptRetriever.getUnconnectedByNameSelf(subCfgsubItptOf);\r\n\t\t\tlet originalBPCfgCopy: BlueprintConfig = ldBlueprintCfgDeepCopy(itpt.cfg);\r\n\r\n\t\t\t//let nonRMKvStores = ldOptions.resource.kvStores.filter(\r\n\t\t\t//\t(itm, idx) => itm.key !== UserDefDict.intrprtrBPCfgRefMapKey);\r\n\t\t\t/*let targetLDToken: ILDToken = new NetworkPreferredToken(concatNWTkStr);\r\n\t\t\tlet outputKVs: OutputKVMap = {};\r\n\t\t\tsubCfg.initialKvStores.forEach((kv) => {\r\n\t\t\t\tconst iKey = subCfg.interpretableKeys.find((a) => a === kv.key);\r\n\t\t\t\tconst iKeyStr: string = iKey as string;\r\n\t\t\t\tif (!iKeyStr) return;\r\n\t\t\t\tif (!isObjPropertyRef(kv.value)) return;\r\n\t\t\t\tconst srcObjPropRef: ObjectPropertyRef = kv.value as ObjectPropertyRef;\r\n\t\t\t\tinstancePrep.get(srcObjPropRef.objRef).outputKVs[srcObjPropRef.propRef] = { targetLDToken: targetLDToken, targetProperty: iKeyStr };\r\n\t\t\t});*/\r\n\t\t\tinstancePrep.set(prepSubCfgKey, { ...element, subCfg, originalBPCfgCopy, itpt });\r\n\t\t});\r\n\t\tlet rvActions: Array<RefMapAction> = [];\r\n\t\t//assign data, create instances\r\n\t\tinstancePrep.forEach((element, prepSubCfgKey) => {\r\n\t\t\tlet { itpt,  subCfg, originalBPCfgCopy, concatNWTkStr, concatNWTk } = element;\r\n\t\t\t//subCfg.initialKvStores.push({ key: UserDefDict.outputKVMapKey, value: outputKVs, ldType: UserDefDict.outputKVMapType });\r\n\t\t\t//this line will do the inheritance\r\n\t\t\titpt = ldBlueprint(subCfg)(itpt);\r\n\t\t\tif (!isReactComponent(itpt)) {\r\n\t\t\t\t//instantiation of non-visual blueprints here\r\n\t\t\t\tconnectNonVisLDComp(concatNWTkStr, new itpt(concatNWTkStr));\r\n\t\t\t\t// TODO: determine outputKVMap here, maybe assign it to itpt-Blueprint-Class earlier, so that delta is always output\r\n\t\t\t} else {\r\n\t\t\t\t//instantiation done in React, Class defined here\r\n\t\t\t\titptRetriever.setDerivedItpt(concatNWTkStr, itpt);\r\n\t\t\t}\r\n\t\t\t// let itptAsCfg: BlueprintConfig = itpt.cfg as BlueprintConfig;\r\n\t\t\tif (!originalBPCfgCopy.initialKvStores) return;\r\n\t\t\tlet itptRM = originalBPCfgCopy.initialKvStores.find((a) => a.ldType === UserDefDict.intrprtrBPCfgRefMapType);\r\n\t\t\tif (itptRM) {\r\n\t\t\t\tlet newSubRMInputs: IKvStore[] = subCfg.initialKvStores;\r\n\t\t\t\tlet newRMLDOptions: ILDOptions = {\r\n\t\t\t\t\tlang: ldOptions.lang,\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tldToken: concatNWTk,\r\n\t\t\t\t\tvisualInfo: { retriever: ldOptions.visualInfo.retriever, interpretedBy: itpt.nameSelf },\r\n\t\t\t\t\tresource: { webInResource: null, webOutResource: null, kvStores: newSubRMInputs }\r\n\t\t\t\t};\r\n\t\t\t\trvActions.push(refMapREQUESTAction(newRMLDOptions, originalBPCfgCopy));\r\n\t\t\t}\r\n\t\t});\r\n\t\tlet rv: ActionsObservable<RefMapAction> = ActionsObservable.from(rvActions);\r\n\t\treturn rv;\r\n\t};\r\n","import { ILDOptionsMapStatePart } from \"../store\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { linearLDTokenStr, NetworkPreferredToken, ILDToken } from \"ldaccess/ildtoken\";\r\nimport { appItptMatcherFn } from \"appconfig/appItptMatcher\";\r\nimport { ActionsObservable, ofType } from \"redux-observable\";\r\nimport { from } from 'rxjs';\r\nimport { ReduxItptRetriever } from \"ld-react-redux-connect/ReduxItptRetriever\";\r\nimport { OutputKVMap } from \"ldaccess/ldBlueprint\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { mergeMap, map } from \"rxjs/operators\";\r\n\r\n/**\r\n * a duck for linear state splitting, used for containers\r\n */\r\n\r\nexport const LINEAR_SPLIT_REQUEST = 'shnyder/LINEAR_SPLIT_REQUEST';\r\nexport const LINEAR_SPLIT_SUCCESS = 'shnyder/LINEAR_SPLIT_SUCCESS';\r\n\r\nexport type LinearSplitAction = { type: 'shnyder/LINEAR_SPLIT_REQUEST', ldOptionsBase: ILDOptions }\r\n\t| { type: 'shnyder/LINEAR_SPLIT_SUCCESS', ldOptionsBase: ILDOptions };\r\n//Action factories, return action Objects\r\n\r\nexport const linearSplitRequestAction = (updatedLDOptions: ILDOptions): LinearSplitAction => ({ type: LINEAR_SPLIT_REQUEST, ldOptionsBase: updatedLDOptions });\r\nexport const linearSplitSuccessAction = (updatedLDOptions: ILDOptions): LinearSplitAction => ({ type: LINEAR_SPLIT_SUCCESS, ldOptionsBase: updatedLDOptions });\r\n\r\nexport const linearReducer = (\r\n\tstate: ILDOptionsMapStatePart = {}, action: LinearSplitAction): ILDOptionsMapStatePart => {\r\n\tswitch (action.type) {\r\n\t\tcase LINEAR_SPLIT_REQUEST:\r\n\t\t\tlet ldOptionsBase = action.ldOptionsBase;\r\n\t\t\tlet ldTkStr = action.ldOptionsBase.ldToken.get();\r\n\t\t\tif (ldOptionsBase.isLoading) return state;\r\n\t\t\tlet stateCopy = { ...state };\r\n\t\t\tremovePrevSplit(stateCopy, ldTkStr);\r\n\t\t\tsplitValues(stateCopy, action);\r\n\t\t\tldOptionsBase.isLoading = true;\r\n\t\t\tstateCopy[ldTkStr] = ldOptionsBase;\r\n\t\t\treturn stateCopy;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn state;\r\n};\r\n\r\nfunction removePrevSplit(stateCopy: ILDOptionsMapStatePart, ldTkStr: string) {\r\n\tlet kvStores = stateCopy[ldTkStr].resource.kvStores;\r\n\tkvStores.forEach((itm, idx) => {\r\n\t\tstateCopy[linearLDTokenStr(ldTkStr, idx)] = undefined;\r\n\t});\r\n}\r\n\r\nfunction splitValues(stateCopy: ILDOptionsMapStatePart, action: LinearSplitAction) {\r\n\tlet ldOptionsObj = action.ldOptionsBase;\r\n\tlet ldTkStr = ldOptionsObj.ldToken.get();\r\n\tlet lang = ldOptionsObj.lang;\r\n\tlet retriever = ldOptionsObj.visualInfo.retriever;\r\n\tlet keyIdxMap: Map<string, number> = new Map();\r\n\tldOptionsObj.resource.kvStores.forEach((itm, idx) => {\r\n\t\tconst elemKey = itm.key;\r\n\t\tkeyIdxMap.set(elemKey, idx);\r\n\t\tlet newLDTokenStr: string = linearLDTokenStr(ldTkStr, idx);\r\n\t\tlet newLDToken = new NetworkPreferredToken(newLDTokenStr);\r\n\t\t//assignDerivedItpt(retriever, newLDTokenStr, itm.ldType, \"cRud\");\r\n\t\tlet targetLDToken: ILDToken = new NetworkPreferredToken(ldTkStr);\r\n\t\tif (itm.ldType === UserDefDict.outputKVMapType || itm.key === UserDefDict.outputKVMapKey) {\r\n\t\t\t//TODO: if an outputKvMap exists in the list of kvStores to split, then look for the right value and modify\r\n\t\t\t//the okvmap on that ikvstore\r\n\t\t\tconst splitOKV: OutputKVMap = itm.value;\r\n\t\t\tfor (const okvElemStr in splitOKV) {\r\n\t\t\t\tif (splitOKV.hasOwnProperty(okvElemStr)) {\r\n\t\t\t\t\tlet okvElem = splitOKV[okvElemStr];\r\n\t\t\t\t\tlet targetProp = okvElem[0].targetProperty;\r\n\t\t\t\t\tlet curSC = stateCopy[linearLDTokenStr(ldTkStr, keyIdxMap.get(targetProp))];\r\n\t\t\t\t\t//besser ist es, beim itererieren eine map mit den Indices der Positionen zu erstellen, und dann aus dem State\r\n\t\t\t\t\t//sich stateCopy[token + \"-l\" + idx] zu holen\r\n\t\t\t\t\tlet outputKvMaps = curSC.resource.kvStores.filter((val) => val.key === UserDefDict.outputKVMapKey);\r\n\t\t\t\t\tlet newOutputKvMapInStore: OutputKVMap = { [okvElemStr]: [{ targetLDToken: targetLDToken, targetProperty: targetProp }] };\r\n\t\t\t\t\tif (outputKvMaps.length === 0) {\r\n\t\t\t\t\t\tlet newOKVStoreInStore: IKvStore = { key: UserDefDict.outputKVMapKey, value: newOutputKvMapInStore, ldType: UserDefDict.outputKVMapType };\r\n\t\t\t\t\t\tcurSC.resource.kvStores.push(newOKVStoreInStore);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toutputKvMaps[0].value = newOutputKvMapInStore;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet newOutputKvMap: OutputKVMap = { [elemKey]: [{ targetLDToken: targetLDToken, targetProperty: elemKey }] };\r\n\t\tlet newOKVStore: IKvStore = { key: UserDefDict.outputKVMapKey, value: newOutputKvMap, ldType: UserDefDict.outputKVMapType };\r\n\t\tlet newLDOptions: ILDOptions = {\r\n\t\t\tisLoading: false,\r\n\t\t\tlang: lang,\r\n\t\t\tldToken: newLDToken,\r\n\t\t\tvisualInfo: { retriever: retriever },\r\n\t\t\tresource: {\r\n\t\t\t\twebInResource: null,\r\n\t\t\t\twebOutResource: null,\r\n\t\t\t\tkvStores: [itm, newOKVStore]\r\n\t\t\t}\r\n\t\t};\r\n\t\tstateCopy[newLDToken.get()] = newLDOptions;\r\n\t});\r\n}\r\n\r\nfunction assignDerivedItpt(retriever: string, newLDTokenStr: string, ldType: string, crudSkills: string): void {\r\n\t(appItptMatcherFn().getItptRetriever(retriever) as ReduxItptRetriever).searchForObjItptAndDerive(ldType, crudSkills, newLDTokenStr);\r\n\t//let baseItpt = appItptMatcherFn().getItptRetriever(retriever).searchForObjItpt(ldType, crudSkills);\r\n\t//appItptMatcherFn().getItptRetriever(retriever).setDerivedItpt(newLDTokenStr, baseItpt);\r\n}\r\n\r\nexport function clearDerivedItpt(retriever: string, oldLDTokenStr: string) {\r\n\t//TODO: implement peakAhead-Algorithm to remove all ...-l[0..n] ldTokenStrings\r\n\tif (appItptMatcherFn().getItptRetriever(retriever).hasDerivedItpt(oldLDTokenStr)) {\r\n\t\tappItptMatcherFn().getItptRetriever(retriever).setDerivedItpt(oldLDTokenStr, null);\r\n\t}\r\n}\r\n\r\nexport const linearSplitEpic = (action$: ActionsObservable<any>, store: any) => {\r\n\treturn action$.pipe(\r\n\t\tofType(LINEAR_SPLIT_REQUEST),\r\n\t\tmergeMap(\r\n\t\t\t(action) => {\r\n\t\t\t\tif (!action.ldOptionsBase) return undefined;\r\n\t\t\t\tlet ldOptionsObj = action.ldOptionsBase;\r\n\t\t\t\tlet retriever = action.ldOptionsBase.visualInfo.retriever;\r\n\t\t\t\tlet ldTkStr = action.ldOptionsBase.ldToken.get();\r\n\t\t\t\tlet splitReqPromise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t//TOdo: check if it's needed:\r\n\t\t\t\t\t// clearDerivedItpt(retriever, ldTkStr);\r\n\t\t\t\t\tldOptionsObj.resource.kvStores.forEach((itm, idx) => {\r\n\t\t\t\t\t\tlet newLDTokenStr: string = linearLDTokenStr(ldTkStr, idx);\r\n\t\t\t\t\t\t//let newLDToken = new NetworkPreferredToken(newLDTokenStr);\r\n\t\t\t\t\t\tassignDerivedItpt(retriever, newLDTokenStr, itm.ldType, \"cRud\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tldOptionsObj.isLoading = false;\r\n\t\t\t\t\t// assignDerivedItpt(retriever, ldTkStr, UserDefDict.itptContainerObjType, \"cRud\");\r\n\t\t\t\t\tresolve(ldOptionsObj);\r\n\t\t\t\t});\r\n\t\t\t\tlet rv = from(splitReqPromise);\r\n\t\t\t\treturn rv.pipe(\r\n\t\t\t\t\tmap((ldOptions: ILDOptions) => (\r\n\t\t\t\t\t\tlinearSplitSuccessAction(ldOptions)\r\n\t\t\t\t\t)));\r\n\t\t\t}\r\n\t\t)\r\n\t);\r\n\t/*.do(() => console.log(\"after splitting LDOptions generate Retrievers/Matchers\"))*/\r\n\t/*.mergeMap((action) => {\r\n\t\tif (!action.ldOptionsBase) return;\r\n\t\tlet ldOptionsObj = action.ldOptionsBase;\r\n\t\tlet retriever = action.ldOptionsBase.visualInfo.retriever;\r\n\t\tlet ldTkStr = action.ldOptionsBase.ldToken.get();\r\n\t\tlet splitReqPromise = new Promise((resolve, reject) => {\r\n\t\t\t//TOdo: check if it's needed:\r\n\t\t\t// clearDerivedItpt(retriever, ldTkStr);\r\n\t\t\tldOptionsObj.resource.kvStores.forEach((itm, idx) => {\r\n\t\t\t\tlet newLDTokenStr: string = linearLDTokenStr(ldTkStr, idx);\r\n\t\t\t\tlet newLDToken = new NetworkPreferredToken(newLDTokenStr);\r\n\t\t\t\tassignDerivedItpt(retriever, newLDTokenStr, itm.ldType, \"cRud\");\r\n\t\t\t});\r\n\t\t\tldOptionsObj.isLoading = false;\r\n\t\t\t// assignDerivedItpt(retriever, ldTkStr, UserDefDict.itptContainerObjType, \"cRud\");\r\n\t\t\tresolve(ldOptionsObj);\r\n\t\t});\r\n\t\tlet rv = Observable.from(splitReqPromise);\r\n\t\treturn rv.map((ldOptions: ILDOptions) => (\r\n\t\t\tlinearSplitSuccessAction(ldOptions)\r\n\t\t));\r\n\t}\r\n\t);*/\r\n};\r\n","import { ILDActionsHandlerStatePart } from 'appstate/store';\r\nexport const REGISTER_ID_HANDLER = 'shnyder/REGISTER_ID_HANDLER';\r\nexport const REGISTER_TYPE_HANDLER = 'shnyder/REGISTER_TYPE_HANDLER';\r\nexport const UNREGISTER_HANDLER = 'shnyder/UNREGISTER_HANDLER';\r\n\r\nexport type ActionMapAction =\r\n\t{ type: 'shnyder/REGISTER_ID_HANDLER', handlesId: string, ldTkStr: string } |\r\n\t{ type: 'shnyder/REGISTER_TYPE_HANDLER', handlesType: string, ldTkStr: string } |\r\n\t{ type: 'shnyder/UNREGISTER_HANDLER', ldTkStr: string };\r\n\r\n//Action factories\r\nexport const registerIdActionHandlerAction = (handlesId: string, ldTkStr: string): ActionMapAction => ({\r\n\ttype: REGISTER_ID_HANDLER,\r\n\thandlesId,\r\n\tldTkStr\r\n});\r\n\r\nexport const registerTypeActionHandlerAction = (handlesType: string, ldTkStr: string): ActionMapAction => ({\r\n\ttype: REGISTER_TYPE_HANDLER,\r\n\thandlesType,\r\n\tldTkStr\r\n});\r\n\r\nexport const unregisterHandlerAction = (ldTkStr: string): ActionMapAction => ({\r\n\ttype: UNREGISTER_HANDLER,\r\n\tldTkStr\r\n});\r\n\r\nexport const actionHandlerReducer = (state: ILDActionsHandlerStatePart, action: ActionMapAction): ILDActionsHandlerStatePart => {\r\n\tconst rvState = { ...state };\r\n\tconst { ldTkStr } = action;\r\n\tswitch (action.type) {\r\n\t\tcase REGISTER_ID_HANDLER:\r\n\t\t\trvState.idHandler[action.handlesId] = ldTkStr;\r\n\t\t\tbreak;\r\n\t\tcase REGISTER_TYPE_HANDLER:\r\n\t\t\trvState.typehandler[action.handlesType] = ldTkStr;\r\n\t\t\tbreak;\r\n\t\tcase UNREGISTER_HANDLER:\r\n\t\t\tconst typeMap = rvState.typehandler;\r\n\t\t\tfor (const prop in typeMap) {\r\n\t\t\t\tif (typeMap.hasOwnProperty(prop)) {\r\n\t\t\t\t\tconst typeElem = typeMap[prop];\r\n\t\t\t\t\tif (typeElem === ldTkStr) {\r\n\t\t\t\t\t\ttypeMap[prop] = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst idMap = rvState.idHandler;\r\n\t\t\tfor (const idProp in idMap) {\r\n\t\t\t\tif (idMap.hasOwnProperty(idProp)) {\r\n\t\t\t\t\tconst idElem = idMap[idProp];\r\n\t\t\t\t\tif (idElem === ldTkStr) {\r\n\t\t\t\t\t\tidMap[idProp] = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn rvState;\r\n};\r\n","import { applicationStore } from \"approot\";\r\nimport { IBlueprintItpt } from \"ldaccess/ldBlueprint\";\r\nimport { ILDOptionsMapStatePart } from \"appstate/store\";\r\nimport { isLDOptionsSame } from \"ldaccess/ldUtils\";\r\n\r\nconst connectedMap: Map<string, IBlueprintItpt> = new Map();\r\nlet lastLDOptionsMap: ILDOptionsMapStatePart = null;\r\nconst nonVisListener = () => {\r\n\tlet state = applicationStore.getState();\r\n\tconnectedMap.forEach((bpIntrprtr, key) => {\r\n\t\tlet ldOptions = state.ldoptionsMap[key];\r\n\t\tif (!ldOptions) return;\r\n\t\tif (lastLDOptionsMap && isLDOptionsSame(lastLDOptionsMap[key], ldOptions)) return;\r\n\t\tbpIntrprtr.consumeLDOptions(ldOptions);\r\n\t});\r\n\tlastLDOptionsMap = state.ldoptionsMap;\r\n};\r\n\r\nexport const initLDConnect = () => {\r\n\tapplicationStore.subscribe(nonVisListener);\r\n};\r\n\r\nexport const connectNonVisLDComp = (alias: string, itpt: IBlueprintItpt) => {\r\n\tif (connectedMap.get(alias) && connectedMap.get(alias).cfg === itpt.cfg) return;\r\n\tconnectedMap.set(alias, itpt);\r\n};\r\n","import { IAppConfigStatePart } from \"appstate/store\";\r\nimport { MOD_LOAD_ERROR, ModErrorAction } from \"./mod-duck\";\r\n\r\nexport const ACTION_APPCFG_UPDATE_KEY = 'shnyder/APPCFG_UPDATE_KEY';\r\nexport const ACTION_APPCFG_UPDATE_ITPT = 'shnyder/APPCFG_UPDATE_ITPT';\r\n\r\nexport type AppCfgAction =\r\n\t{ type: 'shnyder/APPCFG_UPDATE_KEY', appKey: string } |\r\n\t{ type: 'shnyder/APPCFG_UPDATE_ITPT', mainItpt: string } |\r\n\tModErrorAction;\r\n\r\nexport const appKeyUpdateAction = (updatedKey: string): AppCfgAction => ({ type: ACTION_APPCFG_UPDATE_KEY, appKey: updatedKey });\r\nexport const appItptUpdateAction = (updatedItpt: string): AppCfgAction => ({ type: ACTION_APPCFG_UPDATE_ITPT, mainItpt: updatedItpt });\r\n\r\nexport const appCfgStatePartReducer = (\r\n\tstate: IAppConfigStatePart, action: AppCfgAction): IAppConfigStatePart => {\r\n\tlet newState = Object.assign({}, state);\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_APPCFG_UPDATE_KEY:\r\n\t\t\tnewState.appKey = action.appKey;\r\n\t\t\tbreak;\r\n\t\tcase ACTION_APPCFG_UPDATE_ITPT:\r\n\t\t\tnewState.mainItpt = action.mainItpt;\r\n\t\t\tbreak;\r\n\t\tcase MOD_LOAD_ERROR:\r\n\t\t\tnewState.errorMsg = action.message;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn newState;\r\n};\r\n","import { isLDOptionsSame } from \"ldaccess/ldUtils\";\r\nimport { LDRouteProps } from \"appstate/LDProps\";\r\nimport { VisualKeysDict } from \"components/visualcomposition/visualDict\";\r\n\r\nexport const compNeedsUpdate = (nextProps, lastProps): boolean => {\r\n\treturn nextProps.ldTokenString !== lastProps.ldTokenString ||\r\n\t\tJSON.stringify(nextProps.outputKVMap) !== JSON.stringify(lastProps.outputKVMap) ||\r\n\t\t!isLDOptionsSame(nextProps.ldOptions, lastProps.ldOptions) ||\r\n\t\t!isRouteSame(nextProps.routes, lastProps.routes);\r\n};\r\n\r\nexport const isRouteSame = (nextRoute: LDRouteProps, lastRoute: LDRouteProps): boolean => {\r\n\tif (!nextRoute && !lastRoute) return true;\r\n\tif (!nextRoute || !lastRoute) return false;\r\n\treturn nextRoute.match.path === lastRoute.match.path;\r\n};\r\n\r\nexport const classNamesLD = (inputClassNames: string, localValues: Map<string, any>): string => {\r\n\tlet rv = \"\";\r\n\tif (!!inputClassNames) rv = inputClassNames;\r\n\tconst localCSSVal = localValues.get(VisualKeysDict.cssClassName);\r\n\tif (!!localCSSVal) {\r\n\t\tlet classArr = [];\r\n\t\tif (Array.isArray(localCSSVal)) {\r\n\t\t\tclassArr.concat(localCSSVal);\r\n\t\t}else{\r\n\t\t\tclassArr.push(localCSSVal);\r\n\t\t}\r\n\t\tclassArr.push(rv);\r\n\t\trv = classArr.join(\" \");\r\n\t}\r\n\treturn rv;\r\n};\r\n","import { createStore, applyMiddleware, Store } from 'redux';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic, rootReducer } from './rootduck';\r\nimport { ImageUploadAPI } from 'apis/image-upload';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDOptionsAPI } from 'apis/ldoptions-api';\r\n//import { DevTools } from './devTools';\r\nimport { IBlueprintItpt } from 'ldaccess/ldBlueprint';\r\nimport { IModStatePart } from './modstate';\r\nimport { ModAPI } from 'apis/mod-api';\r\n\r\nconst imgUploader: ImageUploadAPI = new ImageUploadAPI();\r\nconst ldOptionsAPI: LDOptionsAPI = new LDOptionsAPI();\r\nexport const modAPI: ModAPI = new ModAPI();\r\n\r\nconst epicMiddleware = createEpicMiddleware({\r\n  dependencies: {\r\n    imgULAPI: imgUploader,\r\n    ldOptionsAPI,\r\n    modAPI\r\n  }\r\n});\r\n\r\nexport interface ILDOptionsMapStatePart {\r\n  [s: string]: ILDOptions;\r\n}\r\n\r\nexport interface ILDActionsHandlerStatePart {\r\n  typehandler: {\r\n    [s: string]: string;\r\n  };\r\n  idHandler: {\r\n    [s: string]: string;\r\n  };\r\n}\r\n\r\nexport interface ILDNonvisualIntrprtrMapStatePart {\r\n  [s: string]: IBlueprintItpt;\r\n}\r\n\r\nexport const isProduction = process.env.NODE_ENV === 'production';\r\n\r\nexport const isDemo = process.env.METAEXPLORER_MODE === 'demo';\r\nexport const isStateDebug = process.env.METAEXPLORER_MODE === 'statedebug';\r\n\r\nlet middleWare = /*isProduction ?*/ applyMiddleware(epicMiddleware); /* :\r\n  isStateDebug ? compose(applyMiddleware(epicMiddleware), DevTools.instrument()) : applyMiddleware(epicMiddleware);*/\r\n\r\nexport interface IAppConfigStatePart {\r\n  appKey: string;\r\n  mainItpt: string;\r\n  errorMsg: string;\r\n}\r\n\r\nexport interface ExplorerState {\r\n  mods: IModStatePart;\r\n  appCfg: IAppConfigStatePart;\r\n  isSaving?: boolean;\r\n  isLoading: boolean;\r\n  //error: string,\r\n  ldoptionsMap: ILDOptionsMapStatePart;\r\n  ldNonVisualMap: ILDNonvisualIntrprtrMapStatePart;\r\n  actionHandlerMap: ILDActionsHandlerStatePart;\r\n}\r\nexport function configureStore(initialState: ExplorerState): Store<ExplorerState> {\r\n  const store: Store<ExplorerState> = createStore<ExplorerState, any, any, any>(\r\n    rootReducer,\r\n    initialState,\r\n    middleWare\r\n  );\r\n  epicMiddleware.run(rootEpic as any);\r\n  return store;\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { combineEpics } from 'redux-observable';\r\nimport { isLoadingSchemaReducer, loadSchemaEpic } from './epicducks/schemameta';\r\nimport { uploadImageEpic } from 'appstate/epicducks/image-upload';\r\nimport { ExplorerState } from 'appstate/store';\r\nimport { ldOptionsMapReducer, requestLDOptionsEpic } from 'appstate/epicducks/ldOptions-duck';\r\nimport { ldNonVisMapReducer } from 'appstate/epicducks/ldNonVisual-duck';\r\nimport { refMapReducer, refMapEpic } from './epicducks/refMap-duck';\r\nimport { reduceReducers } from './reduceReducers';\r\nimport { linearReducer, linearSplitEpic } from './epicducks/linearSplit-duck';\r\nimport { loadModEpic, modStatePartReducer } from './epicducks/mod-duck';\r\nimport { appCfgStatePartReducer } from './epicducks/appCfg-duck';\r\nimport { isLoadingReducer, loadingEpic } from './epicducks/isLoading-duck';\r\nimport { actionHandlerReducer } from './epicducks/action-duck';\r\n\r\nconst combLdOptionsMapReducer = reduceReducers(ldOptionsMapReducer, refMapReducer, linearReducer);\r\n\r\n//at the level of the root reducer, next-action-predicates should be handled\r\nexport const rootReducer = combineReducers<ExplorerState>({\r\n    appCfg: appCfgStatePartReducer,\r\n    isLoading: isLoadingReducer,\r\n    isSaving: isLoadingSchemaReducer,\r\n    ldoptionsMap: combLdOptionsMapReducer,\r\n    ldNonVisualMap: ldNonVisMapReducer,\r\n    mods: modStatePartReducer,\r\n    actionHandlerMap: actionHandlerReducer\r\n});\r\n\r\nexport const rootEpic = combineEpics(\r\n    linearSplitEpic,\r\n    uploadImageEpic,\r\n    loadSchemaEpic,\r\n    requestLDOptionsEpic,\r\n    refMapEpic,\r\n    loadModEpic,\r\n    loadingEpic\r\n);\r\n","import { Action } from 'redux';\r\nimport { ActionsObservable, ofType } from \"redux-observable\";\r\nimport { AjaxError } from \"rxjs/Rx\";\r\nimport { tap, mergeMap } from 'rxjs/operators';\r\n//import \"rxjs/Rx\"; //TODO: re-check this line and only import what's needed\r\n//source: https://mikebridge.github.io/articles/typescript-redux-observable-epic-test/\r\n\r\nexport const SCHEMA_LOAD_REQUEST = \"schema/SCHEMA_LOAD_REQUEST\";\r\n\r\nexport const SCHEMA_LOAD_RESULT = \"schema/SCHEMA_LOAD_RESULT\";\r\n\r\nexport const SCHEMA_LOAD_ERROR = \"schema/SCHEMA_LOAD_ERROR\";\r\n\r\nexport interface ISchemaResult {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport interface ISchemaAjaxError {\r\n    type: string;\r\n    message: string;\r\n}\r\n\r\nexport const loadSchema = (userid: string) => ({\r\n    type: SCHEMA_LOAD_REQUEST,\r\n    userid\r\n});\r\n\r\nexport const loadSchemaResult = (results: ISchemaResult) => ({\r\n    type: SCHEMA_LOAD_RESULT,\r\n    results\r\n});\r\n\r\nexport const loadSchemaFailure = (message: string): ISchemaAjaxError => ({\r\n    type: SCHEMA_LOAD_ERROR,\r\n    message\r\n});\r\n\r\nexport const isLoadingSchemaReducer = function isLoading(state: boolean = false, action: Action): boolean {\r\n    switch (action.type) {\r\n        case SCHEMA_LOAD_REQUEST:\r\n            return true;\r\n        case SCHEMA_LOAD_RESULT:\r\n        case SCHEMA_LOAD_ERROR:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const loadSchemaEpic = (action$: ActionsObservable<any>, store: any, { getJSON }: any) => {\r\n    return action$.pipe(\r\n        ofType(SCHEMA_LOAD_REQUEST),\r\n        tap(() => console.log(\"Locating User ...\")), // debugging\r\n        mergeMap((action) =>\r\n            getJSON(`%PUBLIC_URL%/api/users`)\r\n                .map((response: any) => loadSchemaResult(response as any))\r\n                .catch((error: AjaxError): ActionsObservable<ISchemaAjaxError> =>\r\n                    ActionsObservable.of(loadSchemaFailure(\r\n                        `An error occurred: ${error.message}`\r\n                    )))\r\n        )\r\n    );\r\n};\r\n","export enum SingleModStateKeysDict {\r\n\tinitial = \"initial\",\r\n\tloading = \"loading\",\r\n\treadyToUse = \"readyToUse\",\r\n\terror = \"error\"\r\n}\r\n\r\nexport interface IModStatus {\r\n\tname: string;\r\n\tid: string;\r\n\tstate: SingleModStateKeysDict;\r\n\terrorMsg?: string;\r\n}\r\n\r\nexport interface IModStatePart {\r\n\tisIdle: boolean;\r\n\tmap: {\r\n\t\t[s: string]: IModStatus;\r\n\t};\r\n}\r\n","import { Action } from 'redux';\r\nimport { MOD_LOAD_REQUEST, MOD_LOAD_RESULT_ALL } from './mod-duck';\r\nimport { ActionsObservable, ofType, StateObservable } from 'redux-observable';\r\nimport { tap, mapTo } from 'rxjs/operators';\r\nimport { changeMainAppItpt } from 'appconfig/retrieverAccessFns';\r\nimport { ExplorerState } from 'appstate/store';\r\nexport const IS_LOADING_TRUE = 'shnyder/IS_LOADING_TRUE';\r\nexport const IS_LOADING_FALSE = 'shnyder/IS_LOADING_FALSE';\r\n\r\n//Action factories\r\nexport const startLoadingAction = () => ({\r\n\ttype: IS_LOADING_TRUE,\r\n});\r\n\r\nexport const stopLoadingAction = () => ({\r\n\ttype: IS_LOADING_FALSE\r\n});\r\n\r\n//for the loading-indicating part of the state\r\nexport const isLoadingReducer = (\r\n\tstate: boolean = false, action: Action): boolean => {\r\n\tswitch (action.type) {\r\n\t\tcase MOD_LOAD_REQUEST:\r\n\t\t\treturn true;\r\n\t\tcase MOD_LOAD_RESULT_ALL:\r\n\t\t\treturn true;\r\n\t\tcase IS_LOADING_FALSE:\r\n\t\t\treturn false;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const loadingEpic = (action$: ActionsObservable<any>, store: StateObservable<ExplorerState>) => {\r\n\treturn action$.pipe(\r\n\t\tofType(MOD_LOAD_RESULT_ALL),\r\n\t\ttap(() => {\r\n\t\t\tconsole.log(\"loading complete...\");\r\n\t\t\tconst storeval = store.value;\r\n\t\t\tif (store.value.ldoptionsMap[storeval.appCfg.appKey]) {\r\n\t\t\t\tchangeMainAppItpt(storeval.appCfg.mainItpt, store.value.ldoptionsMap[storeval.appCfg.appKey].resource.kvStores);\r\n\t\t\t} else {\r\n\t\t\t\tchangeMainAppItpt(storeval.appCfg.mainItpt);\r\n\t\t\t}\r\n\t\t}), // debugging\r\n\t\tmapTo(stopLoadingAction())\r\n\t);\r\n};\r\n","import { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { ReduxItptRetriever } from \"ld-react-redux-connect/ReduxItptRetriever\";\r\nimport { getKVStoreByKey } from \"ldaccess/kvConvenienceFns\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { ObjectPropertyRef } from \"ldaccess/ObjectPropertyRef\";\r\nimport { ITPT_TAG_COMPOUND } from \"ldaccess/iitpt-retriever\";\r\nimport { appItptRetrFn } from 'appconfig/appItptRetriever';\r\nimport { applicationStore } from \"approot\";\r\nimport { LDError } from \"appstate/LDError\";\r\nimport { ldOptionsDeepCopy } from \"ldaccess/ldUtils\";\r\nimport { ldOptionsClientSideUpdateAction, ldOptionsClientSideCreateAction } from \"appstate/epicducks/ldOptions-duck\";\r\nimport { appItptUpdateAction } from \"appstate/epicducks/appCfg-duck\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { determineSingleKVKey } from \"components/generic/generatorFns\";\r\nimport { appItptMatcherFn } from \"./appItptMatcher\";\r\n\r\n/**\r\n * adds a blueprint defined in the editor to the AppItptRetriever, automatically looks\r\n * for the correct React-Class to extend\r\n * @param input the BlueprintConfig used as a setup for the new Itpt\r\n */\r\nexport const addBlueprintToRetriever = (input: BlueprintConfig, retrieverName?: string) => {\r\n\tlet retriever = retrieverName ? appItptMatcherFn().getItptRetriever(retrieverName) as ReduxItptRetriever : appItptRetrFn() as ReduxItptRetriever;\r\n\tif (!retriever) throw new LDError(\"retriever \" + retrieverName + \" not found\");\r\n\tlet candidate = retriever.getUnconnectedByNameSelf(input.subItptOf);\r\n\tif (!candidate) {\r\n\t\t//check if it's well-defined\r\n\t\tlet refMap = getKVStoreByKey(input.initialKvStores, UserDefDict.intrprtrBPCfgRefMapKey);\r\n\t\tif (!refMap || !refMap.value || refMap.value === {}) return;\r\n\t\tif (!refMap.value[input.subItptOf]) return;\r\n\t\tlet searchTerm: string = UserDefDict.intrprtrBPCfgRefMapName;\r\n\t\tcandidate = retriever.getUnconnectedByNameSelf(searchTerm);\r\n\t}\r\n\tif (!candidate) return;\r\n\tlet itptContainer: any = ldBlueprint(input)(candidate); //actually wraps, doesn't extend\r\n\tretriever.addItpt(input.canInterpretType, itptContainer, \"cRud\", [ITPT_TAG_COMPOUND]);\r\n};\r\n\r\nexport const intrprtrTypeInstanceFromBlueprint = (input: BlueprintConfig): any => {\r\n\tif (!input) return null;\r\n\tlet rv = {};\r\n\tinput.interpretableKeys.forEach((val) => {\r\n\t\ttry {\r\n\t\t\tlet propID: string = (val as ObjectPropertyRef).propRef;\r\n\t\t\tif (propID) {\r\n\t\t\t\trv[propID] = null;\r\n\t\t\t} else if (val) {\r\n\t\t\t\tconst kv = getKVStoreByKey(input.initialKvStores, val as string);\r\n\t\t\t\tif (!kv) {\r\n\t\t\t\t\tlet skvKey = determineSingleKVKey(input.initialKvStores, input.canInterpretType, input.interpretableKeys as string[]);\r\n\t\t\t\t\tif (skvKey) {\r\n\t\t\t\t\t\trv[val as string] = getKVStoreByKey(input.initialKvStores, skvKey).value[val as string];\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trv[val as string] = kv.value;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\trv[val as string] = null;\r\n\t\t}\r\n\t});\r\n\treturn rv;\r\n};\r\n\r\nexport const changeMainAppItpt = (toItptName: string, startingInstance?: any): void => {\r\n\tconst appState = applicationStore.getState();\r\n\tconst appKey = appState.appCfg.appKey;\r\n\t//this.generatePrefilled(val.itptList[numItpts - 1]);\r\n\tlet newItpt = appItptRetrFn().getItptByNameSelf(toItptName);\r\n\tif (!newItpt) throw new LDError(\"error in interpreterAPI: could not find \" + toItptName);\r\n\tlet newItptCfg = { ...newItpt.cfg } as BlueprintConfig;\r\n\tnewItptCfg.initialKvStores = startingInstance;\r\n\tlet newType = newItptCfg.canInterpretType;\r\n\tlet dummyInstance = intrprtrTypeInstanceFromBlueprint(newItptCfg);\r\n\tconst appKvKey = appKey + \"KvKey\";\r\n\tif (appState.ldoptionsMap[appKey]) {\r\n\t\tlet newLDOptions = ldOptionsDeepCopy(appState.ldoptionsMap[appKey]);\r\n\t\tnewLDOptions.resource.kvStores = [\r\n\t\t\t{ key: appKvKey, ldType: newType, value: dummyInstance }\r\n\t\t];\r\n\t\tapplicationStore.dispatch(ldOptionsClientSideUpdateAction(newLDOptions));\r\n\t} else {\r\n\t\tlet kvStores: IKvStore[] = [\r\n\t\t\t{ key: appKvKey, ldType: newType, value: dummyInstance }\r\n\t\t];\r\n\t\tlet lang: string;\r\n\t\tlet alias: string = appKey;\r\n\t\tapplicationStore.dispatch((ldOptionsClientSideCreateAction(kvStores, lang, alias)));\r\n\t}\r\n\tapplicationStore.dispatch(appItptUpdateAction(toItptName));\r\n};\r\n","import { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict } from '../visualcomposition/visualDict';\r\n\r\nimport { initLDLocalState, generateItptFromCompInfo, gdsfpLD } from '../generic/generatorFns';\r\nimport { Route } from 'react-router';\r\nimport { Component} from 'react';\r\nimport { ActionKeysDict, ActionTypesDict, ActionType } from 'components/actions/ActionDict';\r\nimport React from 'react';\r\n\r\nexport const ROUTE_ISABSOLUTE = \"isRouteAbsolute\";\r\nexport const ROUTE_ISEXACT = \"isRouteExact\";\r\nexport const ROUTE_PATH = \"routePath\";\r\n\r\nexport const RouteComponentName = \"shnyder/routing/Route\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.inputContainer, ROUTE_ISEXACT, ROUTE_ISABSOLUTE, ROUTE_PATH, ActionKeysDict.action_onRoute];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: ROUTE_ISEXACT,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Boolean\r\n\t},\r\n\t{\r\n\t\tkey: ROUTE_ISABSOLUTE,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Boolean\r\n\t},\r\n\t{\r\n\t\tkey: ROUTE_PATH,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: ActionKeysDict.action_onRoute,\r\n\t\tvalue: undefined,\r\n\t\tldType: ActionTypesDict.metaExplorerAction\r\n\t}\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: RouteComponentName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\nexport interface RouteComponentState extends LDLocalState {\r\n\tisExact: boolean;\r\n\tisAbsolute: boolean;\r\n\ttoPath: string;\r\n\tactionPayload: any;\r\n}\r\n\r\n/**\r\n * if isRouteExact is true, will match on the exact path as in \"without sub-paths\"\r\n */\r\n@ldBlueprint(bpCfg)\r\nexport class PureRouteComponent extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, RouteComponentState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: RouteComponentState): null | RouteComponentState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer], [ROUTE_ISEXACT, ROUTE_ISABSOLUTE, ROUTE_PATH, ActionKeysDict.action_onRoute]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD, };\r\n\t\tlet isExact = !!rvNew.localValues.get(ROUTE_ISEXACT);\r\n\t\tlet isAbsolute = !!rvNew.localValues.get(ROUTE_ISABSOLUTE);\r\n\t\tlet toPath = rvNew.localValues.get(ROUTE_PATH);\r\n\t\tlet actionOnRoute: ActionType = rvNew.localValues.get(ActionKeysDict.action_onRoute);\r\n\t\tif (actionOnRoute) {\r\n\t\t\tnextProps.dispatchLdAction(actionOnRoute.ldId, actionOnRoute.ldType, actionOnRoute.payload);\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...rvNew,\r\n\t\t\tisExact,\r\n\t\t\tisAbsolute,\r\n\t\t\ttoPath,\r\n\t\t\tactionPayload: actionOnRoute\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprivate renderInputContainer = generateItptFromCompInfo.bind(this, VisualKeysDict.inputContainer);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [VisualKeysDict.inputContainer],\r\n\t\t\t[ROUTE_ISEXACT, ROUTE_ISABSOLUTE, ROUTE_PATH]);\r\n\t\tlet isExact = !!ldState.localValues.get(ROUTE_ISEXACT);\r\n\t\tlet isAbsolute = !!ldState.localValues.get(ROUTE_ISABSOLUTE);\r\n\t\tlet toPath = ldState.localValues.get(ROUTE_PATH);\r\n\t\tlet actionPayload = ldState.localValues.get(ActionKeysDict.action_onRoute);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t\tisExact,\r\n\t\t\tisAbsolute,\r\n\t\t\ttoPath,\r\n\t\t\tactionPayload\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isExact, toPath, isAbsolute } = this.state;\r\n\t\tconst { routes } = this.props;\r\n\t\tlet newPath = !isAbsolute && routes && routes.match ? routes.match.path : \"\";\r\n\t\tif (!newPath.startsWith(\"/\")) {\r\n\t\t\tnewPath += \"/\" + toPath;\r\n\t\t} else {\r\n\t\t\tnewPath += toPath;\r\n\t\t}\r\n\t\treturn <Route exact={isExact} path={newPath} component={this.renderInputContainer} />;\r\n\t}\r\n}\r\n","import { SideFXDict } from \"sidefx/SideFXDict\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { resolveNS } from \"ldaccess/ns/nameSpaceResolution\";\r\nimport { LDRetrieverSuperRewrite, ldRetrCfgIntrprtKeys, LDRetrieverSuperState } from \"./LDRetrieverSuper-rewrite\";\r\n\r\nexport const imageRetrieverName = \"shnyder/imageRetriever\";\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: SideFXDict.srvURL,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: SideFXDict.identifier,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.name,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.fileFormat,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.contentUrl,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t}\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: imageRetrieverName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: ldRetrCfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class ImageRetriever extends LDRetrieverSuperRewrite {\r\n\t/*setIdentifier = (value: IKvStore) => {\r\n\t\tlet kvResolved: string = getKVValue(value);\r\n\t\tlet changedSrvIdPart = resolveNS(kvResolved);\r\n\t\tif (changedSrvIdPart !== this.identifier) this.isInputDirty = true;\r\n\t\tthis.identifier = changedSrvIdPart;\r\n\t}*/\r\n\tconsumeLDOptions(ldOptions: ILDOptions) {\r\n\t\tsuper.consumeLDOptions(ldOptions);\r\n\t\t/*if (!ldOptions || !ldOptions.resource || !ldOptions.resource.kvStores) return;\r\n\t\tsuper.consumeLDOptions(ldOptions);\r\n\t\tthis.retrieverStoreKey = ldOptions.ldToken.get();\r\n\t\tlet kvs = ldOptions.resource.kvStores;\r\n\t\tlet identifier: IKvStore = kvs.find((val) => SideFXDict.identifier === val.key);\r\n\t\tlet kvResolved: string = getKVValue(identifier);\r\n\t\tlet changedSrvIdPart = resolveNS(kvResolved);\r\n\t\tlet identifierKv = this.inputParams.get(SideFXDict.identifier);\r\n\t\tif (identifierKv && identifierKv.value && changedSrvIdPart !== identifierKv.value) this.isInputDirty = true;\r\n\t\tidentifierKv.value = changedSrvIdPart;*/\r\n\r\n\t\t/*outputKVMap = outputKVMap ? outputKVMap : this.cfg.initialKvStores.find((val) => UserDefDict.outputKVMapKey === val.key);\r\n\t\tthis.setOutputKVMap(outputKVMap && outputKVMap.value ? outputKVMap.value : this.outputKVMap);\r\n\t\tfor (let idx = 0; idx < ldRetrCfgIntrprtKeys.length; idx++) {\r\n\t\t\tconst inputKey = ldRetrCfgIntrprtKeys[idx];\r\n\t\t\tlet param = kvs.find((val) => val.key === inputKey);\r\n\t\t\tif (param.value !== null) {\r\n\t\t\t\tthis.inputParams.set(inputKey, param);\r\n\t\t\t\tthis.isInputDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//this.setSrvUrl(srvUrlKv && srvUrlKv.value ? srvUrlKv.value : this.srvUrl);\r\n\t\t//this.setIdentifier(identifier && identifier.value !== null ? identifier : this.identifier);\r\n\t\tthis.setWebContent(ldOptions);\r\n\t\tthis.evalDirtyInput();\r\n\t\tthis.evalDirtyOutput();*/\r\n\t}\r\n\r\n\tprotected consumeLDOptionsLikeGDSFP:\r\n\t\t(ldOptions: ILDOptions) => LDRetrieverSuperState | null\r\n\t\t= (ldOptions: ILDOptions) => {\r\n\t\t\tlet superRV = super.consumeLDOptionsLikeGDSFP(ldOptions);\r\n\t\t\tif (superRV) {\r\n\t\t\t\tlet identifier = superRV.localValues.get(SideFXDict.identifier);\r\n\t\t\t\tif (identifier) {\r\n\t\t\t\t\tlet identifierResolved = resolveNS(identifier);\r\n\t\t\t\t\tif (identifier !== identifierResolved) {\r\n\t\t\t\t\t\tthis.setState({ ...this.state, isInputDirty: true });\r\n\t\t\t\t\t\tsuperRV.localValues.set(SideFXDict.identifier, identifierResolved);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn superRV;\r\n\t\t}\r\n}\r\n","import { SideFXDict } from \"sidefx/SideFXDict\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { LDRetrieverSuperRewrite, ldRetrCfgIntrprtKeys } from \"./LDRetrieverSuper-rewrite\";\r\n\r\nexport const productRetrieverName = \"shnyder/productRetriever\";\r\n\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: SideFXDict.srvURL,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: SideFXDict.identifier,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.name,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.manufacturer,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Organization\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.description,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.image,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t}\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: productRetrieverName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: ldRetrCfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class ProductRetriever extends LDRetrieverSuperRewrite { }\r\n","import { SideFXDict } from \"sidefx/SideFXDict\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { LDRetrieverSuper } from \"sidefx/LDRetrieverSuper\";\r\nimport { ldRetrCfgIntrprtKeys } from \"./LDRetrieverSuper-rewrite\";\r\n\r\nexport const organizationRetrieverName = \"shnyder/organizationRetriever\";\r\n\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: SideFXDict.srvURL,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: SideFXDict.identifier,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.name,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.address,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.description,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: LDDict.image,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t}\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: organizationRetrieverName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: ldRetrCfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class OrganizationRetriever extends LDRetrieverSuper { }\r\n","import { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { Component } from 'react';\r\nimport { CameraSwitcherTabs } from './cameraSwitcherTabs';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { initLDLocalState } from '../../generic/generatorFns';\r\nimport React from 'react';\r\n\r\n//TODO: find proper way to include quagga with types, compiling\r\n//import * as Quagga from 'quagga';\r\n// tslint:disable-next-line:no-var-requires\r\n//const Quagga = require('quagga').default;\r\n//const Quagga = QuaggaAll.default;\r\ndeclare var Quagga: any;\r\n\r\nexport enum EANScannerStateEnum {\r\n\tisLoading = 2,\r\n\tisError = 3,\r\n\tisScanning = 4,\r\n}\r\n\r\nexport interface EANScannerState extends LDLocalState {\r\n\tcurStep: EANScannerStateEnum;\r\n\tvidDeviceList: MediaDeviceInfo[];\r\n\tcurId: string;\r\n}\r\n\r\nexport const EANScannerName = \"shnyder/EANScanner\";\r\nlet cfgType: string = LDDict.ViewAction;\r\nlet cfgIntrprtKeys: string[] =\r\n\t[];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: LDDict.gtin8,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tcanInterpretType: cfgType,\r\n\tnameSelf: EANScannerName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class EANScanner extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, EANScannerState>\r\n\timplements IBlueprintItpt {\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tloadingImgLink: string = \"/static/camera_negative_black.svg\";\r\n\terrorImgLink: string = \"/static/nocamera_negative_black.svg\";\r\n\r\n\tinitialKvStores: IKvStore[];\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [], [UserDefDict.outputKVMapKey]);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t\tvidDeviceList: null,\r\n\t\t\tcurId: null,\r\n\t\t\tcurStep: EANScannerStateEnum.isLoading\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n\t\t\tthis.setStateToError();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tnavigator.mediaDevices.enumerateDevices()\r\n\t\t\t.then((devices) => {\r\n\t\t\t\tlet vidInputList: MediaDeviceInfo[] = [];\r\n\t\t\t\tdevices.forEach((device) => {\r\n\t\t\t\t\tif (device.kind === \"videoinput\")\r\n\t\t\t\t\t\tvidInputList.push(device);\r\n\t\t\t\t});\r\n\t\t\t\tif (vidInputList.length === 0) {\r\n\t\t\t\t\tthis.setStateToError();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst deviceId = vidInputList[0].deviceId;\r\n\t\t\t\t\tthis.setState({...this.state, curId: deviceId, curStep: EANScannerStateEnum.isLoading, vidDeviceList: vidInputList });\r\n\t\t\t\t\tthis.startQuagga(deviceId);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tthis.setStateToError();\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tstartQuagga(deviceId: string) {\r\n\t\tQuagga.init({\r\n\t\t\tinputStream: {\r\n\t\t\t\ttype: \"LiveStream\",\r\n\t\t\t\tconstraints: {\r\n\t\t\t\t\twidth: 1024,\r\n\t\t\t\t\theight: 1024,\r\n\t\t\t\t\tdeviceId: deviceId,\r\n\t\t\t\t\tfacingMode: \"environment\" // or user\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdebug: true,\r\n\t\t\tlocator: {\r\n\t\t\t\tpatchSize: \"medium\",\r\n\t\t\t\thalfSample: true,\r\n\t\t\t\t/*debug: {\r\n\t\t\t\t\tshowCanvas: true,\r\n\t\t\t\t\tshowPatches: true,\r\n\t\t\t\t\tshowFoundPatches: true,\r\n\t\t\t\t\tshowSkeleton: true,\r\n\t\t\t\t\tshowLabels: true,\r\n\t\t\t\t\tshowPatchLabels: true,\r\n\t\t\t\t\tshowRemainingPatchLabels: true,\r\n\t\t\t\t\tboxFromPatches: {\r\n\t\t\t\t\t\tshowTransformed: true,\r\n\t\t\t\t\t\tshowTransformedBox: true,\r\n\t\t\t\t\t\tshowBB: true,\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t},\r\n\t\t\tnumOfWorkers: 4,\r\n\t\t\tdecoder: {\r\n\t\t\t\treaders: [\"ean_reader\"], // 'code_128_reader'\r\n\t\t\t\t/*debug: {\r\n\t\t\t\t\tdrawBoundingBox: true,\r\n\t\t\t\t\tshowFrequency: true,\r\n\t\t\t\t\tdrawScanline: true,\r\n\t\t\t\t\tshowPattern: true\r\n\t\t\t\t},*/\r\n\t\t\t},\r\n\t\t\tlocate: true\r\n\t\t}, (err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tthis.setStateToError();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.setState({...this.state, curStep: EANScannerStateEnum.isScanning });\r\n\t\t\tQuagga.start();\r\n\t\t});\r\n\t\tQuagga.onDetected(this.onBarCodeDetected);\r\n\t}\r\n\r\n\tsetStateToError() {\r\n\t\tthis.setState({...this.state, vidDeviceList: null, curId: null, curStep: EANScannerStateEnum.isError });\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tQuagga.offDetected(this.onBarCodeDetected);\r\n\t\tif (this.state.curStep !== EANScannerStateEnum.isError && this.state.curId !== null) {\r\n\t\t\tQuagga.stop();\r\n\t\t}\r\n\t\tthis.setState({...this.state, curStep: EANScannerStateEnum.isLoading, vidDeviceList: null, curId: null });\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet stateVisLnk = this.loadingImgLink;\r\n\t\tconst { curStep, curId, vidDeviceList } = this.state;\r\n\t\tlet isDisplayImage: boolean = true;\r\n\t\tconst isMultiVidSource: boolean = vidDeviceList && vidDeviceList.length > 1;\r\n\t\tswitch (curStep) {\r\n\t\t\tcase EANScannerStateEnum.isError:\r\n\t\t\t\tstateVisLnk = this.errorImgLink;\r\n\t\t\t\tbreak;\r\n\t\t\tcase EANScannerStateEnum.isScanning:\r\n\t\t\t\tisDisplayImage = false;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className=\"md-barcode-reader\">\r\n\t\t\t\t<div id=\"interactive\" className=\"viewport\" />\r\n\t\t\t\t{isDisplayImage ?\r\n\t\t\t\t\t<img className=\"md-large-image\" src={stateVisLnk} height=\"100px\" /> :\r\n\t\t\t\t\tisMultiVidSource ?\r\n\t\t\t\t\t\t<CameraSwitcherTabs activeCameraId={curId} vidDeviceList={vidDeviceList} onTabChanged={(newActiveId) => {\r\n\t\t\t\t\t\t\tQuagga.offDetected(this.onBarCodeDetected);\r\n\t\t\t\t\t\t\tQuagga.stop();\r\n\t\t\t\t\t\t\tthis.setState({ ...this.state, curId: newActiveId, curStep: EANScannerStateEnum.isLoading });\r\n\t\t\t\t\t\t\tthis.startQuagga(newActiveId);\r\n\t\t\t\t\t\t}} /> :\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onBarCodeDetected = (result) => {\r\n\t\tconst outputKVMap = this.state.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\tif (!outputKVMap) return;\r\n\t\tlet barcode: string = result.codeResult.code;\r\n\t\tconst barcodeKV: IKvStore = {\r\n\t\t\tkey: LDDict.gtin8,\r\n\t\t\tvalue: barcode,\r\n\t\t\tldType: LDDict.Text\r\n\t\t};\r\n\t\tthis.props.dispatchKvOutput([barcodeKV], this.props.ldTokenString, outputKVMap);\r\n\t}\r\n\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict } from '../visualcomposition/visualDict';\r\n\r\nimport { initLDLocalState, generateItptFromCompInfo, gdsfpLD } from '../generic/generatorFns';\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\n\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.inputContainer];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t}\r\n];\r\nexport const createLayoutBpCfg: (nameSelf: string) => BlueprintConfig = (nameSelf: string) => {\r\n\treturn {\r\n\t\tsubItptOf: null,\r\n\t\tnameSelf: nameSelf,\r\n\t\tinitialKvStores: initialKVStores,\r\n\t\tinterpretableKeys: cfgIntrprtKeys,\r\n\t\tcrudSkills: \"cRud\"\r\n\t};\r\n};\r\n\r\nexport interface LayoutComponentState extends LDLocalState {\r\n}\r\n\r\nexport abstract class PureLayoutComponent extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, LayoutComponentState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: LayoutComponentState): null | LayoutComponentState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer], []);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD };\r\n\t\treturn {\r\n\t\t\t...rvNew\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\tstyleClassName: string;\r\n\r\n\tprotected renderInputContainer = generateItptFromCompInfo.bind(this, VisualKeysDict.inputContainer);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [VisualKeysDict.inputContainer],\r\n\t\t\t[]);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\treturn <div className={this.styleClassName}>{this.renderInputContainer()}</div>;\r\n\t}\r\n}\r\n\r\nexport const LayoutVHCenteredColumnName = 'shnyder/layout/vh-centered-column';\r\n@ldBlueprint(createLayoutBpCfg(LayoutVHCenteredColumnName))\r\nexport class PureVHcenteredColumnLayout extends PureLayoutComponent {\r\n\tstyleClassName = \"vh-centered-column\";\r\n}\r\n","import { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from \"ldaccess/ldBlueprint\";\r\nimport { VisualKeysDict, VisualTypesDict } from \"../visualcomposition/visualDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { Component } from \"react\";\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from \"appstate/LDProps\";\r\nimport { gdsfpLD, initLDLocalState } from \"../generic/generatorFns\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { Redirect } from \"react-router\";\r\nimport { cleanRouteString } from \"./route-helper-fns\";\r\nimport React from \"react\";\r\n\r\nexport const RouteRedirectName = \"shnyder/routing/Redirect\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.routeSend_confirm];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_confirm,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n];\r\nconst bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: RouteRedirectName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport interface RedirectComponentState extends LDLocalState {\r\n\r\n}\r\n@ldBlueprint(bpCfg)\r\nexport class PureRedirectComponent extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, RedirectComponentState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: RedirectComponentState): null | RedirectComponentState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [], [VisualKeysDict.routeSend_confirm]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD, };\r\n\t\treturn {\r\n\t\t\t...rvNew\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\tstyleClassName: string;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props,\r\n\t\t\t[],\r\n\t\t\t[VisualKeysDict.routeSend_confirm]);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst { location } = this.props.routes;\r\n\t\tlet routeSendConfirm = localValues.get(VisualKeysDict.routeSend_confirm);\r\n\t\tif (!routeSendConfirm) return null;\r\n\t\trouteSendConfirm = cleanRouteString(routeSendConfirm, this.props.routes);\r\n\t\tif (location.pathname === routeSendConfirm) return null;\r\n\t\t//handle routing for editor-switching:\r\n\t\t/*let routeQuery = this.props.routes.location.search;\r\n\t\tif (routeQuery && (routeQuery.indexOf('mode=editor') !== -1)\r\n\t\t\t&& routeSendConfirm && (routeSendConfirm.indexOf('mode=editor') === -1)) {\r\n\t\t\trouteSendConfirm += '?mode=editor';\r\n\t\t\t}*/\r\n\t\treturn <Redirect to={routeSendConfirm} />;\r\n\t}\r\n}\r\n","import { AbstractDataTransformer } from \"./abstractDataTransformer\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\n\r\nexport const rowsAndCols = \"rowsAndCols\";\r\nexport const isFirstRowHeading = \"isFirstRowHeading\";\r\nexport const headings = \"headings\";\r\nexport const contentRow = \"contentRow\";\r\n\r\nexport const columnKeyAutoName = \"col\";\r\n\r\nexport const TwoDtoJSONArrayName: string = \"data/2DtoJSONArray\";\r\n\r\nexport const TwoDtoJSONArrayItptKeys: string[] = [rowsAndCols, isFirstRowHeading];\r\nexport const TwoDtoJSONArrayOutputKVs: IKvStore[] = [\r\n\t{\r\n\t\tkey: headings,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: contentRow,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t}\r\n];\r\n\r\nconst initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: rowsAndCols,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t},\r\n\t{\r\n\t\tkey: isFirstRowHeading,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Boolean\r\n\t},\r\n\t...TwoDtoJSONArrayOutputKVs\r\n];\r\n\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: TwoDtoJSONArrayName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: TwoDtoJSONArrayItptKeys,\r\n\tcrudSkills: \"cRUd\"\r\n};\r\n@ldBlueprint(bpCfg)\r\nexport class TwoDtoJSONArray extends AbstractDataTransformer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.itptKeys = TwoDtoJSONArrayItptKeys;\r\n\t\tthis.outputKvStores = TwoDtoJSONArrayOutputKVs;\r\n\t}\r\n\r\n\t/**\r\n\t * this function turns an input such as [[\"a1\",\"a2\"], [\"b1\",\"b2\"]]\r\n\t * into a) [{a1: \"b1\", a2: \"b2\"}]\r\n\t * if isFirstRowHeading is true,\r\n\t * otherwise\r\n\t * into b) [{col1: \"a1\", col2: \"a2\"},\r\n\t * \t\t\t\t\t{col1: \"b1\", col2: \"b2\"}]\r\n\t * @param inputParams\r\n\t * @param outputKvStores\r\n\t */\r\n\tprotected mappingFunction(\r\n\t\tinputParams: Map<string, IKvStore>,\r\n\t\toutputKvStores: Map<string, IKvStore>): IKvStore[] {\r\n\t\tlet rv = [];\r\n\t\tlet twoDArrKv = inputParams.get(rowsAndCols);\r\n\t\tlet isExtractHeadingKv = inputParams.get(isFirstRowHeading);\r\n\t\tif (twoDArrKv && isExtractHeadingKv) {\r\n\t\t\tlet isExtractHeading = true;\r\n\t\t\tif (!isExtractHeadingKv.value) isExtractHeading = false;\r\n\t\t\tlet rowsAndColsValues = twoDArrKv.value;\r\n\t\t\tif (Array.isArray(rowsAndColsValues) &&\r\n\t\t\t\tArray.isArray(rowsAndColsValues[0])) {\r\n\t\t\t\tlet headingsKeysOutput = [];\r\n\t\t\t\tlet contentRowOutput = [];\r\n\t\t\t\tif (isExtractHeading\r\n\t\t\t\t\t&& Array.isArray(rowsAndColsValues[1])\r\n\t\t\t\t\t&& rowsAndColsValues[0].length === rowsAndColsValues[1].length) {\r\n\t\t\t\t\theadingsKeysOutput = rowsAndColsValues[0];\r\n\t\t\t\t\tfor (let index = 1; index < rowsAndColsValues.length; index++) {\r\n\t\t\t\t\t\tconst singleInputRow = rowsAndColsValues[index];\r\n\t\t\t\t\t\tlet newRow = {};\r\n\t\t\t\t\t\theadingsKeysOutput.forEach((colKey, idx) => {\r\n\t\t\t\t\t\t\tnewRow[colKey] = singleInputRow[idx];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tcontentRowOutput.push(newRow);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet keyLen = rowsAndColsValues.length;\r\n\t\t\t\t\trowsAndColsValues.forEach((rowVal) => {\r\n\t\t\t\t\t\tlet newRowObj = {};\r\n\t\t\t\t\t\tfor (let colIdx = 0; colIdx < keyLen; colIdx++) {\r\n\t\t\t\t\t\t\tconst newRowName =  + colIdx;\r\n\t\t\t\t\t\t\tif (colIdx === 0) {\r\n\t\t\t\t\t\t\t\theadingsKeysOutput.push(newRowName);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tnewRowObj[newRowName] = rowVal[colIdx];\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\r\n\t\t\t\t\t\t\t\tnewRowObj[newRowName] = null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontentRowOutput.push(newRowObj);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tconst headingsOutputKV = outputKvStores.get(headings);\r\n\t\t\t\theadingsOutputKV.value = headingsKeysOutput;\r\n\t\t\t\tconst contentRowOutputKV = outputKvStores.get(contentRow);\r\n\t\t\t\tcontentRowOutputKV.value = contentRowOutput;\r\n\t\t\t\trv = [\r\n\t\t\t\t\theadingsOutputKV,\r\n\t\t\t\t\tcontentRowOutputKV\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rv;\r\n\t}\r\n}\r\n","import { AbstractDataTransformer } from \"./abstractDataTransformer\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { VisualTypesDict, VisualKeysDict } from \"components/visualcomposition/visualDict\";\r\n\r\nexport const transfInputKey = UserDefDict.inputData;\r\nconst transfOutputKey = UserDefDict.outputData;\r\nexport const headerField = \"HeaderTextField\";\r\nexport const shField = \"SubHeaderTextField\";\r\n\r\nexport const JSONArrayToCompactInfoArrayName: string = \"data/JSONArrayToCompactInfoArray\";\r\n\r\nexport const ToCompactInfoArrayItptKeys: string[] = [transfInputKey, headerField, shField];\r\nexport const ToCompactInfoArrayOutputKVs: IKvStore[] = [\r\n\t{\r\n\t\tkey: transfOutputKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.compactInfoElement\r\n\t}\r\n];\r\n\r\nconst initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: transfInputKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t},\r\n\t{\r\n\t\tkey: headerField,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: shField,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t...ToCompactInfoArrayOutputKVs\r\n];\r\n\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: JSONArrayToCompactInfoArrayName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: ToCompactInfoArrayItptKeys,\r\n\tcrudSkills: \"cRUd\"\r\n};\r\n@ldBlueprint(bpCfg)\r\nexport class JSONArrayToCompactInfoArray extends AbstractDataTransformer {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.itptKeys = ToCompactInfoArrayItptKeys;\r\n\t\tthis.outputKvStores = ToCompactInfoArrayOutputKVs;\r\n\t}\r\n\r\n\t/**\r\n\t * this function turns an input such as\r\n\t * [{propA: \"contentA1\", propB: \"contentB1\", propC: \"ignored\"},\r\n\t *  {propA: \"contentA2\", propB: \"contentB2\", propC: \"ignoredAgain\"}]\r\n\t * into [{HeaderText: \"contentA1\", SubHeaderText: \"contentB1\"}, {HeaderText: \"contentA2\", SubHeaderText: \"contentB2\"}\r\n\t * condition: if HeaderField === \"propA\" && SubHeaderField === \"propB\"\r\n\t * @param inputParams\r\n\t * @param outputKvStores\r\n\t */\r\n\tprotected mappingFunction(\r\n\t\tinputParams: Map<string, IKvStore>,\r\n\t\toutputKvStores: Map<string, IKvStore>): IKvStore[] {\r\n\t\t//TODO: actually implement\r\n\t\tlet rv = [];\r\n\t\tlet jsonArrKv = inputParams.get(transfInputKey);\r\n\t\tlet headerFieldKv = inputParams.get(headerField);\r\n\t\tlet shFieldKv = inputParams.get(shField);\r\n\t\tif (jsonArrKv && headerFieldKv && shFieldKv) {\r\n\t\t\tif (jsonArrKv.value && headerFieldKv.value && shFieldKv.value\r\n\t\t\t\t&& Array.isArray(jsonArrKv.value)) {\r\n\t\t\t\tlet jsonArr: any[] = jsonArrKv.value;\r\n\t\t\t\t//source type constants\r\n\t\t\t\tconst headerFieldConst = headerFieldKv.value;\r\n\t\t\t\tconst shFieldConst = shFieldKv.value;\r\n\t\t\t\t//target type constants\r\n\t\t\t\tconst headerTextConst = VisualKeysDict.headerTxt;\r\n\t\t\t\tconst subHeaderTextConst = VisualKeysDict.subHeaderTxt;\r\n\t\t\t\tconst primaryItptConst = VisualKeysDict.primaryItpt;\r\n\t\t\t\tconst secondaryItptConst = VisualKeysDict.secondaryItpt;\r\n\t\t\t\t//output var\r\n\t\t\t\tlet outputValArr = [];\r\n\t\t\t\tjsonArr.forEach((arrElem, idx) => {\r\n\t\t\t\t\tlet compactInfoElem = arrElem\r\n\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t[headerTextConst]: arrElem[headerFieldConst] ? arrElem[headerFieldConst] : null,\r\n\t\t\t\t\t\t\t[subHeaderTextConst]: arrElem[shFieldConst] ? arrElem[shFieldConst] : null,\r\n\t\t\t\t\t\t\t[primaryItptConst]: null,\r\n\t\t\t\t\t\t\t[secondaryItptConst]: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[headerTextConst]: null,\r\n\t\t\t\t\t\t\t[subHeaderTextConst]: null,\r\n\t\t\t\t\t\t\t[primaryItptConst]: null,\r\n\t\t\t\t\t\t\t[secondaryItptConst]: null\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\toutputValArr.push(compactInfoElem);\r\n\t\t\t\t});\r\n\t\t\t\tconst transfOutputKV = outputKvStores.get(transfOutputKey);\r\n\t\t\t\ttransfOutputKV.value = outputValArr;\r\n\t\t\t\trv = [transfOutputKV];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rv;\r\n\t}\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict } from '../visualcomposition/visualDict';\r\n\r\nimport { initLDLocalState, generateItptFromCompInfo, gdsfpLD } from '../generic/generatorFns';\r\nimport { Component } from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { isReactComponent } from 'components/reactUtils/reactUtilFns';\r\nimport React from 'react';\r\n\r\nexport const CSSWrapperName = \"shnyder/layout/CSSWrapper\";\r\n\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.inputContainer, VisualKeysDict.cssClassName];\r\n\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cssClassName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\n\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: CSSWrapperName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport interface CSSWrapperState extends LDLocalState {\r\n}\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class PureCSSWrapper extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, CSSWrapperState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: CSSWrapperState): null | CSSWrapperState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer], [VisualKeysDict.cssClassName], null, [false], [true]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD };\r\n\t\treturn {\r\n\t\t\t...rvNew\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\tstyleClassName: string;\r\n\r\n\tprotected renderInputContainer = generateItptFromCompInfo.bind(this, VisualKeysDict.inputContainer);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [VisualKeysDict.inputContainer],\r\n\t\t\t[VisualKeysDict.cssClassName], [false], [true]);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\tlet renderFreeResult: JSX.Element = this.renderInputContainer();\r\n\t\tconst { localValues } = this.state;\r\n\t\tif (isReactComponent(renderFreeResult)) {\r\n\t\t\tconst cssClassNames: string[] = localValues.get(VisualKeysDict.cssClassName);\r\n\t\t\tconst cssClassStrings = cssClassNames.join(\" \");\r\n\t\t\tif (!!renderFreeResult && !!cssClassNames /*&& renderFreeResult.hasOwnProperty(\"className\")*/) {\r\n\t\t\t\t/*renderFreeResult[\"className\"] = cssClassName;*/\r\n\t\t\t\treturn <div className={cssClassStrings}>{renderFreeResult}</div>;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn <>{renderFreeResult}</>;\r\n\t}\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap, OutputKVMapElement } from 'ldaccess/ldBlueprint';\r\n\r\nimport { BaseContainerRewrite } from './baseContainer-rewrite';\r\nimport { LDLocalState, LDConnectedState, LDConnectedDispatch, LDOwnProps } from 'appstate/LDProps';\r\nimport { Component } from 'react';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { gdsfpLD, initLDLocalState } from './generatorFns';\r\nimport { ldOptionsDeepCopy } from 'ldaccess/ldUtils';\r\nimport { NetworkPreferredToken } from 'ldaccess/ildtoken';\r\nimport { getKVStoreByKey } from 'ldaccess/kvConvenienceFns';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport React from 'react';\r\n\r\nexport const MagicBoxName = \"shnyder/MagicBox\";\r\nconst inputdata = UserDefDict.inputData;\r\nconst magicOutput = \"mOut\";\r\nexport const magicCanInterpretType = \"shnyder/MagicBoxType\";\r\n\r\nlet MagicBoxInputKeys: string[] = [inputdata];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{ key: inputdata, value: undefined, ldType: undefined }\r\n];\r\nexport const MagicBoxCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: MagicBoxName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: MagicBoxInputKeys,\r\n\tcrudSkills: \"cRud\",\r\n\tcanInterpretType: magicCanInterpretType\r\n};\r\nexport interface MagicBoxState extends LDLocalState {\r\n\tcontainertoken: string;\r\n}\r\n\r\n@ldBlueprint(MagicBoxCfg)\r\nexport class PureMagicBox extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, MagicBoxState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: MagicBoxState): null | MagicBoxState {\r\n\t\tlet rvLocal = gdsfpLD(nextProps, prevState, [], MagicBoxInputKeys, magicCanInterpretType);\r\n\t\tif (!rvLocal) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet nextContainerTokenStr: string = nextProps.ldOptions.ldToken.get() + \"magic\";\r\n\t\tlet nextContainerToken = new NetworkPreferredToken(nextContainerTokenStr);\r\n\t\tif (!prevState.containertoken) {\r\n\t\t\tconst newLDOptionsFItpt: ILDOptions = ldOptionsDeepCopy(nextProps.ldOptions);\r\n\t\t\tnewLDOptionsFItpt.ldToken = nextContainerToken;\r\n\t\t\tconst modKV: IKvStore = getKVStoreByKey(nextProps.ldOptions.resource.kvStores, inputdata);\r\n\t\t\tlet outputNum: number = 1;\r\n\t\t\tif (Array.isArray(modKV.value)) {\r\n\t\t\t\tlet newLdType = modKV.ldType;\r\n\t\t\t\tlet newKvStores: IKvStore[] = [];\r\n\t\t\t\toutputNum = modKV.value.length;\r\n\t\t\t\tfor (let i = 0; i < outputNum; i++) {\r\n\t\t\t\t\tnewKvStores.push({\r\n\t\t\t\t\t\tkey: magicOutput + i,\r\n\t\t\t\t\t\tvalue: modKV.value[i],\r\n\t\t\t\t\t\tldType: newLdType\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tnewLDOptionsFItpt.resource.kvStores = newKvStores;\r\n\t\t\t}\r\n\t\t\tnextProps.notifyLDOptionsChange(newLDOptionsFItpt);\r\n\t\t} else {\r\n\t\t\tconst modKV: IKvStore = getKVStoreByKey(nextProps.ldOptions.resource.kvStores, inputdata);\r\n\r\n\t\t\tlet outputKVMap: OutputKVMap = rvLocal.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\t\tif (!outputKVMap) {\r\n\t\t\t\toutputKVMap = {};\r\n\t\t\t}\r\n\t\t\tlet outputNum: number = 1;\r\n\t\t\tif (Array.isArray(modKV.value)) {\r\n\t\t\t\toutputNum = modKV.value.length;\r\n\t\t\t\tfor (let i = 0; i < outputNum; i++) {\r\n\t\t\t\t\tconst newElems: OutputKVMapElement[] = [{ targetLDToken: nextContainerToken, targetProperty: magicOutput + i }];\r\n\t\t\t\t\toutputKVMap[inputdata] = newElems;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst newElems: OutputKVMapElement[] = [{ targetLDToken: nextContainerToken, targetProperty: inputdata }];\r\n\t\t\t\toutputKVMap[inputdata] = newElems;\r\n\t\t\t}\r\n\t\t\tnextProps.dispatchKvOutput([modKV], nextProps.ldTokenString, outputKVMap);\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLocal };\r\n\t\treturn { ...prevState, ...rvNew, containertoken: nextContainerTokenStr };\r\n\t}\r\n\r\n\t//member-declarations for the interface\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [], MagicBoxInputKeys);\r\n\t\tthis.state = { ...ldState, containertoken: null };\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { containertoken } = this.state;\r\n\t\tif (!containertoken) return null;\r\n\t\treturn <BaseContainerRewrite ldTokenString={this.state.containertoken} />;\r\n\t}\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\n\r\nimport { Component, Fragment } from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { VisualKeysDict } from './visualcomposition/visualDict';\r\nimport { gdsfpLD, initLDLocalState, generateItptFromCompInfo } from './generic/generatorFns';\r\nimport React from 'react';\r\n\r\nexport const projCfgName = \"ProjectConfiguration\";\r\n\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.inputContainer, UserDefDict.configItpt];\r\n\r\nlet interpretableKeys: string[] = [...cfgIntrprtKeys, VisualKeysDict.cssClassName];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: UserDefDict.configItpt,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cssClassName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\r\n];\r\n\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: projCfgName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: interpretableKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport interface ProjectConfigState extends LDLocalState {\r\n}\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class PureProjectConfig extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, ProjectConfigState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: ProjectConfigState): null | ProjectConfigState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer], [UserDefDict.configItpt, VisualKeysDict.cssClassName], null, [true]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD };\r\n\t\treturn {\r\n\t\t\t...rvNew\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\tstyleClassName: string;\r\n\r\n\tprotected renderInputContainer = generateItptFromCompInfo.bind(this);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [VisualKeysDict.inputContainer],\r\n\t\t\t[UserDefDict.configItpt, VisualKeysDict.cssClassName]);\r\n\t\tthis.state = {\r\n\t\t\t...ldState,\r\n\t\t};\r\n\t}\r\n\trender() {\r\n\t\t//let renderFreeResult: JSX.Element = this.renderInputContainer();\r\n\t\tlet listSections = [];\r\n\t\tconst sectionElems = this.state.compInfos.get(VisualKeysDict.inputContainer);\r\n\t\tconst { routes } = this.props;\r\n\t\tif (Array.isArray(sectionElems)) {\r\n\t\t\tsectionElems.forEach((elem, displayIdx) => {\r\n\t\t\t\tlistSections.push(this.renderInputContainer(VisualKeysDict.inputContainer, routes, displayIdx));\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlistSections.push(this.renderInputContainer(VisualKeysDict.inputContainer, routes));\r\n\t\t}\r\n\t\tif (!listSections || listSections.length === 0) return null;\r\n\r\n\t\tconst cssClassName = this.state.localValues.get(VisualKeysDict.cssClassName);\r\n\t\tif (!!cssClassName) {\r\n\t\t\treturn <div className={cssClassName}>{\r\n\t\t\t\tlistSections.map((listSection, idx) => {\r\n\t\t\t\t\tif (!listSection) return null;\r\n\t\t\t\t\treturn <Fragment key={\"frag\" + idx}>\r\n\t\t\t\t\t\t{listSection}\r\n\t\t\t\t\t</Fragment>;\r\n\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t}</div>;\r\n\t\t}\r\n\t\treturn <>{\r\n\t\t\tlistSections.map((listSection, idx) => {\r\n\t\t\t\tif (!listSection) return null;\r\n\t\t\t\treturn <Fragment key={\"frag\" + idx}>\r\n\t\t\t\t\t{listSection}\r\n\t\t\t\t</Fragment>;\r\n\t\t\t}\r\n\t\t\t)\r\n\t\t}</>;\r\n\t}\r\n}\r\n","import { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { AbstractDataTransformer } from \"datatransformation/abstractDataTransformer\";\r\nimport { ActionTypesDict, ActionType } from \"components/actions/ActionDict\";\r\nimport { isObjPropertyRef } from \"ldaccess/ldUtils\";\r\n\r\nexport const payloadInputKey = UserDefDict.inputData;\r\nconst transfOutputKey = UserDefDict.outputData;\r\nexport const idField = \"actionId\";\r\nexport const typeField = \"actionType\";\r\n\r\nexport const ActionCompName: string = \"ActionComponent\";\r\n\r\nexport const ActionCompKeys: string[] = [idField, typeField, payloadInputKey];\r\nexport const ActionCompOutputKVs: IKvStore[] = [\r\n\t{\r\n\t\tkey: transfOutputKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: ActionTypesDict.metaExplorerAction\r\n\t}\r\n];\r\n\r\nconst initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: idField,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: typeField,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: payloadInputKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t},\r\n\t...ActionCompOutputKVs\r\n];\r\n\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: ActionCompName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: ActionCompKeys,\r\n\tcrudSkills: \"cRUd\"\r\n};\r\n@ldBlueprint(bpCfg)\r\nexport class ActionComp extends AbstractDataTransformer {\r\n\tconstructor(ldTkStr?: string) {\r\n\t\tsuper(ldTkStr);\r\n\t\tthis.itptKeys = ActionCompKeys;\r\n\t\tthis.outputKvStores = ActionCompOutputKVs;\r\n\t\tlet kvs = this.cfg.initialKvStores;\r\n\t\t//setting inputParams on first load, refresh output if necessary\r\n\t\tfor (let inputidx = 0; inputidx < this.itptKeys.length; inputidx++) {\r\n\t\t\tconst inputKey = this.itptKeys[inputidx];\r\n\t\t\tlet param = kvs.find((val) => val.key === inputKey);\r\n\t\t\tif (param && param.value !== null && !isObjPropertyRef(param.value)\r\n\t\t\t\t&& JSON.stringify(param) !== JSON.stringify(this.inputParams.get(inputKey))) {\r\n\t\t\t\tthis.inputParams.set(inputKey, param);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.refreshOutput();\r\n\t}\r\n\r\n\t/**\r\n\t * this function produces an ldAction-typed value with id, type, and payload field\r\n\t * @param inputParams\r\n\t * @param outputKvStores\r\n\t */\r\n\tprotected mappingFunction(\r\n\t\tinputParams: Map<string, IKvStore>,\r\n\t\toutputKvStores: Map<string, IKvStore>): IKvStore[] {\r\n\t\tlet rv = [];\r\n\t\tlet payloadInputKv = inputParams.get(payloadInputKey);\r\n\t\tlet idFieldKv = inputParams.get(idField);\r\n\t\tlet typeFieldKv = inputParams.get(typeField);\r\n\t\tif (payloadInputKv && payloadInputKv.value && ((idFieldKv && idFieldKv.value) || (typeFieldKv && typeFieldKv.value))) {\r\n\t\t\tlet payload: any[] = payloadInputKv.value;\r\n\t\t\t//source type constants\r\n\t\t\tconst idFieldConst = idFieldKv ? idFieldKv.value : null;\r\n\t\t\tconst typeFieldConst = typeFieldKv ? typeFieldKv.value : null;\r\n\r\n\t\t\tconst newAction: ActionType = {\r\n\t\t\t\tldId: idFieldConst,\r\n\t\t\t\tldType: typeFieldConst,\r\n\t\t\t\tpayload: payload\r\n\t\t\t};\r\n\t\t\t//output var\r\n\t\t\tlet outputValArr = [newAction];\r\n\t\t\tconst transfOutputKV = outputKvStores.get(transfOutputKey);\r\n\t\t\ttransfOutputKV.value = outputValArr;\r\n\t\t\trv = [transfOutputKV];\r\n\t\t}\r\n\t\treturn rv;\r\n\t}\r\n}\r\n","import { AbstractDataTransformer } from \"datatransformation/abstractDataTransformer\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { ActionKeysDict } from \"./ActionDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { applicationStore } from \"approot\";\r\nimport { registerIdActionHandlerAction, registerTypeActionHandlerAction } from \"appstate/epicducks/action-duck\";\r\n\r\nexport const handleTypeKey = ActionKeysDict.canHandleType;\r\nexport const handleIdKey = ActionKeysDict.canHandleId;\r\nexport const payloadOutputKey = UserDefDict.outputData;\r\n\r\nexport const ActionHandlerName = \"ActionHandler\";\r\n\r\nexport const ActionHandlerKeys: string[] = [handleTypeKey, handleIdKey];\r\nexport const ActionHandlerOutputKVs: IKvStore[] = [\r\n\t{\r\n\t\tkey: payloadOutputKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: undefined\r\n\t}\r\n];\r\nexport const ActionHandlerInputKVs: IKvStore[] = [\r\n\t{\r\n\t\tkey: handleTypeKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: handleIdKey,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\n\r\nconst initialKVStores: IKvStore[] = [\r\n\t...ActionHandlerInputKVs,\r\n\t...ActionHandlerOutputKVs\r\n];\r\n\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: ActionHandlerName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: ActionHandlerKeys,\r\n\tcrudSkills: \"cRUd\"\r\n};\r\n@ldBlueprint(bpCfg)\r\nexport class ActionHandler extends AbstractDataTransformer {\r\n\tconstructor(ldTkStr?: string) {\r\n\t\tsuper(ldTkStr);\r\n\t\tthis.itptKeys = [ActionKeysDict.action_internal, ...ActionHandlerKeys];\r\n\t\tthis.outputKvStores = ActionHandlerOutputKVs;\r\n\t\tlet typeKv = this.cfg.initialKvStores.find((val) => val.key === handleTypeKey);\r\n\t\tlet idKv = this.cfg.initialKvStores.find((val) => val.key === handleIdKey);\r\n\t\tthis.triggerRegisterIfNecessary(typeKv, idKv);\r\n\t}\r\n\r\n\tprotected triggerRegisterIfNecessary(typeKv: IKvStore, idKv: IKvStore) {\r\n\t\tif (idKv && !!idKv.value) {\r\n\t\t\tapplicationStore.dispatch(registerIdActionHandlerAction(idKv.value, this.ldTkStr));\r\n\t\t}\r\n\t\tif (typeKv && !!typeKv.value) {\r\n\t\t\tapplicationStore.dispatch(registerTypeActionHandlerAction(typeKv.value, this.ldTkStr));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected mappingFunction(\r\n\t\tinputParams: Map<string, IKvStore>,\r\n\t\toutputKvStores: Map<string, IKvStore>): IKvStore[] {\r\n\t\tlet rv = [];\r\n\t\tlet handleTypeInputKv = inputParams.get(handleTypeKey);\r\n\t\tlet handleIdInputKv = inputParams.get(handleIdKey);\r\n\t\tlet internalActionKv = inputParams.get(ActionKeysDict.action_internal);\r\n\t\tif (((handleTypeInputKv && handleTypeInputKv.value) || (handleIdInputKv && handleIdInputKv.value)) && internalActionKv && internalActionKv.value) {\r\n\t\t\tconst payload = internalActionKv.value;\r\n\t\t\tconst transfOutputKV = outputKvStores.get(payloadOutputKey);\r\n\t\t\ttransfOutputKV.value = payload;\r\n\t\t\trv = [transfOutputKV];\r\n\t\t}\r\n\t\treturn rv;\r\n\t}\r\n}\r\n","import { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { VisualKeysDict } from 'components/visualcomposition/visualDict';\r\nimport { LDOwnProps, LDConnectedDispatch, LDConnectedState, LDLocalState } from 'appstate/LDProps';\r\nimport { gdsfpLD, initLDLocalState } from 'components/generic/generatorFns';\r\nimport { Component } from 'react';\r\nimport React from 'react';\r\n\r\nexport var SingleFieldViewIntrprtrName: string = \"game/SingleFieldView\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[\r\n\t\tVisualKeysDict.headerTxt\r\n\t];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.headerTxt,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: SingleFieldViewIntrprtrName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\ninterface SingleFieldViewState {\r\n}\r\n@ldBlueprint(bpCfg)\r\nexport class PureSingleFieldView extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, SingleFieldViewState & LDLocalState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | LDLocalState & SingleFieldViewState)\r\n\t\t: null | LDLocalState & SingleFieldViewState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [\r\n\t\t\t], [\r\n\t\t\t\tVisualKeysDict.headerTxt\r\n\t\t\t]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvLD\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tthis.state = {\r\n\t\t\t...initLDLocalState(this.cfg, props,\r\n\t\t\t\t[\r\n\t\t\t\t],\r\n\t\t\t\t[\r\n\t\t\t\t\tVisualKeysDict.headerTxt\r\n\t\t\t\t])\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst headerTxt = localValues.get(VisualKeysDict.headerTxt);\r\n\t\treturn <div className=\"game-field\">{headerTxt}</div>;\r\n\t}\r\n\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__59__;","module.exports = __WEBPACK_EXTERNAL_MODULE__60__;","import { LDError } from './../appstate/LDError';\r\nimport { Observable, from } from 'rxjs';\r\nimport { ILDWebResource } from 'ldaccess/ildresource';\r\n\r\nexport class ImageUploadAPI {  // URL to web api IRI resource\r\n  postNewImage(fileList: FileList, targetUrl: string): Observable<ILDWebResource> {//Observable<IWebResource> { //FETCH\r\n    if (targetUrl == null) {\r\n      throw new Error((\"no targetUrl defined for Image Upload\"));\r\n    }\r\n    if (fileList.length > 0) {\r\n      let file: File = fileList[0];\r\n      let formData: FormData = new FormData();\r\n      formData.append('file', file, file.name);\r\n      let returnVal: Observable<ILDWebResource>;\r\n      let fetchPromise = fetch(targetUrl, {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n        .then((response) => {\r\n          if (response.status >= 400) {\r\n            throw new LDError(\"Bad response from server\");\r\n          }\r\n          return response.json();\r\n          /*\r\n          var testVar = HydraClientAPI.getHC().getHypermediaProcessor(response);\r\n          var procResource = HydraClientAPI.getHC().getHypermediaProcessor(response).process(response, HydraClientAPI.getHC()).then((hydraResponse) => {\r\n            console.dir(hydraResponse);\r\n            return hydraResponse;\r\n          });\r\n          return procResource;*/\r\n        });\r\n      returnVal = from(fetchPromise);\r\n      return returnVal;\r\n    }\r\n    else {\r\n      throw new Error((\"fileList for images was empty\"));\r\n    }\r\n  }\r\n}\r\n","import { LDError } from './../appstate/LDError';\r\nimport { Observable, from } from 'rxjs';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { ILDWebResource } from 'ldaccess/ildresource';\r\n\r\n//let testTC = new TypesCollection([\"someTypeInAnArray\"] || new Array<string>());\r\n//console.log(testTC.contains(\"someTypeInAnArray\"));\r\n\r\n/*\r\nclass MyArray<T> extends Array<T> {\r\n\tconstructor(items?: Array<T>) {\r\n\t\tsuper(...items);\r\n\t\tObject.setPrototypeOf(this, Object.create(MyArray.prototype));\r\n\t}\r\n\tlogCount() {\r\n\t\tconsole.log(\"Count: \" + this.length)\r\n\t}\r\n}\r\n\r\nvar myArray = new MyArray<string>();\r\nconsole.dir(myArray);\r\nmyArray.logCount();\r\n*/\r\n\r\nexport class LDOptionsAPI {  // URL to web api IRI resource\r\n\tgetLDOptions(targetUrl: string): Observable<ILDWebResource> {\r\n\t\tif (targetUrl == null) {\r\n\t\t\tthrow new Error((\"no targetUrl defined for LDOptionsAPI\"));\r\n\t\t}\r\n\t\tlet returnVal: Observable<ILDWebResource>;\r\n\t\tlet fetchPromise = fetch(targetUrl, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAccept: \"application/ld+json\"\r\n\t\t\t},\r\n\t\t\t/*\r\n\t\t\tmode: 'cors',\r\n\t\t\tcache: 'default'*/\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status >= 400) {\r\n\t\t\t\t\tthrow new LDError(\"Bad response from server\");\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t\t/*\r\n\t\t\t\tvar testVar = HydraClientAPI.getHC().getHypermediaProcessor(response);\r\n\t\t\t\tvar procResource = HydraClientAPI.getHC().getHypermediaProcessor(response).process(response, HydraClientAPI.getHC()).then((hydraResponse) => {\r\n\t\t\t\t\tconsole.dir(hydraResponse);\r\n\t\t\t\t\treturn hydraResponse;\r\n\t\t\t\t});\r\n\t\t\t\treturn procResource;*/\r\n\t\t\t});\r\n\t\treturnVal = from(fetchPromise);\r\n\t\treturn returnVal;\r\n\t}\r\n\tpostLDOptions(uploadData: ILDOptions, targetUrl: string): Observable<ILDWebResource> {//Observable<ILDWebResource> { //FETCH\r\n\t\tif (targetUrl == null) {\r\n\t\t\tthrow new Error((\"no targetUrl defined for LDOptionsAPI\"));\r\n\t\t}\r\n\t\tlet returnVal: Observable<ILDWebResource>;\r\n\t\tlet uploadDataSerialized: string;\r\n\t\tlet fetchPromise = fetch(targetUrl, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/ld+json',\r\n\t\t\t\t'Content-Type': \"application/ld+json\"\r\n\t\t\t},\r\n\t\t\tbody: uploadDataSerialized\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status >= 400) {\r\n\t\t\t\t\tthrow new LDError(\"Bad response from server\");\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t\t/*\r\n\t\t\t\tvar testVar = HydraClientAPI.getHC().getHypermediaProcessor(response);\r\n\t\t\t\tvar procResource = HydraClientAPI.getHC().getHypermediaProcessor(response).process(response, HydraClientAPI.getHC()).then((hydraResponse) => {\r\n\t\t\t\t\tconsole.dir(hydraResponse);\r\n\t\t\t\t\treturn hydraResponse;\r\n\t\t\t\t});\r\n\t\t\t\treturn procResource;*/\r\n\t\t\t});\r\n\t\treturnVal = from(fetchPromise);\r\n\t\treturn returnVal;\r\n\t}\r\n}\r\n","import { Observable, from } from \"rxjs\";\r\nimport { IModStatus } from \"appstate/modstate\";\r\n\r\nexport interface IModSpec {\r\n\tid: string;\r\n\tinitFn: () => Promise<IModStatus>;\r\n\tdependencies: string[];\r\n}\r\n\r\nexport class ModAPI {  // URL to web api IRI resource\r\n\tprotected modInitFns: Map<string, () => Promise<IModStatus>> = new Map();\r\n\tprotected loadedModsMap: Map<string, boolean> = new Map();\r\n\tprotected modDependencies: Map<string, string[]> = new Map();\r\n\tgetModData(id: string): Observable<IModStatus> {\r\n\t\tif (id == null) {\r\n\t\t\tthrow new Error((\"no id defined for loading Mod\"));\r\n\t\t}\r\n\t\tif (!this.modInitFns.has(id)) {\r\n\t\t\tthrow new Error((\"no Promise found for mod with id: \" + id));\r\n\t\t}\r\n\t\tlet returnVal: Observable<IModStatus>;\r\n\t\tconst modPromise = this.modInitFns.get(id);\r\n\t\treturnVal = from(modPromise());\r\n\t\treturn returnVal;\r\n\t}\r\n\taddModInitFn(modSpec: IModSpec) {\r\n\t\tthis.modInitFns.set(modSpec.id, modSpec.initFn);\r\n\t\tthis.modDependencies.set(modSpec.id, modSpec.dependencies);\r\n\t}\r\n\taddRequiredMod(modId: string) {\r\n\t\tthis.loadedModsMap.set(modId, false);\r\n\t}\r\n\tsetModLoadingComplete(modId: string) {\r\n\t\tthis.loadedModsMap.set(modId, true);\r\n\t}\r\n\tcheckDependencies(modId: string): boolean {\r\n\t\tconst deps = this.modDependencies.get(modId);\r\n\t\tfor (let idx = 0; idx < deps.length; idx++) {\r\n\t\t\tconst dep = deps[idx];\r\n\t\t\tif (this.loadedModsMap.has(dep)) {\r\n\t\t\t\tif (!this.loadedModsMap.get(dep)){\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tgetDepenciesfor(modId: string): string[] {\r\n\t\treturn this.modDependencies.get(modId);\r\n\t}\r\n\tisRequiredLoadingComplete(): boolean {\r\n\t\tlet rv = true;\r\n\t\tthis.loadedModsMap.forEach((val, key) => {\r\n\t\t\tif (val === false) rv = false;\r\n\t\t});\r\n\t\treturn rv;\r\n\t}\r\n}\r\n","import { IItptMatcher } from \"ldaccess/iitpt-matcher\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\n\r\nimport { IItptRetriever } from \"ldaccess/iitpt-retriever\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { DEFAULT_ITPT_RETRIEVER_NAME } from \"defaults/DefaultItptRetriever\";\r\n\r\n/*\r\nlet matchIsType = (a: IKvStore) => a.key === LDConsts.type || a.key === LDConsts.isA;\r\nlet matchIsLang = (a: IKvStore) => a.key === LDConsts.lang;\r\nlet matchIsId = (a: IKvStore) => a.key === LDConsts.id || a.key === LDConsts.iri;\r\n*/\r\n/**\r\n * the matcher is used for encapsuling the decision process that associates keys and values in a kv-store a matching itpt.\r\n * Currently, this is also the place where additional itpts are registered to the AppItptRetriever, because it's not\r\n * possible there\r\n */\r\nexport class DefaultItptMatcher implements IItptMatcher {\r\n\tprivate itptRetrieverMap: Map<string, IItptRetriever> = new Map();\r\n\r\ngetItptRetriever(itptRetrieverId: string): IItptRetriever {\r\n\tif (!itptRetrieverId) throw new Error(\"key must be defined\");\r\n\tlet rvCandidate = this.itptRetrieverMap.get(itptRetrieverId);\r\n\tif (!rvCandidate) {\r\n\t\tif (itptRetrieverId === DEFAULT_ITPT_RETRIEVER_NAME) {\r\n\t\t\tthrow new Error(\"no default itpt set for matcher\");\r\n\t\t} else {\r\n\t\t\trvCandidate = this.getItptRetriever(DEFAULT_ITPT_RETRIEVER_NAME); //fallback\r\n\t\t}\r\n\t}\r\n\treturn rvCandidate;\r\n}\r\nsetItptRetriever(itptRetrieverId: string, retriever: IItptRetriever) {\r\n\tif (!itptRetrieverId || !retriever) throw new Error(\"both key and retriever must be defined\");\r\n\tthis.itptRetrieverMap.set(itptRetrieverId, retriever);\r\n}\r\n\r\nmatchSingleKV(single: IKvStore, crudSkills: string): ILDOptions {\r\n\tthrow new Error(\"Method not implemented.\");\r\n}\r\nmatchLDOptions(matchInput: ILDOptions, crudSkills: string, itptRetrieverId: string): ILDOptions[] {\r\n\tlet rv: ILDOptions[] = [];\r\n\treturn rv;\r\n\t/*let ldType = multi.find(matchIsType);\r\n\tlet ldLang = multi.find(matchIsLang);\r\n\tlet ldId = multi.find(matchIsId);\r\n\tif (ldId !== null) {\r\n\t\t//this is a base object and has an id, if an itpt-retriever for special IDs is defined, then it could be used here\r\n\t\t//return;\r\n\t}\r\n\tlet searchTerm: Array<IKvStore>;\r\n\tif (ldType) {\r\n\t\t//this is a typed base object then\r\n\t\tlet singleSearch: IKvStore = { key: undefined, value: undefined, ldType: ldType.value };\r\n\t\tsearchTerm = [singleSearch];\r\n\t} else {\r\n\t\tsearchTerm = [];\r\n\t\tfor (let idx = 0; idx < multi.length; idx++) {\r\n\t\t\tconst itm = multi[idx];\r\n\t\t\tif (itm && itm.ldType) {\r\n\t\t\t\tsearchTerm.push(itm);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\tif (searchTerm) {\r\n\t\tif (searchTerm.length === 1) {\r\n\t\t\tlet intrprtr = appIntRetrFn().searchForObjItpt(searchTerm[0].ldType, crudSkills);\r\n\t\t\tsearchTerm[0].intrprtrClass = intrprtr;\r\n\t\t\tlet rvAdd: IKvStore = searchTerm[0];\r\n\t\t\trv.push(rvAdd);\r\n\t\t\treturn rv;\r\n\t\t} else {\r\n\t\t\tsearchTerm.forEach((elem) => {\r\n\t\t\t\tlet intrprtr = appIntRetrFn().searchForObjItpt(elem.ldType, crudSkills);\r\n\t\t\t\telem.intrprtrClass = intrprtr;\r\n\t\t\t\t//let rvAddMulti: IKvStore = { key: null, value: null, intrprtrClass: intrprtr, ldType: elem };\r\n\t\t\t\trv.push(elem);\r\n\t\t\t});\r\n\t\t\treturn rv;\r\n\t\t}\r\n\r\n\t}*/\r\n}\r\n\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { DefaultItptRetriever, DEFAULT_ITPT_RETRIEVER_NAME } from \"defaults/DefaultItptRetriever\";\r\nimport { IBlueprintItpt } from \"ldaccess/ldBlueprint\";\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps } from \"appstate/LDProps\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"appstate/reduxFns\";\r\n\r\nexport class ReduxItptRetriever extends DefaultItptRetriever {\r\n\t//maps by nameSelf of the Itpt\r\n\tprivate connectedItpts: Map<string, any> = new Map();\r\n\r\n\tconstructor(name: string = DEFAULT_ITPT_RETRIEVER_NAME) {\r\n\t\tsuper(name);\r\n\t}\r\n\tsearchForObjItpt(term: string | string[], crudSkills: string) {\r\n\t\tlet searchResult = super.searchForObjItpt(term, crudSkills) as IBlueprintItpt;\r\n\t\tif (searchResult) {\r\n\t\t\treturn this.connectedItpts.get(searchResult.cfg.nameSelf);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsearchForObjItptAndDerive(term: string | string[], crudSkills: string, newLDTokenStr: string) {\r\n\t\tlet prevItpt = this.getDerivedItpt(newLDTokenStr) as IBlueprintItpt;\r\n\t\tlet searchResult = super.searchForObjItpt(term, crudSkills) as IBlueprintItpt;\r\n\t\tif (searchResult && (!prevItpt || prevItpt.cfg.nameSelf !== searchResult.cfg.nameSelf)) {\r\n\t\t\tthis.setDerivedItpt(newLDTokenStr, searchResult);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tsearchForKVItpt(term: string, crudSkills: string) {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n\taddItpt(typeName: string, intrprtr: any, crudSkills: string, tags: string[]): void {\r\n\t\tsuper.addItpt(typeName, intrprtr, crudSkills, tags);\r\n\t\tlet intrprtrAsLDBP: IBlueprintItpt = intrprtr;\r\n\t\tlet nameSelf = intrprtrAsLDBP.cfg.nameSelf;\r\n\t\tlet connItpt = connect<LDConnectedState, LDConnectedDispatch, LDOwnProps>(mapStateToProps, mapDispatchToProps)(intrprtr);\r\n\t\tthis.connectedItpts.set(nameSelf, connItpt);\r\n\t}\r\n\tsetDerivedItpt(ldTokenVal: string, itpt: any): void {\r\n\t\tsuper.setDerivedItpt(ldTokenVal, itpt);\r\n\t\tif (itpt === null) return;\r\n\t\tlet intrprtrAsLDBP: IBlueprintItpt = itpt;\r\n\t\tlet nameSelf = intrprtrAsLDBP.cfg.nameSelf;\r\n\t\tlet connItpt = connect<LDConnectedState, LDConnectedDispatch, LDOwnProps>(mapStateToProps, mapDispatchToProps)(itpt);\r\n\t\tthis.connectedItpts.set(nameSelf, connItpt);\r\n\t}\r\n\r\n\tgetDerivedItpt(ldTokenVal: string): any {\r\n\t\tlet searchResult = super.getDerivedItpt(ldTokenVal) as IBlueprintItpt;\r\n\t\tif (searchResult) {\r\n\t\t\treturn this.connectedItpts.get(searchResult.cfg.nameSelf);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetItptByNameSelf(nameSelf: string) {\r\n\t\tlet searchResult = super.getItptByNameSelf(nameSelf) as IBlueprintItpt;\r\n\t\tif (searchResult) {\r\n\t\t\treturn this.connectedItpts.get(searchResult.cfg.nameSelf);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tgetItptList(): Array<any> {\r\n\t\treturn super.getItptList();\r\n\t}\r\n\t/**\r\n\t * gets itpt that is not connected to Redux\r\n\t * @param nameSelf the nameSelf-property in the BlueprintConfig of the itpt\r\n\t */\r\n\tgetUnconnectedByNameSelf(nameSelf: string) {\r\n\t\tlet searchResult = super.getItptByNameSelf(nameSelf);\r\n\t\tif (searchResult) {\r\n\t\t\treturn searchResult;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\thasConnectedByNameSelf(nameSelf: string) {\r\n\t\treturn this.connectedItpts.has(nameSelf);\r\n\t}\r\n}\r\n","/**\r\n * flat nesting isn't possible with DAG-like data structures, that's why we need to be able to reference objects and properties in a different way\r\n */\r\nexport interface ObjectPropertyRef {\r\n\tobjRef: string;\r\n\tpropRef: string;\r\n}\r\n\r\nexport var OBJECT_REF: string = \"objRef\";\r\nexport var OBJECT_PROP_REF: string = \"propRef\";\r\n//TODO: check, if this can be handled more elegantly. Interfaces are not available after compile-time\r\n","import { Action } from 'redux';\r\nimport { ActionsObservable, ofType } from 'redux-observable';\r\nimport { LDError, LDErrorMsgState } from './../LDError';\r\nimport { tap, mergeMap } from 'rxjs/operators';\r\nimport { ILDWebResource } from 'ldaccess/ildresource';\r\n\r\nexport const IMG_UPLOAD_REQUEST = 'shnyder/IMG_UPLOAD_REQUEST';\r\nexport const IMG_UPLOAD_RESULT = 'shnyder/IMG_UPLOAD_RESULT';\r\nexport const IMG_UPLOAD_ERROR = 'shnyder/IMG_UPLOAD_ERROR';\r\n\r\n//Action factories\r\nexport const uploadImgRequestAction = (fileList: FileList, targetUrl: string) => ({\r\n    type: IMG_UPLOAD_REQUEST,\r\n    imgUL: fileList,\r\n    targetUrl: targetUrl\r\n});\r\n\r\nexport const uploadImgResultAction = (imgULpayload: ILDWebResource) => ({\r\n    type: IMG_UPLOAD_RESULT,\r\n    imgULpayload\r\n});\r\n\r\nexport const loadImgFailure = (message: string): LDErrorMsgState => ({\r\n    type: IMG_UPLOAD_ERROR,\r\n    message\r\n});\r\n\r\n//for the loading-indicating part of the state\r\nexport const isUploadingImgReducer = function isUploadingImg(\r\n    state: boolean = false, action: Action): boolean {\r\n    switch (action.type) {\r\n        case IMG_UPLOAD_REQUEST:\r\n            return true;\r\n        case IMG_UPLOAD_RESULT:\r\n        case IMG_UPLOAD_ERROR:\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const uploadImageEpic = (action$: ActionsObservable<any>, store: any, { imgULAPI }: any) => {\r\n    return action$.pipe(\r\n        ofType(IMG_UPLOAD_REQUEST),\r\n        tap(() => console.log(\"uploading image epic...\")),\r\n        mergeMap((action) =>\r\n            imgULAPI.postNewImage(action.imgUL, action.targetUrl)\r\n                .map((response: ILDWebResource) => uploadImgResultAction(response))\r\n                .catch((error: LDError): ActionsObservable<LDErrorMsgState> =>\r\n                    ActionsObservable.of(loadImgFailure(\r\n                        'An error occured during image uploading: ${error.message}'\r\n                    )))\r\n        )\r\n    );\r\n};\r\n","import { IBlueprintItpt } from \"ldaccess/ldBlueprint\";\r\nimport { ILDNonvisualIntrprtrMapStatePart } from \"appstate/store\";\r\n\r\nexport const LDNONVIS_SET = 'shnyder/LDNONVIS_SET';\r\nexport const LDNONVIS_DELETE = 'shnyder/LDNONVIS_DELETE';\r\n\r\nexport type LDNonVisAction =\r\n\t{ type: 'shnyder/LDNONVIS_SET', alias: string, intrprtr: IBlueprintItpt }\r\n\t| { type: 'shnyder/LDNONVIS_DELETE', alias: string };\r\n\r\n/**\r\n * sets a non-visual itpt. If one exists with that alias and the cfg is same it will keep the old one\r\n * @param alias the key/alias under which the itpt is saved\r\n * @param itpt the itpt-object\r\n */\r\nexport const ldNonVisSETAction = (alias: string, itpt: IBlueprintItpt) =>\r\n\t({ type: LDNONVIS_SET, alias, itpt });\r\nexport const ldNonVisDeleteAction = (alias: string) =>\r\n\t({ type: LDNONVIS_DELETE, alias });\r\n\r\nexport const ldNonVisMapReducer = (\r\n\tstate: ILDNonvisualIntrprtrMapStatePart = {}, action: LDNonVisAction): ILDNonvisualIntrprtrMapStatePart => {\r\n\tlet alias = action.alias;\r\n\tlet newState: ILDNonvisualIntrprtrMapStatePart;\r\n\tswitch (action.type) {\r\n\t\tcase LDNONVIS_SET:\r\n\t\t\tif (state[alias] && action.intrprtr.constructor[\"cfg\"] === state[alias].constructor[\"cfg\"]) newState = state;\r\n\t\t\telse\r\n\t\t\t\tnewState = { ...state, [alias]: action.intrprtr };\r\n\t\t\tbreak;\r\n\t\tcase LDNONVIS_DELETE:\r\n\t\t\tnewState = { ...state };\r\n\t\t\tdelete newState[alias];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tnewState = { ...state };\r\n\t\t\tbreak;\r\n\t} //Object.assign({}, state, { [alias]: newLDCfg });\r\n\treturn newState;\r\n};\r\n","export function reduceReducers(...reducers) {\r\n  return (previous, current) =>\r\n    reducers.reduce(\r\n      (p, r) => r(p, current),\r\n      previous\r\n    );\r\n}\r\n","import { appItptRetrFn } from \"appconfig/appItptRetriever\";\r\nimport { LDDict } from \"ldaccess/LDDict\";\r\nimport { PureImgDisplay } from \"../visualcomposition/imagedisplay-component\";\r\nimport { PureRouteComponent, RouteComponentName } from \"../routing/route-component\";\r\nimport { imageRetrieverName, ImageRetriever } from \"sidefx/ImageRetriever\";\r\nimport { productRetrieverName, ProductRetriever } from \"sidefx/ProductRetriever\";\r\nimport { organizationRetrieverName, OrganizationRetriever } from \"sidefx/OrganizationRetriever\";\r\nimport { EANScannerName, EANScanner } from \"../peripherals/camera/EAN-scanner\";\r\nimport { ITPT_TAG_ATOMIC } from \"ldaccess/iitpt-retriever\";\r\nimport { LayoutVHCenteredColumnName, PureVHcenteredColumnLayout,  } from \"../layout/layoutBaseComp\";\r\nimport { PureRedirectComponent, RouteRedirectName } from \"../routing/redirect\";\r\nimport { TwoDtoJSONArray, TwoDtoJSONArrayName } from \"datatransformation/TwoDtoJSONArray\";\r\nimport { JSONArrayToCompactInfoArrayName, JSONArrayToCompactInfoArray } from \"datatransformation/JSONArrayToCompactInfoArray\";\r\nimport { CSSWrapperName, PureCSSWrapper } from \"components/layout/CSSWrapper\";\r\n\r\nexport function initEssentialInterpreters() {\r\n\tlet appIntRetr = appItptRetrFn();\r\n\tappIntRetr.addItpt(LDDict.ViewAction, PureImgDisplay, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\r\n\t//TODO: move the EAN scanner to a mod, implement a generator maybe\r\n\tappIntRetr.addItpt(EANScannerName, EANScanner, \"cRud\", [ITPT_TAG_ATOMIC]); //new version\r\n\r\n\t//register routing itpts\r\n\tappIntRetr.addItpt(RouteComponentName, PureRouteComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(RouteRedirectName, PureRedirectComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\r\n\t//register side effect-itpt (these itpts change the state asynchronously and are typically non-visual)\r\n\tappIntRetr.addItpt(imageRetrieverName, ImageRetriever, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(productRetrieverName, ProductRetriever, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(organizationRetrieverName, OrganizationRetriever, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\r\n\t//register layout itpts\r\n\tappIntRetr.addItpt(LayoutVHCenteredColumnName, PureVHcenteredColumnLayout, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(CSSWrapperName, PureCSSWrapper, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\r\n\t//data transformation itpts\r\n\tappIntRetr.addItpt(TwoDtoJSONArrayName, TwoDtoJSONArray, \"cRUd\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(JSONArrayToCompactInfoArrayName, JSONArrayToCompactInfoArray, \"cRUD\", [ITPT_TAG_ATOMIC]);\r\n}\r\n","import { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { Component } from 'react';\r\nimport { gdsfpLD, initLDLocalState } from '../generic/generatorFns';\r\nimport { VisualKeysDict } from './visualDict';\r\nimport React from 'react';\r\n\r\nlet cfgType: string = LDDict.ImageObject;\r\nexport const CSS_OBJECT_FIT = \"CSSObjectFit\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[LDDict.name, LDDict.fileFormat, LDDict.contentUrl, CSS_OBJECT_FIT, VisualKeysDict.cssClassName];\r\nlet initialKVStores: IKvStore[] = [];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tcanInterpretType: cfgType,\r\n\tnameSelf: \"shnyder/imageDisplay\",\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class PureImgDisplay extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, LDLocalState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: LDLocalState): null | LDLocalState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [], [LDDict.name, LDDict.fileFormat, LDDict.contentUrl, CSS_OBJECT_FIT, VisualKeysDict.cssClassName], cfgType);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD, };\r\n\t\treturn { ...rvNew };\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tinitialKvStores: IKvStore[];\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tthis.state = initLDLocalState(this.cfg, props, [], [LDDict.name, LDDict.fileFormat, LDDict.contentUrl, CSS_OBJECT_FIT, VisualKeysDict.cssClassName]);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { ldOptions } = this.props;\r\n\t\tconst { localValues } = this.state;\r\n\t\tlet objFit = localValues.get(CSS_OBJECT_FIT);\r\n\t\tobjFit = objFit ? objFit : \"unset\";\r\n\t\tlet cssClassName = localValues.get(VisualKeysDict.cssClassName);\r\n\t\tcssClassName = cssClassName ? cssClassName : \"\";\r\n\t\tlet imgLnk: string = localValues.get(LDDict.contentUrl);\r\n\t\tif (imgLnk\r\n\t\t\t&& !imgLnk.startsWith(\"http://\")\r\n\t\t\t&& !imgLnk.startsWith(\"blob:http://\")\r\n\t\t\t&& !imgLnk.startsWith(\"/\")) {\r\n\t\t\timgLnk = \"http://localhost:1111/api/ysj/media/jpgs/\" + imgLnk;\r\n\t\t}\r\n\t\tif (!ldOptions) return <div>no Image data</div>;\r\n\t\treturn <div className={\"imgdisplay \" + cssClassName}>\r\n\t\t\t<img alt=\"\" src={imgLnk} className=\"is-loading\"\r\n\t\t\t\tonLoad={\r\n\t\t\t\t\t(ev) => {\r\n\t\t\t\t\t\tev.currentTarget.classList.remove(\"is-loading\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstyle={{ objectFit: objFit }} />\r\n\t\t\t{/*imgLnk*/}\r\n\t\t\t{this.props.children}\r\n\t\t</div>;\r\n\t}\r\n}\r\n","import { nameSpaceMap } from \"ldaccess/ns/nameSpaceMap\";\r\n\r\nexport const resolveNS = (input: string): string => {\r\n\tif (input === null || input === undefined) return input;\r\n\ttry {\r\n\t\tlet locURI = new URL(input);\r\n\t\tlet ns = nameSpaceMap.get(locURI.origin);\r\n\t\tlet id = locURI.pathname;\r\n\t\tif (!ns || !id) return input;\r\n\t\treturn ns + id;\r\n\t} catch (error) {\r\n\t\treturn input;\r\n\t}\r\n};\r\n","import { IBlueprintItpt, BlueprintConfig, OutputKVMap } from \"ldaccess/ldBlueprint\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { SideFXDict } from \"sidefx/SideFXDict\";\r\nimport { ldOptionsRequestAction, ldOptionsClientSideUpdateAction } from \"appstate/epicducks/ldOptions-duck\";\r\nimport { applicationStore } from \"approot\";\r\nimport { isOutputKVSame, ldOptionsDeepCopy, isObjPropertyRef } from \"ldaccess/ldUtils\";\r\nimport { ILDOptionsMapStatePart } from \"appstate/store\";\r\nimport { getKVStoreByKey } from \"ldaccess/kvConvenienceFns\";\r\nimport { nameSpaceMap } from \"ldaccess/ns/nameSpaceMap\";\r\nimport { LDLocalKv } from \"appstate/LDProps\";\r\nimport { ILDWebResource } from \"ldaccess/ildresource\";\r\nimport { ldRetrCfgIntrprtKeys } from \"./LDRetrieverSuper-rewrite\";\r\n\r\nexport type LDRetrieverSuperStateOld = LDLocalKv;\r\n\r\n//export let ldRetrCfgIntrprtKeys: string[] =\r\n//\t[SideFXDict.srvURL, SideFXDict.identifier];\r\nexport class LDRetrieverSuper implements IBlueprintItpt {\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tinitialKvStores: IKvStore[];\r\n\tinputParams: Map<string, IKvStore>;\r\n\t//srvUrl: string;\r\n\t//identifier: string | number;\r\n\tisInputDirty: boolean = false;\r\n\tisOutputDirty: boolean = false;\r\n\tretrieverStoreKey: string; //needed when requesting asynchronously, so that the output can find this\r\n\twebContent: ILDWebResource;\r\n\tstate: LDRetrieverSuperStateOld;\r\n\r\n\tprotected apiCallOverride: (() => Promise<any>) | null = null;\r\n\r\n\tconstructor() {\r\n\t\tthis.cfg = this.constructor[\"cfg\"];\r\n\t\tthis.inputParams = new Map();\r\n\t\t//this.retrieverStoreKey = this.cfg.nameSelf;\r\n\t\t/*if (this.cfg.initialKvStores) {\r\n\t\t\tlet extRefKey = this.cfg.initialKvStores.find(\r\n\t\t\t\t(val) => val.key === UserDefDict.externalReferenceKey);\r\n\t\t\tthis.retrieverStoreKey = extRefKey.value ? extRefKey.value : this.retrieverStoreKey;\r\n\t\t}*/\r\n\t}\r\n\tconsumeLDOptions = (ldOptions: ILDOptions) => {\r\n\t\tif (!ldOptions || !ldOptions.resource || !ldOptions.resource.kvStores) return;\r\n\t\tthis.retrieverStoreKey = ldOptions.ldToken.get();\r\n\t\tlet kvs = ldOptions.resource.kvStores;\r\n\t\tlet outputKVMap: IKvStore = kvs.find((val) => UserDefDict.outputKVMapKey === val.key);\r\n\t\toutputKVMap = outputKVMap ? outputKVMap : this.cfg.initialKvStores.find((val) => UserDefDict.outputKVMapKey === val.key);\r\n\t\tthis.setOutputKVMap(outputKVMap && outputKVMap.value ? outputKVMap.value : this.outputKVMap);\r\n\t\tfor (let idx = 0; idx < ldRetrCfgIntrprtKeys.length; idx++) {\r\n\t\t\tconst inputKey = ldRetrCfgIntrprtKeys[idx];\r\n\t\t\tlet param = kvs.find((val) => val.key === inputKey);\r\n\t\t\tif (param && param.value !== null) {\r\n\t\t\t\tthis.inputParams.set(inputKey, param);\r\n\t\t\t\tthis.isInputDirty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//this.setSrvUrl(srvUrlKv && srvUrlKv.value ? srvUrlKv.value : this.srvUrl);\r\n\t\t//this.setIdentifier(identifier && identifier.value !== null ? identifier : this.identifier);\r\n\t\tthis.setWebContent(ldOptions);\r\n\t\tthis.evalDirtyInput();\r\n\t\tthis.evalDirtyOutput();\r\n\t}\r\n\tsetOutputKVMap = (value: OutputKVMap) => {\r\n\t\tif (!isOutputKVSame(value, this.outputKVMap)) this.isOutputDirty = true;\r\n\t\tthis.outputKVMap = value;\r\n\t}\r\n\t/*setIdentifier = (value: IKvStore | string | number) => {\r\n\t\tif (getKVValue(value) !== this.identifier) this.isInputDirty = true;\r\n\t\tthis.identifier = getKVValue(value);\r\n\t}\r\n\tsetSrvUrl = (value: string) => {\r\n\t\tif (value !== this.srvUrl) this.isInputDirty = true;\r\n\t\tthis.srvUrl = value;\r\n\t}*/\r\n\tsetWebContent = (value: ILDOptions) => {\r\n\t\tif (value.isLoading) return;\r\n\t\tif (value.resource.webInResource && value.resource.webInResource !== this.webContent) {\r\n\t\t\tthis.webContent = value.resource.webInResource;\r\n\t\t\tthis.isOutputDirty = true;\r\n\t\t}\r\n\t}\r\n\tevalDirtyOutput = () => {\r\n\t\tif (this.isInputDirty) return;\r\n\t\tif (this.isOutputDirty && this.outputKVMap && this.webContent) {\r\n\t\t\tthis.isOutputDirty = false;\r\n\t\t\tthis.refreshOutput();\r\n\t\t}\r\n\t}\r\n\tevalDirtyInput = () => {\r\n\t\tif (this.isInputDirty) {\r\n\t\t\tif (!this.apiCallOverride) {\r\n\t\t\t\t//if it's an jsonld-request\r\n\t\t\t\tlet srvUrl = this.inputParams.get(ldRetrCfgIntrprtKeys[0]);\r\n\t\t\t\tlet identifier = this.inputParams.get(ldRetrCfgIntrprtKeys[1]);\r\n\t\t\t\tif (srvUrl && srvUrl.value && srvUrl.value.length > 0\r\n\t\t\t\t\t&& identifier\r\n\t\t\t\t\t&& identifier.value !== null && identifier.value !== undefined) {\r\n\t\t\t\t\tthis.isInputDirty = false;\r\n\t\t\t\t\tlet idStr = identifier.toString();\r\n\t\t\t\t\tlet idSplitIdx = idStr.indexOf('/');\r\n\t\t\t\t\tlet requestURL;\r\n\t\t\t\t\tif (idSplitIdx !== -1) {\r\n\t\t\t\t\t\tconsole.log(idStr.slice(0, idSplitIdx));\r\n\t\t\t\t\t\tlet nsMHasValue = false;\r\n\t\t\t\t\t\tlet nsMSearchVal = idStr.slice(0, idSplitIdx);\r\n\t\t\t\t\t\tfor (const nsMEntry of\r\n\t\t\t\t\t\t\tnameSpaceMap.values()) {\r\n\t\t\t\t\t\t\tif (nsMEntry === nsMSearchVal) {\r\n\t\t\t\t\t\t\t\tnsMHasValue = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (nsMHasValue) {\r\n\t\t\t\t\t\t\tlet idNS = idStr.slice(0, idSplitIdx);\r\n\t\t\t\t\t\t\tlet idId = idStr.slice(idSplitIdx + 1, idStr.length);\r\n\t\t\t\t\t\t\t/*let reqSplitString = srvUrl.value.replace('{' + SideFXDict.identifier + '}',\r\n\t\t\t\t\t\t\t\t'{namespace}/' + '{' + SideFXDict.identifier + '}');\r\n\t\t\t\t\t\t\trequestURL = URI.expand(reqSplitString, {\r\n\t\t\t\t\t\t\t\tnamespace: idNS,\r\n\t\t\t\t\t\t\t\tidentifier: idId\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\trequestURL = srvUrl.value;*/\r\n\t\t\t\t\t\t\trequestURL = requestURL.replace('{' + SideFXDict.identifier + '}', idNS + '/' + idId);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//TODO: enter error state\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst idVal = identifier.value;\r\n\t\t\t\t\t\tif (!idVal || isObjPropertyRef(idVal)) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trequestURL = srvUrl.value + idVal;\r\n\t\t\t\t\t\t/*let test = URI;\r\n\t\t\t\t\t\trequestURL = test.expand(srvUrl.value, {\r\n\t\t\t\t\t\t\tidentifier: identifier.value\r\n\t\t\t\t\t\t});*/\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.isInputDirty = false;\r\n\t\t\t\t\tlet reqAsString = requestURL; // requestURL.valueOf();\r\n\t\t\t\t\tthis.callToAPI(null, reqAsString, this.retrieverStoreKey);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.isInputDirty = false;\r\n\t\t\t\tthis.callToAPI(null, null, this.retrieverStoreKey);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected callToAPI(uploadData?: ILDOptions, targetUrl?: string, targetReceiverLnk?): void {\r\n\t\tapplicationStore.dispatch(ldOptionsRequestAction(this.apiCallOverride, uploadData, targetUrl, targetReceiverLnk));\r\n\t}\r\n\r\n\tprivate refreshOutput(): void {\r\n\t\tlet okvmPNs = Object.getOwnPropertyNames(this.outputKVMap);\r\n\t\tlet webObj = this.webContent;\r\n\t\tconsole.log(\"ldRetrieverSuper got new output\");\r\n\t\tconsole.log(webObj);\r\n\t\tconsole.log(okvmPNs);\r\n\t\tconsole.log(this.outputKVMap);\r\n\t\tlet statePart: ILDOptionsMapStatePart = {};\r\n\t\tokvmPNs.forEach((pn) => {\r\n\t\t\tlet fillValue = webObj[pn];\r\n\t\t\tlet outputElems = this.outputKVMap[pn];\r\n\t\t\tfor (let i = 0; i < outputElems.length; i++) {\r\n\t\t\t\tconst outputElem = outputElems[i];\r\n\t\t\t\tlet targetTokenLnk = outputElem.targetLDToken.get();\r\n\t\t\t\tlet targetProp = outputElem.targetProperty;\r\n\t\t\t\tlet newLDOptions: ILDOptions;\r\n\t\t\t\tif (statePart[targetTokenLnk]) {\r\n\t\t\t\t\tnewLDOptions = statePart[targetTokenLnk];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnewLDOptions = applicationStore.getState().ldoptionsMap[targetTokenLnk];\r\n\t\t\t\t\tnewLDOptions = ldOptionsDeepCopy(newLDOptions);\r\n\t\t\t\t\tstatePart[targetTokenLnk] = newLDOptions;\r\n\t\t\t\t}\r\n\t\t\t\tlet targetKVStore = getKVStoreByKey(newLDOptions.resource.kvStores, targetProp);\r\n\t\t\t\tif (targetKVStore) {\r\n\t\t\t\t\ttargetKVStore.value = fillValue;\r\n\t\t\t\t\ttargetKVStore.ldType = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttargetKVStore = { key: targetProp, value: fillValue, ldType: null };\r\n\t\t\t\t\tnewLDOptions.resource.kvStores.push(targetKVStore);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tfor (const key in statePart) {\r\n\t\t\tif (statePart.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = statePart[key];\r\n\t\t\t\tapplicationStore.dispatch(ldOptionsClientSideUpdateAction(element));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\nimport React from 'react';\r\n\r\nexport interface CameraSwitcherTabsProps {\r\n\tactiveCameraId: string;\r\n\tvidDeviceList: MediaDeviceInfo[];\r\n\tonTabChanged: (newActiveId: string) => void;\r\n}\r\n\r\nexport class CameraSwitcherTabs extends Component<CameraSwitcherTabsProps, {}>{\r\n\tselectedImgLink: string = \"/static/camera_white.svg\";\r\n\tunselectedImgLink: string = \"/static/camera_grey.svg\";\r\n\trender() {\r\n\t\tlet { vidDeviceList, activeCameraId, onTabChanged } = this.props;\r\n\t\tlet reactComps = vidDeviceList.map((itm, idx) => {\r\n\t\t\tconst isSelected: boolean = itm.deviceId === activeCameraId;\r\n\t\t\tlet imgSrc: string = isSelected ? this.selectedImgLink : this.unselectedImgLink;\r\n\t\t\treturn <div key={itm.deviceId} className=\"sub-tab\"\r\n\t\t\t\tonClick={\r\n\t\t\t\t\tisSelected ? () => { return; } : () => { onTabChanged(itm.deviceId); }\r\n\t\t\t\t} >\r\n\t\t\t\t<img className=\"switcher-icon\" src={imgSrc} />\r\n\t\t\t</div>;\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className=\"md-camera-switcher-tabs\">\r\n\t\t\t\t{reactComps}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { appItptRetrFn } from \"appconfig/appItptRetriever\";\r\nimport { PureRefMapItpt } from \"components/generic/RefMapItpt-component\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { PureBaseContainerRewrite } from \"components/generic/baseContainer-rewrite\";\r\nimport { ITPT_TAG_SPECIAL, ITPT_TAG_ATOMIC } from \"ldaccess/iitpt-retriever\";\r\nimport { magicCanInterpretType, PureMagicBox } from \"components/generic/magicBox\";\r\nimport { projCfgName, PureProjectConfig } from \"components/project-config\";\r\nimport { ActionComp, ActionCompName } from \"components/actions/ActionComp\";\r\nimport { ActionHandler, ActionHandlerName } from \"components/actions/ActionHandler\";\r\n\r\nexport function initEssentialItpts() {\r\n\tlet appIntRetr = appItptRetrFn();\r\n\tappIntRetr.addItpt(UserDefDict.intrprtrBPCfgRefMapType, PureRefMapItpt, \"cRud\", [ITPT_TAG_SPECIAL]);\r\n\tappIntRetr.addItpt(UserDefDict.itptContainerObjType, PureBaseContainerRewrite, \"cRud\", [ITPT_TAG_SPECIAL]);\r\n\tappIntRetr.addItpt(magicCanInterpretType, PureMagicBox, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(projCfgName, PureProjectConfig, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(ActionCompName, ActionComp, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(ActionHandlerName, ActionHandler, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n}\r\n","import { ldBlueprint, BlueprintConfig, IBlueprintItpt } from \"ldaccess/ldBlueprint\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ILDOptions } from \"ldaccess/ildoptions\";\r\nimport { LDOwnProps, LDConnectedState, LDConnectedDispatch, LDRouteProps, LDLocalState } from \"appstate/LDProps\";\r\nimport { isReactComponent } from \"components/reactUtils/reactUtilFns\";\r\nimport { isRouteSame } from \"components/reactUtils/compUtilFns\";\r\nimport { refMapBaseTokenStr } from \"ldaccess/ildtoken\";\r\nimport { ldOptionsDeepCopy } from \"ldaccess/ldUtils\";\r\nimport { Component } from \"react\";\r\nimport { appItptMatcherFn } from \"appconfig/appItptMatcher\";\r\nimport { ErrorBoundaryState } from \"../errors/ErrorBoundaryState\";\r\nimport { IReactCompInfoItm } from \"../reactUtils/iReactCompInfo\";\r\nimport React from \"react\";\r\n\r\nexport type OwnProps = LDOwnProps & {\r\n};\r\n\r\nexport interface RefMapItptState extends LDLocalState, ErrorBoundaryState {\r\n\terrorMsg: string;\r\n\troutes: LDRouteProps | null;\r\n\tcfg: BlueprintConfig;\r\n}\r\n\r\nlet canInterpretType: string = UserDefDict.intrprtrBPCfgRefMapType;\r\nlet cfgIntrprtKeys: string[] =\r\n\t[];\r\nlet initialKVStores: IKvStore[] = [];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tcanInterpretType: canInterpretType,\r\n\tnameSelf: UserDefDict.intrprtrBPCfgRefMapName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class PureRefMapItpt extends Component\r\n<LDConnectedState & LDConnectedDispatch & OwnProps,\r\nRefMapItptState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & OwnProps,\r\n\t\tprevState: RefMapItptState): null | RefMapItptState {\r\n\t\tif (!nextProps.ldOptions || !nextProps.ldOptions.resource ||\r\n\t\t\tnextProps.ldOptions.resource.kvStores.length === 0) return null;\r\n\t\tconst ldOptions = nextProps.ldOptions;\r\n\t\tif (ldOptions.isLoading) return null;\r\n\t\tlet ldTokenString = ldOptions.ldToken.get();\r\n\t\tlet retriever: string = ldOptions.visualInfo.retriever;\r\n\t\t//let interpretedBy = ldOptions.visualInfo.interpretedBy;\r\n\t\tlet newreactCompInfos: Map<string, IReactCompInfoItm> = new Map();\r\n\t\t//let newLDTypes: Map<string, string> = new Map();\r\n\t\tif (\r\n\t\t\t!isRouteSame(nextProps.routes, prevState.routes)\r\n\t\t\t||\r\n\t\t\t!nextProps.ldOptions.visualInfo.interpretedBy\r\n\t\t) {\r\n\t\t\tlet newLDOptions: ILDOptions = ldOptionsDeepCopy(nextProps.ldOptions);\r\n\t\t\tnewLDOptions.visualInfo.interpretedBy = prevState.cfg.nameSelf;\r\n\t\t\t//console.log(prevState.cfg.canInterpretType);\r\n\t\t\t//console.dir(newLDOptions);\r\n\t\t\t//console.dir(prevState.cfg);\r\n\t\t\tnextProps.notifyLDOptionsRefMapSplitChange(newLDOptions, prevState.cfg);\r\n\t\t\tlet routes: LDRouteProps = nextProps.routes;\r\n\t\t\treturn { ...prevState, routes };\r\n\t\t}\r\n\t\tlet baseRMTkStr = refMapBaseTokenStr(ldTokenString);\r\n\t\tlet BaseComp = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt(baseRMTkStr);\r\n\t\tif (BaseComp === null || BaseComp === undefined) {\r\n\t\t\tconsole.log(prevState.routes);\r\n\t\t\tconsole.error(\"ItptReferenceMapType-component: itpt null or undefined: \" + baseRMTkStr);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (isReactComponent(BaseComp)) {\r\n\t\t\tnewreactCompInfos.set(baseRMTkStr, { compClass: BaseComp, key: baseRMTkStr, ldTokenString: baseRMTkStr });\r\n\t\t\t//return <BaseComp routes={routes} ldTokenString={baseRMTkStr} />;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn { ...prevState, compInfos: newreactCompInfos };\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// Update state so the next render will show the fallback UI.\r\n\t\treturn { hasError: true, errorMsg: error };\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\t//subItpt: any = null;\r\n\tconstructor(props?: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = this.constructor[\"cfg\"];\r\n\t\t/*if (props && props.ldOptions) {\r\n\t\t\tthis.consumeLDOptions(props.ldOptions, props.routes);\r\n\t\t}*/\r\n\t\tthis.state = {\r\n\t\t\terrorMsg: '',\r\n\t\t\thasError: false,\r\n\t\t\troutes: null,\r\n\t\t\tcompInfos: new Map(),\r\n\t\t\tlocalLDTypes: new Map(),\r\n\t\t\tlocalValues: new Map(),\r\n\t\t\tcfg: this.cfg\r\n\t\t};\r\n\t}\r\n\t/*\r\n\t\tconsumeLDOptions = (ldOptions: ILDOptions, routes?: LDRouteProps) => {\r\n\t\t\tif (!this.props.ldOptions) return;\r\n\t\t\tif (!this.props.ldOptions.visualInfo.interpretedBy) {\r\n\t\t\t\tlet newLDOptions: ILDOptions = ldOptionsDeepCopy(this.props.ldOptions);\r\n\t\t\t\tnewLDOptions.visualInfo.interpretedBy = this.cfg.nameSelf;\r\n\t\t\t\tthis.props.notifyLDOptionsRefMapSplitChange(newLDOptions, this.cfg);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t//this.subItpt = this.buildIntrprtrJSX(ldOptions, routes);\r\n\t\t}\r\n\r\n\t\tcomponentWillReceiveProps(nextProps: OwnProps & LDConnectedDispatch & LDConnectedState, nextContext): void {\r\n\t\t\tconsole.log(\"receiving refmap-props: \" + nextProps.routes.location.pathname);\r\n\t\t\tif (!isRouteSame(nextProps.routes, this.props.routes)) {\r\n\t\t\t\tlet newLDOptions: ILDOptions = ldOptionsDeepCopy(this.props.ldOptions);\r\n\t\t\t\tnewLDOptions.visualInfo.interpretedBy = this.cfg.nameSelf;\r\n\t\t\t\tthis.props.notifyLDOptionsRefMapSplitChange(newLDOptions, this.cfg);\r\n\t\t\t\treturn null;\r\n\t\t\t} else {\r\n\t\t\t\t//if (compNeedsUpdate(nextProps, this.props)) {\r\n\t\t\t\t//if (nextProps.ldOptions.isLoading) return;\r\n\t\t\t\tthis.consumeLDOptions(nextProps.ldOptions, nextProps.routes);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcomponentWillMount() {\r\n\t\t\tconsole.log(\"componentWillmount\");\r\n\t\t\tconsole.log(this.constructor.name);\r\n\t\t\tconsole.log(this.constructor[\"cfg\"]);\r\n\t\t}\r\n\t*/\r\n\tbuildIntrprtrJSX(ldOptions: ILDOptions, routes: LDRouteProps): any { //TODO: search for right type ?! React.Component<LDOwnProps>\r\n\t\tlet { ldTokenString } = this.props;\r\n\t\tlet { retriever } = ldOptions.visualInfo;\r\n\t\tlet baseRMTkStr = refMapBaseTokenStr(ldTokenString);\r\n\t\tlet BaseComp = appItptMatcherFn().getItptRetriever(retriever).getDerivedItpt(baseRMTkStr);\r\n\t\tif (BaseComp === null || BaseComp === undefined) {\r\n\t\t\tconsole.error(\"ItptReferenceMapType-component: itpt null or undefined\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tif (isReactComponent(BaseComp)) {\r\n\t\t\treturn <BaseComp routes={routes} ldTokenString={baseRMTkStr} />;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { hasError, errorMsg } = this.state;\r\n\t\tif (!hasError) {\r\n\t\t\tlet { routes } = this.props;\r\n\t\t\troutes = routes ? { ...routes } : null;\r\n\t\t\tlet iterator = 0;\r\n\t\t\tlet reactComps = [];\r\n\t\t\tthis.state.compInfos.forEach((cInfoItmOrItms, key) => {\r\n\t\t\t\tlet cInfoAsArray = [];\r\n\t\t\t\tif (Array.isArray(cInfoItmOrItms)) {\r\n\t\t\t\t\tcInfoAsArray = cInfoItmOrItms;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcInfoAsArray = [cInfoItmOrItms];\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 0; i < cInfoAsArray.length; i++) {\r\n\t\t\t\t\tconst cInfoItm = cInfoAsArray[i];\r\n\t\t\t\t\tlet GenericComp = cInfoItm.compClass;\r\n\t\t\t\t\treactComps[iterator] = <GenericComp key={cInfoItm.key} routes={routes}\r\n\t\t\t\t\t\tldTokenString={cInfoItm.ldTokenString} />;\r\n\t\t\t\t\titerator++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn <>\r\n\t\t\t\t{reactComps ? reactComps : null}\r\n\t\t\t</>;\r\n\t\t} else {\r\n\t\t\treturn <span>error caught in RefMap: {errorMsg}</span>;\r\n\t\t}\r\n\t}\r\n}\r\n","import { appItptRetrFn } from \"appconfig/appItptRetriever\";\r\nimport { PureFourFieldsView } from \"./fourfieldsview\";\r\nimport { GAME_4F_TYPE } from \"./game-constants\";\r\nimport { SingleFieldViewIntrprtrName, PureSingleFieldView } from \"./singlefield\";\r\nimport { ITPT_TAG_ATOMIC } from \"ldaccess/iitpt-retriever\";\r\n\r\nexport function initGameItpt() {\r\n\tlet appIntRetr = appItptRetrFn();\r\n\tappIntRetr.addItpt(GAME_4F_TYPE, PureFourFieldsView, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(SingleFieldViewIntrprtrName, PureSingleFieldView, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n}\r\n","import React from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { VisualKeysDict } from 'components/visualcomposition/visualDict';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { LDOwnProps, LDConnectedDispatch, LDConnectedState, LDLocalState } from 'appstate/LDProps';\r\nimport { gdsfpLD, generateItptFromCompInfo, initLDLocalState } from 'components/generic/generatorFns';\r\nimport { Component } from 'react';\r\n\r\nexport const GAME_TASK_HEADING = \"GameTaskHeading\";\r\nexport const GAME_TASK_TXT = \"GameTaskText\";\r\nexport const GAME_FIELD_ITPT_UL = \"GameFieldItpt_UpperLeft\";\r\nexport const GAME_FIELD_ITPT_UR = \"GameFieldItpt_UpperRight\";\r\nexport const GAME_FIELD_ITPT_LL = \"GameFieldItpt_LowerLeft\";\r\nexport const GAME_FIELD_ITPT_LR = \"GameFieldItpt_LowerRight\";\r\nexport const GAME_STATS = \"GameStatsText\";\r\nexport const GAME_CORRECT_FIELD_IDX = \"GameField_Correct_idx\";\r\n\r\nexport var FourFieldsViewIntrprtrName: string = \"game/FourFieldsView\";\r\nlet cfgType: string = FourFieldsViewIntrprtrName;\r\nlet cfgIntrprtKeys: string[] =\r\n\t[\r\n\t\tGAME_TASK_HEADING,\r\n\t\tGAME_TASK_TXT,\r\n\t\tGAME_FIELD_ITPT_UL,\r\n\t\tGAME_FIELD_ITPT_UR,\r\n\t\tGAME_FIELD_ITPT_LL,\r\n\t\tGAME_FIELD_ITPT_LR,\r\n\t\tGAME_STATS,\r\n\t\tVisualKeysDict.inputContainer,\r\n\t\tGAME_CORRECT_FIELD_IDX\r\n\t];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{ key: GAME_TASK_HEADING, value: undefined, ldType: LDDict.Text },\r\n\t{ key: GAME_TASK_TXT, value: undefined, ldType: LDDict.Text },\r\n\t{ key: GAME_FIELD_ITPT_UL, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: GAME_FIELD_ITPT_UR, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: GAME_FIELD_ITPT_LL, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: GAME_FIELD_ITPT_LR, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: GAME_STATS, value: undefined, ldType: LDDict.Text },\r\n\t{ key: VisualKeysDict.inputContainer, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: GAME_CORRECT_FIELD_IDX, value: 0, ldType: LDDict.Integer }\r\n];\r\nlet bpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: cfgType,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\ninterface FourFieldsViewState {\r\n\trevealedArray: Array<boolean>;\r\n}\r\n@ldBlueprint(bpCfg)\r\nexport class PureFourFieldsView extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, FourFieldsViewState & LDLocalState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | LDLocalState & FourFieldsViewState)\r\n\t\t: null | LDLocalState & FourFieldsViewState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [\r\n\t\t\t\tGAME_FIELD_ITPT_UL,\r\n\t\t\t\tGAME_FIELD_ITPT_UR,\r\n\t\t\t\tGAME_FIELD_ITPT_LL,\r\n\t\t\t\tGAME_FIELD_ITPT_LR,\r\n\t\t\t\tVisualKeysDict.inputContainer\r\n\t\t\t], [\r\n\t\t\t\tGAME_TASK_HEADING,\r\n\t\t\t\tGAME_TASK_TXT,\r\n\t\t\t\tGAME_STATS,\r\n\t\t\t\tGAME_CORRECT_FIELD_IDX\r\n\t\t\t]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvLD\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprivate renderSub = generateItptFromCompInfo.bind(this);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tthis.state = {\r\n\t\t\trevealedArray: [false, false, false, false],\r\n\t\t\t...initLDLocalState(this.cfg, props,\r\n\t\t\t\t[\r\n\t\t\t\t\tGAME_FIELD_ITPT_UL,\r\n\t\t\t\t\tGAME_FIELD_ITPT_UR,\r\n\t\t\t\t\tGAME_FIELD_ITPT_LL,\r\n\t\t\t\t\tGAME_FIELD_ITPT_LR,\r\n\t\t\t\t\tVisualKeysDict.inputContainer\r\n\t\t\t\t],\r\n\t\t\t\t[\r\n\t\t\t\t\tGAME_TASK_HEADING,\r\n\t\t\t\t\tGAME_TASK_TXT,\r\n\t\t\t\t\tGAME_STATS,\r\n\t\t\t\t\tGAME_CORRECT_FIELD_IDX\r\n\t\t\t\t])\r\n\t\t};\r\n\t}\r\n\r\n\tonPressResult = (fieldIdx: number) => {\r\n\t\tconst gamecorrectfieldidx = this.state.localValues.get(GAME_CORRECT_FIELD_IDX);\r\n\t\tlet newRevealedArray = this.state.revealedArray.slice();\r\n\t\tnewRevealedArray[fieldIdx] = true;\r\n\t\tif (fieldIdx === parseInt(gamecorrectfieldidx, 10)) {\r\n\t\t\tthis.setState({ ...this.state, revealedArray: newRevealedArray });\r\n\t\t\t//TODO: do something\r\n\t\t} else {\r\n\t\t\tthis.setState({ ...this.state, revealedArray: newRevealedArray });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { localValues, revealedArray } = this.state;\r\n\t\tlet gamecorrectfieldidx = this.state.localValues.get(GAME_CORRECT_FIELD_IDX);\r\n\t\tgamecorrectfieldidx = parseInt(gamecorrectfieldidx, 10);\r\n\t\tconst gametaskheading = localValues.get(GAME_TASK_HEADING);\r\n\t\tconst gametasktxt = localValues.get(GAME_TASK_TXT);\r\n\t\tconst gamestats = localValues.get(GAME_STATS);\r\n\r\n\t\tlet ulClassName = \"game-4f-field-col \";\r\n\t\tulClassName += revealedArray[0]\r\n\t\t\t? gamecorrectfieldidx === 0 ? \"game-4f-correct\" : \"game-4f-wrong\"\r\n\t\t\t: \"game-4f-idle\";\r\n\t\tlet urClassName = \"game-4f-field-col \";\r\n\t\turClassName += revealedArray[1]\r\n\t\t\t? gamecorrectfieldidx === 1 ? \"game-4f-correct\" : \"game-4f-wrong\"\r\n\t\t\t: \"game-4f-idle\";\r\n\t\tlet llClassName = \"game-4f-field-col \";\r\n\t\tllClassName += revealedArray[2]\r\n\t\t\t? gamecorrectfieldidx === 2 ? \"game-4f-correct\" : \"game-4f-wrong\"\r\n\t\t\t: \"game-4f-idle\";\r\n\t\tlet lrClassName = \"game-4f-field-col \";\r\n\t\tlrClassName += revealedArray[3]\r\n\t\t\t? gamecorrectfieldidx === 3 ? \"game-4f-correct\" : \"game-4f-wrong\"\r\n\t\t\t: \"game-4f-idle\";\r\n\t\tlet mainGameClassName = \"game-4f-base \";\r\n\t\treturn <div className={mainGameClassName}>\r\n\t\t\t<div className=\"game-4f-top\">\r\n\t\t\t\t<h3>{gametaskheading}</h3>\r\n\t\t\t\t<span>{gametasktxt}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"game-4f-fields\">\r\n\t\t\t\t<div className=\"game-4f-field-row\">\r\n\t\t\t\t\t<div className={ulClassName} onClick={() => this.onPressResult(0)}>\r\n\t\t\t\t\t\t{this.renderSub(GAME_FIELD_ITPT_UL)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={urClassName} onClick={() => this.onPressResult(1)}>\r\n\t\t\t\t\t\t{this.renderSub(GAME_FIELD_ITPT_UR)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-4f-field-row\" >\r\n\t\t\t\t\t<div className={llClassName} onClick={() => this.onPressResult(2)}>\r\n\t\t\t\t\t\t{this.renderSub(GAME_FIELD_ITPT_LL)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={lrClassName} onClick={() => this.onPressResult(3)}>\r\n\t\t\t\t\t\t{this.renderSub(GAME_FIELD_ITPT_LR)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"game-4f-bottom\">\r\n\t\t\t\t<span>{gamestats}</span>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n\r\n}\r\n","export const GAME_4F_TYPE = \"FourFields-type\";\r\n","import { appItptRetrFn } from \"appconfig/appItptRetriever\";\r\nimport { ITPT_TAG_ATOMIC } from \"ldaccess/iitpt-retriever\";\r\nimport { PureParagraphTextComponent, PureItalicsTextComponent, PureBoldTextComponent, PureSpanTextComponent, PureH4TextComponent, PureH3TextComponent, PureH2TextComponent, PureH1TextComponent, ParagraphTextComponentName, ItalicsTextComponentName, BoldTextComponentName, SpanTextComponentName, H4TextComponentName, H3TextComponentName, H2TextComponentName, H1TextComponentName } from \"./text-based-components\";\r\n\r\nexport function initBaseHtmlItpt() {\r\n\tlet appIntRetr = appItptRetrFn();\r\n\tappIntRetr.addItpt(ParagraphTextComponentName, PureParagraphTextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(ItalicsTextComponentName, PureItalicsTextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(BoldTextComponentName, PureBoldTextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(SpanTextComponentName, PureSpanTextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(H4TextComponentName, PureH4TextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(H3TextComponentName, PureH3TextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(H2TextComponentName, PureH2TextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n\tappIntRetr.addItpt(H1TextComponentName, PureH1TextComponent, \"cRud\", [ITPT_TAG_ATOMIC]);\r\n}\r\n","import React from 'react';\r\nimport { BaseContainerRewrite } from \"components/generic/baseContainer-rewrite\";\r\nimport { Route } from \"react-router\";\r\nimport { LDRouteProps, LDOwnProps, LDConnectedDispatch, LDConnectedState } from \"appstate/LDProps\";\r\nimport { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { mapStateToProps, mapDispatchToProps } from \"appstate/reduxFns\";\r\n\r\nexport interface LDApprootProps {\r\n\tinitiallyDisplayedItptName: string | null;\r\n}\r\nexport interface LDApprootState {\r\n\thasCompletedFirstRender: boolean;\r\n\tinitiallyDisplayedItptName: string;\r\n}\r\n\r\nexport class PureLDApproot extends Component<LDApprootProps & LDConnectedState & LDConnectedDispatch & LDOwnProps, LDApprootState>  {\r\n\tconstructor(props?: any) {\r\n\t\tsuper(props);\r\n\t\tconst { initiallyDisplayedItptName } = this.props;\r\n\t\tthis.state = { initiallyDisplayedItptName, hasCompletedFirstRender: false };\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tif (!this.props.ldOptions) {\r\n\t\t\tthis.props.notifyLDOptionsChange(null);\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn <div className=\"app-content\" style={{ background: \"white\" }}>\r\n\t\t\t<Route path=\"/\" render={(routeProps: LDRouteProps) => {\r\n\t\t\t\treturn <>\r\n\t\t\t\t\t<BaseContainerRewrite routes={routeProps} ldTokenString={this.props.ldTokenString} />\r\n\t\t\t\t</>;\r\n\t\t\t}} />\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nexport const LDApproot = connect<LDConnectedState, LDConnectedDispatch, LDOwnProps>(mapStateToProps, mapDispatchToProps)(PureLDApproot);\r\n","import { ModAPI, IModSpec } from \"apis/mod-api\";\r\nimport { applicationStore } from \"approot\";\r\nimport { loadMod } from \"appstate/epicducks/mod-duck\";\r\n\r\nexport function initRequiredMods(modAPI: ModAPI, requiredMods: IModSpec[]) {\r\n\trequiredMods.forEach((spec) => {\r\n\t\tmodAPI.addRequiredMod(spec.id);\r\n\t\tmodAPI.addModInitFn(spec);\r\n\t\tapplicationStore.dispatch(loadMod(spec.id));\r\n\t});\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__83__;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./styles.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".game-4f-base {\\n  display: flex;\\n  flex-direction: column;\\n  flex: 1;\\n  justify-content: space-between; }\\n\\n.game-4f-idle {\\n  background-color: transparent; }\\n\\n.game-4f-correct .game-field {\\n  background-color: rgba(0, 177, 68, 0.651); }\\n\\n.game-4f-wrong .game-field {\\n  background-color: rgba(209, 0, 0, 0.829); }\\n\\n.game-4f-top {\\n  text-align: center; }\\n\\n.game-4f-fields {\\n  flex: 0.9;\\n  display: flex;\\n  flex-direction: column; }\\n\\n.game-4f-field-row {\\n  flex: 1;\\n  display: flex; }\\n\\n.game-4f-field-col {\\n  display: flex;\\n  width: 50%;\\n  justify-content: center; }\\n\\n.game-4f-bottom {\\n  text-align: center; }\\n\\n.game-field {\\n  flex: 0.8;\\n  padding: 10px;\\n  text-align: center;\\n  align-self: center;\\n  border-radius: 5px;\\n  height: 40%;\\n  transition: background-color 2s;\\n  background-color: rgba(0, 0, 0, 0.14);\\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }\\n\\n.fadefromright {\\n  margin-left: 100%;\\n  opacity: 0;\\n  animation: slidefromright 2s forwards;\\n  animation-delay: 1.5s; }\\n\\n@keyframes slidefromright {\\n  from {\\n    margin-left: 110%;\\n    opacity: 0; }\\n  to {\\n    margin-left: 0;\\n    opacity: 1; } }\\n\\n.fadefromleft {\\n  margin-left: -100%;\\n  opacity: 0;\\n  animation: slidefromleft 2s forwards;\\n  animation-delay: 0.5s; }\\n\\n@keyframes slidefromleft {\\n  from {\\n    margin-left: -110%;\\n    opacity: 0; }\\n  to {\\n    margin-left: 0;\\n    opacity: 1; } }\\n\\n.stackedimages {\\n  overflow: hidden;\\n  position: relative;\\n  flex: 1;\\n  max-height: fit-content; }\\n  .stackedimages :nth-child(2) {\\n    position: absolute;\\n    top: 0; }\\n    .stackedimages :nth-child(2) img {\\n      object-position: right; }\\n\\n.onboarding-bg {\\n  background: linear-gradient(55deg, #001e34, #00375f); }\\n  .onboarding-bg .titletextandimage-heading {\\n    color: white;\\n    margin-bottom: 24px; }\\n  .onboarding-bg .titletextandimage-text {\\n    color: #e1e1e1; }\\n  .onboarding-bg .headings {\\n    color: white; }\\n\\n#app {\\n  margin: 0;\\n  padding: 0;\\n  height: 100%;\\n  box-sizing: border-box;\\n  display: flex;\\n  justify-content: center;\\n  background-image: linear-gradient(#64b7ff, rgba(255, 255, 255, 0.3), rgba(153, 227, 255, 0.3)); }\\n\\n.app-preview {\\n  min-width: 420px;\\n  width: 420px;\\n  height: 746px;\\n  background-image: url(\\\"/static/designer-phone-bg.png\\\");\\n  padding: 69px 58px 80px 58px;\\n  box-sizing: border-box;\\n  font-family: Roboto, Arial;\\n  text-overflow: ellipsis;\\n  min-width: 420px;\\n  overflow-y: hidden;\\n  margin: auto; }\\n  .app-preview .app-content {\\n    border: solid 1px rgba(0, 0, 0, 0.16); }\\n\\n.mode-switcher {\\n  z-index: 999;\\n  position: absolute;\\n  right: 0px;\\n  top: 0px; }\\n\\n.app-actual {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  display: flex;\\n  box-sizing: border-box;\\n  font-family: Roboto, Arial;\\n  text-overflow: ellipsis;\\n  background: #fff;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }\\n\\n.app-content {\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  background: #f9f9f9; }\\n\\n.header-img-container {\\n  height: 300px;\\n  overflow: hidden; }\\n\\n.vh-centered-column {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-content: center;\\n  text-align: center;\\n  min-height: fit-content;\\n  min-width: 40px; }\\n  .vh-centered-column > * {\\n    margin: 6px; }\\n\\n.header-img-container.gradient {\\n  width: 100%;\\n  position: relative;\\n  height: 150px;\\n  content: \\\"\\\";\\n  margin-top: -150px;\\n  display: flex;\\n  background-image: -webkit-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));\\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));\\n  pointer-events: none; }\\n\\n.header-text {\\n  color: white;\\n  font-size: x-large;\\n  align-self: flex-end;\\n  padding: 0px 0px 25px 20px; }\\n\\n@keyframes fadein {\\n  from {\\n    opacity: 0; }\\n  to {\\n    opacity: 1; } }\\n\\n.imgdisplay {\\n  height: 100%;\\n  width: 100%;\\n  max-height: fit-content;\\n  min-height: inherit; }\\n  .imgdisplay > img {\\n    animation: fadein 250ms;\\n    height: 100%;\\n    width: 100%;\\n    max-height: fit-content;\\n    min-height: inherit;\\n    object-fit: cover;\\n    transition: background-color 0.2s cubic-bezier(0.4, 0, 0.2, 1), color 0.2s cubic-bezier(0.4, 0, 0.2, 1), -webkit-box-shadow 0.2s cubic-bezier(0.4, 0, 1, 1); }\\n\\n.is-loading *,\\n.is-loading *:before,\\n.is-loading *:after {\\n  animation-play-state: paused !important; }\\n\\n.imgheadsubdesc-text {\\n  padding: 20px; }\\n\\n.menu-pop-over {\\n  width: 273.6px;\\n  white-space: normal;\\n  display: flex;\\n  flex-direction: column; }\\n  .menu-pop-over > * {\\n    flex: 1;\\n    max-width: 304px; }\\n\\n.flex-container {\\n  display: flex; }\\n\\n.flex-filler {\\n  flex: 1; }\\n\\n.full-navbar {\\n  padding: 0 !important; }\\n  .full-navbar .inner {\\n    display: flex; }\\n    .full-navbar .inner > * {\\n      flex: 1;\\n      display: flex; }\\n\\n.onboarding-img {\\n  height: 3.5em;\\n  width: unset !important;\\n  min-height: 3.5em;\\n  margin: 1em;\\n  display: flex;\\n  align-content: center; }\\n  .onboarding-img > img {\\n    animation: none !important;\\n    transition: none !important; }\\n\\n.hero-gallery {\\n  height: 80%;\\n  min-height: 300px;\\n  flex: 1;\\n  flex-shrink: 0; }\\n  .hero-gallery .bg-container {\\n    background-color: #00375f; }\\n\\n.hero-front-inner {\\n  background-image: linear-gradient(to top, #0e1727, rgba(0, 27, 29, 0.8));\\n  box-shadow: inset 0px 0px 15px 1px rgba(0, 0, 0, 0.54118); }\\n\\n.bluebg {\\n  background-color: #00375f; }\\n\\n.shnyder-nav {\\n  background-color: #00375f; }\\n  .shnyder-nav div div {\\n    box-shadow: none !important; }\\n    .shnyder-nav div div span {\\n      background-color: rgba(255, 255, 255, 0.4); }\\n    .shnyder-nav div div div span {\\n      background-color: transparent; }\\n\\n.onboarding-sig {\\n  justify-content: center;\\n  display: flex;\\n  margin-bottom: 1em; }\\n  .onboarding-sig > img {\\n    height: 7em;\\n    min-height: 7em;\\n    width: 6.2em; }\\n\\n.onboarding-form {\\n  display: flex;\\n  flex-direction: row;\\n  flex: 1; }\\n  .onboarding-form button {\\n    background-color: #edc11cff !important;\\n    color: black !important;\\n    align-self: center;\\n    margin-top: 1.5em;\\n    margin-right: 1em; }\\n\\n.maxminheight100 {\\n  max-height: 100%;\\n  min-height: 100%; }\\n\\n.center-text {\\n  text-align: center;\\n  margin-bottom: 1em; }\\n\\n.onboarding-card-container {\\n  max-width: 500px;\\n  align-self: center;\\n  text-justify: newspaper;\\n  text-align: justify; }\\n\\n.onboarding-text {\\n  display: flex;\\n  align-content: flex-start;\\n  flex-direction: column;\\n  text-justify: newspaper;\\n  text-align: justify;\\n  max-width: 500px;\\n  align-self: center;\\n  min-height: 200px; }\\n  .onboarding-text p {\\n    margin-left: 1em;\\n    margin-right: 1em; }\\n  .onboarding-text i,\\n  .onboarding-text p:last-of-type {\\n    margin-bottom: 1em; }\\n  .onboarding-text span,\\n  .onboarding-text h3 {\\n    flex: 1; }\\n\\n.dense-form {\\n  flex: 1;\\n  align-self: center;\\n  display: flex;\\n  flex-direction: column;\\n  margin: 2em;\\n  margin-top: 3em;\\n  margin-right: 0.5em; }\\n  .dense-form > * {\\n    flex: 1;\\n    margin: 0;\\n    text-align: center !important;\\n    padding-bottom: 0 !important; }\\n  .dense-form label {\\n    color: white; }\\n\\n.onboarding-editor-wrapper {\\n  margin: 1em;\\n  margin-bottom: 0;\\n  flex: 1;\\n  box-shadow: 0px 5px 15px 6px #00375f;\\n  height: 500px;\\n  display: block; }\\n\\n.mexpbg > img {\\n  opacity: 0.5;\\n  animation: none;\\n  height: 100%;\\n  width: 100%;\\n  max-height: fit-content;\\n  min-height: inherit;\\n  object-fit: cover;\\n  transition: none; }\\n\\n.onboarding-logo {\\n  display: flex;\\n  flex-direction: row;\\n  flex: 1; }\\n  .onboarding-logo button {\\n    position: absolute;\\n    background-color: #edc11cff !important;\\n    color: black !important;\\n    align-self: center;\\n    margin-top: 1.5em;\\n    right: 0.5em; }\\n\\n.me-beta-mailchimp {\\n  display: flex;\\n  flex: 1; }\\n  .me-beta-mailchimp #mc_embed_signup {\\n    background: transparent;\\n    clear: left;\\n    font: 14px Helvetica, Arial, sans-serif;\\n    width: 100%;\\n    align-self: center;\\n    margin-top: 2em; }\\n    .me-beta-mailchimp #mc_embed_signup input.email {\\n      width: 95% !important;\\n      max-width: 350px;\\n      min-width: 100px; }\\n  .me-beta-mailchimp #mc_embed_signup_scroll > * {\\n    margin: .5em !important; }\\n  .me-beta-mailchimp #mc-embedded-subscribe-form input[type=checkbox] {\\n    display: inline;\\n    margin-right: 10px; }\\n  .me-beta-mailchimp #mergeRow-gdpr {\\n    margin-top: 20px; }\\n  .me-beta-mailchimp #mergeRow-gdpr fieldset label {\\n    font-weight: normal; }\\n  .me-beta-mailchimp #mc-embedded-subscribe-form .mc_fieldset {\\n    border: none;\\n    min-height: 0px;\\n    padding-bottom: 0px; }\\n  .me-beta-mailchimp #mc-embedded-subscribe.button {\\n    background-color: #edc11c !important;\\n    color: black !important; }\\n    .me-beta-mailchimp #mc-embedded-subscribe.button:hover {\\n      background-color: whitesmoke !important;\\n      color: black; }\\n\\n.me-beta-imprint {\\n  height: 150px;\\n  width: 100%;\\n  background-image: linear-gradient(#00375f, #001e34);\\n  color: #fff;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  box-shadow: 1px -2px 6px 0px rgba(0, 0, 0, 0.4); }\\n  .me-beta-imprint p {\\n    margin: 0;\\n    height: fit-content;\\n    border: 5px white;\\n    /* border: 2px solid rgba(255, 255, 255, 0.1); */\\n    border-radius: 5px;\\n    padding: 15px 30px;\\n    box-shadow: inset 0px 0px 15px 1px rgba(0, 0, 0, 0.25);\\n    /* background-color: white; */ }\\n  .me-beta-imprint .imprint_imprint {\\n    opacity: 0.4; }\\n  .me-beta-imprint .imprint_name {\\n    opacity: 0.9; }\\n  .me-beta-imprint .imprint_country {\\n    opacity: 0.9; }\\n  .me-beta-imprint .imprint_zipcode {\\n    opacity: 0.9; }\\n  .me-beta-imprint .imprint_locality {\\n    opacity: 0.9; }\\n  .me-beta-imprint .imprint_street {\\n    opacity: 0.9; }\\n\\n.valueprop {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center; }\\n\\n.valuepropimg {\\n  min-height: 4em;\\n  height: 4em;\\n  margin-bottom: 1em;\\n  padding-top: 1em; }\\n\", \"\"]);\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \"{\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\".concat(item[2], \") and (\").concat(mediaQuery, \")\");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","import React from 'react';\r\nimport { BlueprintConfig, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ldBlueprint, IBlueprintItpt } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\n\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { Component } from 'react';\r\n//import { Dispatch, Action } from 'redux';\r\n\r\ntype OwnProps = {\r\n};\r\ntype ConnectedState = {\r\n};\r\n\r\ntype ConnectedDispatch = {\r\n    fileChange: (fileList: FileList, url: string) => void;\r\n};\r\n/*\r\nconst mapStateToProps = (state: ExplorerState, ownProps: OwnProps): ConnectedState => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<any>>): ConnectedDispatch => ({\r\n    fileChange: (fileList: FileList, url: string) => {\r\n        dispatch(uploadImgRequestAction(fileList, url));\r\n        return;\r\n    }\r\n});*/\r\n\r\nlet cfgType: string = LDDict.CreateAction;\r\nlet cfgIntrprtKeys: string[] =\r\n    [LDDict.agent, LDDict.target];\r\nlet initialKVStores: IKvStore[] = [\r\n    {\r\n        key: LDDict.agent,\r\n        value: undefined,\r\n        ldType: undefined\r\n    },\r\n    {\r\n        key: LDDict.target,\r\n        value: 'http://localhost:1111/api/ysj/media/upload',\r\n        ldType: LDDict.EntryPoint\r\n    },\r\n    {\r\n        key: LDDict.result,\r\n        value: undefined,\r\n        ldType: LDDict.ImageObject\r\n    }];\r\nvar bpCfg: BlueprintConfig = {\r\n    subItptOf: null,\r\n    canInterpretType: cfgType,\r\n    nameSelf: \"shnyder/imageUpload\",\r\n    initialKvStores: initialKVStores,\r\n    interpretableKeys: cfgIntrprtKeys,\r\n    crudSkills: \"Crud\"\r\n};\r\n\r\n@ldBlueprint(bpCfg)\r\nexport class PureImgUploader extends Component<ConnectedState & ConnectedDispatch & OwnProps, {}>\r\n    implements IBlueprintItpt {\r\n    cfg: BlueprintConfig;\r\n    outputKVMap: OutputKVMap;\r\n    initialKvStores: IKvStore[];\r\n    consumeLDOptions: (ldOptions: ILDOptions) => any;\r\n    onClickFileChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        let fileList: FileList = (e.target as HTMLInputElement).files;\r\n        if (fileList.length > 0) {\r\n            var url: string = this.getStringValFromKey(LDDict.target);\r\n            this.props.fileChange(fileList, url);\r\n        }\r\n    }\r\n    render() {\r\n        return <div>\r\n            <input type=\"file\" onChange={(evt) => this.onClickFileChange(evt)}\r\n                placeholder=\"Upload file\" accept=\".jpg,.png,.txt\" />\r\n            //  ImgDisplay/>\r\n            // singleImage=\"\" />\r\n        </div>;\r\n    }\r\n\r\n    private getStringValFromKey(key: string): string {\r\n        let kvStoreVal = this.initialKvStores;\r\n        if (kvStoreVal != null && kvStoreVal) {\r\n            return kvStoreVal.filter(\r\n                (curItm) => curItm.key === key).map((val) => val.value as string).reduce(\r\n                (a, b, idx) => idx === 0 ? b : a);\r\n            //TODO: analyze which handling could be better, now selects first\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ldBlueprint, BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict } from './visualcomposition/visualDict';\r\n\r\nimport { initLDLocalState, generateItptFromCompInfo, gdsfpLD } from './generic/generatorFns';\r\nimport { Component } from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\n\r\nlet allMyInputKeys: string[] = [VisualKeysDict.inputContainer, \"http://my-domain.com/my-class/my-member-a\"];\r\nlet initialKVStores: IKvStore[] = [ //the content of the key-value stores at initialization\r\n\t//is an input, because it is defined in var allMyInputKeys, and is a visual container\r\n\t{ key: VisualKeysDict.inputContainer, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t//is an input, because it is defined in var allMyInputKeys, is NOT a visual container\r\n\t{ key: \"http://my-domain.com/my-class/my-member-a\", value: undefined, ldType: LDDict.Text },\r\n\t//is an output, because it is NOT defined in var allMyInputKey\r\n\t{ key: \"http://my-domain.com/my-class/my-member-b\", value: undefined, ldType: LDDict.Text }\r\n];\r\nexport const myTemplateCfg: BlueprintConfig = {\r\n\tsubItptOf: null, //used for extending compound nodes\r\n\tnameSelf: \"http://my-domain.com/components/my-component-name\",\r\n\tcanInterpretType: \"http://my-domain.com/my-class\",\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: allMyInputKeys,\r\n\tcrudSkills: \"cRUd\" //supports _R_ead and _U_pdate, but not _c_reate and _d_elete (capitalization)\r\n};\r\nexport interface MyTemplateState extends LDLocalState { }\r\n\r\n@ldBlueprint(myTemplateCfg)\r\nexport class PureMyTemplate extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, MyTemplateState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: MyTemplateState): null | MyTemplateState {\r\n\t\tlet rvLD = gdsfpLD(nextProps, prevState,\r\n\t\t\t[VisualKeysDict.inputContainer], //gets the visual part\r\n\t\t\t[\"http://my-domain.com/my-class/my-member-a\"], //gets the non-visual\r\n\t\t\t\"http://my-domain.com/my-class\" // is the canInterpretType field\r\n\t\t\t);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD };\r\n\t\treturn { ...rvNew };\r\n\t}\r\n\r\n\t//member-declarations for the interface\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\t//generates child react components\r\n\tprotected renderInputContainer = generateItptFromCompInfo.bind(this, VisualKeysDict.inputContainer);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [VisualKeysDict.inputContainer], [\"http://my-domain.com/my-class/my-member-a\"]);\r\n\t\tthis.state = { ...ldState, };\r\n\t}\r\n\toutputMemberB = () => {\r\n\t\tconst modifiedKV: IKvStore = { key: \"http://my-domain.com/my-class/my-member-b\", value: \"some Text\", ldType: LDDict.Text };\r\n\t\tconst outputKVMap = this.state.localValues.get(UserDefDict.outputKVMapKey); //internally set up for you\r\n\t\tthis.props.dispatchKvOutput([modifiedKV], this.props.ldTokenString, outputKVMap); //outputting to the state machine\r\n\t}\r\n\trender() {\r\n\t\tconst { localValues } = this.state;\r\n\t\tconst myMemberA = localValues.get(\"http://my-domain.com/my-class/my-member-a\");\r\n\t\treturn <>\r\n\t\t\t<div onClick={() => this.outputMemberB()}>{myMemberA}</div>\r\n\t\t\t<div>{this.renderInputContainer()}</div>\r\n\t\t</>;\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { BlueprintConfig } from 'ldaccess/ldBlueprint';\r\nimport { IBlueprintItpt } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\n\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\n\r\nimport { LDBaseDataType } from 'ldaccess/LDBaseDataType';\r\nimport { LDOwnProps, LDConnectedState, LDConnectedDispatch, LDLocalState } from \"appstate/LDProps\";\r\nimport { ldOptionsDeepCopy } from \"ldaccess/ldUtils\";\r\nimport { Component, ReactNode } from \"react\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { getKVStoreByKey } from \"ldaccess/kvConvenienceFns\";\r\nimport { gdsfpLD, initLDLocalState, determineSingleKVKey } from \"../../generic/generatorFns\";\r\n\r\n/**\r\n * @author Jonathan Schneider\r\n * for each Base Data Type an itpt is being configured, the React-Part\r\n * of the itpt is the same for all Base Data Types\r\n */\r\n\r\ntype OwnProps = {\r\n\t//singleKV: IKvStore; //TODO: doesn't seem to be used any more as react-prop\r\n} & LDOwnProps;\r\n\r\ntype BaseDataTypeState = {\r\n\tsingleKVOutput: IKvStore,\r\n\tsingleKVInputKey: string,\r\n\tsingleKVOutputKey: string\r\n};\r\n\r\nexport interface PureBaseDataTypeInputComponent {\r\n\trenderSingleKv(baseDT: LDBaseDataType): ReactNode;\r\n}\r\n\r\nlet bdts: LDBaseDataType[] = [LDDict.Boolean, LDDict.Integer, LDDict.Double, LDDict.Text, LDDict.Date, LDDict.DateTime];\r\nexport const baseDataTypeBpcfgs: BlueprintConfig[] = new Array();\r\n\r\nfor (var bdt in bdts) {\r\n\tif (bdts.hasOwnProperty(bdt)) {\r\n\t\tvar elem = bdts[bdt];\r\n\t\t//let cfgType: string = LDDict.CreateAction;\r\n\t\tlet cfgIntrprtKeys: string[] = [LDDict.description, UserDefDict.inputData];\r\n\t\tlet initialKVStores: IKvStore[] = [\r\n\t\t\t{\r\n\t\t\t\tkey: LDDict.description,\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\tldType: LDDict.Text\r\n\t\t\t},\r\n\t\t\t{//if inputdata is not used explicitly, BaseDataTypeInput tries to determine the key dynamically\r\n\t\t\t\tkey: UserDefDict.inputData,\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\tldType: elem\r\n\t\t\t},\r\n\t\t\t{//one for output, gets ignored\r\n\t\t\t\tkey: UserDefDict.outputData,\r\n\t\t\t\tvalue: undefined,\r\n\t\t\t\tldType: elem\r\n\t\t\t},\r\n\t\t];\r\n\t\tlet bpCfg: BlueprintConfig = {\r\n\t\t\tsubItptOf: undefined,\r\n\t\t\tcanInterpretType: elem,\r\n\t\t\tnameSelf: \"shnyder/material-design/\" + elem,\r\n\t\t\tinitialKvStores: initialKVStores,\r\n\t\t\tinterpretableKeys: cfgIntrprtKeys,\r\n\t\t\tcrudSkills: \"CRUd\"\r\n\t\t};\r\n\t\tbaseDataTypeBpcfgs.push(bpCfg);\r\n\t}\r\n}\r\nexport abstract class AbstractBaseDataTypeInput extends Component<LDConnectedState & LDConnectedDispatch & OwnProps, BaseDataTypeState & LDLocalState>\r\n\timplements IBlueprintItpt, PureBaseDataTypeInputComponent {\r\n\r\n\tcfg: BlueprintConfig;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props?: LDConnectedState & LDConnectedDispatch & OwnProps) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = this.constructor[\"cfg\"];\r\n\t\tlet bdtState: BaseDataTypeState = {\r\n\t\t\tsingleKVOutput: null,\r\n\t\t\tsingleKVInputKey: UserDefDict.inputData,\r\n\t\t\tsingleKVOutputKey: UserDefDict.outputData\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...bdtState,\r\n\t\t\t...initLDLocalState(\r\n\t\t\t\tthis.cfg, props,\r\n\t\t\t\t[],\r\n\t\t\t\t[LDDict.description, UserDefDict.inputData, UserDefDict.outputKVMapKey])\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...this.state, singleKVOutput:\r\n\t\t\t{\r\n\t\t\t\tkey: this.state.singleKVOutputKey,\r\n\t\t\t\tvalue: this.state.localValues.get(this.state.singleKVInputKey),\r\n\t\t\t\tldType: this.state.localLDTypes.get(this.state.singleKVInputKey)\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tconsumeLDOptions = (ldOptions: ILDOptions) => {\r\n\t\treturn;\r\n\t}\r\n\r\n\thandleChange = (evtval) => {\r\n\t\tlet singleInputKey: string = this.state.singleKVInputKey;\r\n\t\tlet modSingleKV: IKvStore = {\r\n\t\t\tkey: this.state.singleKVOutputKey,\r\n\t\t\tldType: this.state.localLDTypes.get(singleInputKey),\r\n\t\t\tvalue: this.state.localValues.get(singleInputKey)\r\n\t\t};\r\n\t\tmodSingleKV.value = evtval;\r\n\t\tthis.setState({ ...this.state, singleKVOutput: modSingleKV });\r\n\t\t//TODO: it might be a good idea to debounce before updating the application state\r\n\t\tconst outputKVMap = this.state.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\tif (!outputKVMap || !outputKVMap[this.state.singleKVOutputKey]) return;\r\n\t\tthis.props.dispatchKvOutput([modSingleKV], this.props.ldTokenString, outputKVMap);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.state.singleKVOutput || !this.state.singleKVOutput.ldType) {\r\n\t\t\tconsole.log('PureBaseDataTypeInput notifyLDOptionsChange');\r\n\t\t\t//this self-creates an object. Used e.g. in the itpt-editor, bdt-part\r\n\t\t\tconsole.dir(this.props.ldOptions);\r\n\t\t\tif (this.props.ldOptions) {\r\n\t\t\t\tlet newLDOptionsObj = ldOptionsDeepCopy(this.props.ldOptions);\r\n\t\t\t\tlet kvStoreIdx = newLDOptionsObj.resource.kvStores.findIndex((a) => {\r\n\t\t\t\t\treturn UserDefDict.singleKvStore.toString() === a.key;\r\n\t\t\t\t});\r\n\t\t\t\tlet singleKv: IKvStore;\r\n\t\t\t\tif (kvStoreIdx === -1) {\r\n\t\t\t\t\tsingleKv = { key: UserDefDict.singleKvStore, value: null, ldType: this.cfg.canInterpretType };\r\n\t\t\t\t\tnewLDOptionsObj.resource.kvStores.push(singleKv);\r\n\t\t\t\t\tthis.props.notifyLDOptionsChange(newLDOptionsObj);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.notifyLDOptionsChange(null);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn <>{this.renderSingleKv(this.cfg.canInterpretType as LDBaseDataType)}</>;\r\n\t}\r\n\trenderSingleKv(baseDT: LDBaseDataType): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\nexport function wrapBaseDataTypeGDSF(cfg: BlueprintConfig) {\r\n\treturn (\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & OwnProps,\r\n\t\tprevState: BaseDataTypeState & LDLocalState) => {\r\n\t\tlet rvLD = gdsfpLD(nextProps, prevState, [], [LDDict.description, UserDefDict.inputData, UserDefDict.outputKVMapKey], cfg.canInterpretType);\r\n\t\tif (!rvLD) return null;\r\n\t\tlet rvLocal: BaseDataTypeState = null;\r\n\t\tif (nextProps.ldOptions) {\r\n\t\t\tlet pLdOpts: ILDOptions = nextProps.ldOptions;\r\n\t\t\tlet newSingleKVKey: string = determineSingleKVKey(pLdOpts.resource.kvStores, cfg.canInterpretType, cfg.interpretableKeys as string[]);\r\n\t\t\tlet nextDescription = rvLD.localValues.get(LDDict.description);\r\n\t\t\tlet nextSingleKV = getKVStoreByKey(pLdOpts.resource.kvStores, newSingleKVKey);\r\n\t\t\tif (!nextSingleKV) {\r\n\t\t\t\t//this happens when state changes let this comp re-evaluate before it's being replaced. Do nothing\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tlet desc = nextDescription ? nextDescription : newSingleKVKey;\r\n\t\t\trvLD.localLDTypes.set(newSingleKVKey, nextSingleKV.ldType);\r\n\t\t\trvLD.localValues.set(newSingleKVKey, nextSingleKV.value);\r\n\t\t\trvLD.localLDTypes.set(LDDict.description, LDDict.Text);\r\n\t\t\trvLD.localValues.set(LDDict.description, desc);\r\n\t\t\tlet singleKVOutputKeyStr: string = UserDefDict.outputData;\r\n\t\t\tif (newSingleKVKey !== UserDefDict.inputData) singleKVOutputKeyStr = newSingleKVKey;\r\n\t\t\trvLocal = { singleKVOutput: nextSingleKV, singleKVInputKey: newSingleKVKey, singleKVOutputKey: singleKVOutputKeyStr };\r\n\t\t}\r\n\t\tif (!rvLocal) return null;\r\n\t\treturn { ...prevState, ...rvLD, ...rvLocal };\r\n\t};\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\n\r\nimport { LDLocalState, LDConnectedState, LDConnectedDispatch, LDOwnProps } from 'appstate/LDProps';\r\nimport { Component, ReactNode } from 'react';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { initLDLocalState, generateItptFromCompInfo, gdsfpLD } from 'components/generic/generatorFns';\r\nimport { VisualTypesDict, VisualKeysDict } from 'components/visualcomposition/visualDict';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\n\r\nexport const CompactInfoListElementName = \"shnyder/CompactInfoListElement\";\r\n\r\nlet CompactInfoListElementItptKeys: string[] = [VisualKeysDict.primaryItpt, VisualKeysDict.secondaryItpt];\r\nlet compactInfoListElementValueKeys: string[] = [VisualKeysDict.headerTxt, VisualKeysDict.subHeaderTxt];\r\nlet CompactInfoListElementInputKeys: string[] = [...CompactInfoListElementItptKeys, ...compactInfoListElementValueKeys];\r\n\r\nlet initialKVStores: IKvStore[] = [\r\n\t{ key: VisualKeysDict.primaryItpt, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: VisualKeysDict.secondaryItpt, value: undefined, ldType: UserDefDict.intrprtrClassType },\r\n\t{ key: VisualKeysDict.headerTxt, value: undefined, ldType: LDDict.Text },\r\n\t{ key: VisualKeysDict.subHeaderTxt, value: undefined, ldType: LDDict.Text },\r\n];\r\nexport const CompactInfoListElementCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: CompactInfoListElementName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: CompactInfoListElementInputKeys,\r\n\tcrudSkills: \"cRud\",\r\n\tcanInterpretType: VisualTypesDict.compactInfoElement\r\n};\r\nexport type CompactInfoListElementState = LDLocalState;\r\n\r\nexport abstract class AbstractCompactInfoListElement extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, CompactInfoListElementState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: CompactInfoListElementState): null | CompactInfoListElementState {\r\n\t\tlet rvNew = gdsfpLD(nextProps, prevState, CompactInfoListElementItptKeys, compactInfoListElementValueKeys,\r\n\t\t\tCompactInfoListElementCfg.canInterpretType,\r\n\t\t\t[false, false], [false, false]);\r\n\t\treturn { ...prevState, ...rvNew, };\r\n\t}\r\n\r\n\t//member-declarations for the interface\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprotected renderSub = generateItptFromCompInfo.bind(this);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, CompactInfoListElementItptKeys, compactInfoListElementValueKeys);\r\n\t\tthis.state = { ...ldState };\r\n\t}\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\n\r\nimport { initLDLocalState, gdsfpLD, generateItptFromCompInfo } from 'components/generic/generatorFns';\r\nimport { Component, ReactNode } from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\n\r\nexport const SectionedListName = \"shnyder/material-design/SectionedList\";\r\nexport const sectionHeadings = \"section-headings\";\r\nexport const sectionElements = \"section-elements\";\r\n\r\nexport const sectionedListItptKeys: string[] = [sectionElements];\r\nexport const sectionedListValueKeys: string[] = [sectionHeadings];\r\nexport const sectionedListInputKeys: string[] = [...sectionedListValueKeys, ...sectionedListItptKeys];\r\nexport const initialKVStores: IKvStore[] = [\r\n\t{ key: sectionHeadings, value: undefined, ldType: LDDict.Text },\r\n\t{ key: sectionElements, value: undefined, ldType: UserDefDict.intrprtrClassType }\r\n];\r\nexport const SectionedListCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: SectionedListName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: sectionedListInputKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport type SectionedListState = LDLocalState;\r\nexport abstract class AbstractSectionedList extends Component<LDConnectedState\r\n\t& LDConnectedDispatch & LDOwnProps, SectionedListState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: SectionedListState): null | SectionedListState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, sectionedListItptKeys, sectionedListValueKeys, null, [true], [true]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD };\r\n\t\treturn { ...prevState, ...rvNew };\r\n\t}\r\n\r\n\t//member-declarations for the interface\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprotected renderSub = generateItptFromCompInfo.bind(this);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, sectionedListItptKeys, sectionedListValueKeys, [true], [true]);\r\n\t\tthis.state = { ...ldState };\r\n\t}\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\n\r\nimport { initLDLocalState, gdsfpLD } from 'components/generic/generatorFns';\r\nimport { Component, ReactNode } from 'react';\r\n\r\nexport const SimpleTextTableName = \"shnyder/material-design/SimpleTextTable\";\r\nexport const tableHeadings = \"headings\";\r\nexport const tableRows = \"rows\";\r\n\r\nlet simpleTextTableInputKeys: string[] = [tableHeadings, tableRows];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{ key: tableHeadings, value: undefined, ldType: undefined },\r\n\t{ key: tableRows, value: undefined, ldType: undefined }\r\n];\r\nexport const simpleTextTableCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: SimpleTextTableName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: simpleTextTableInputKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport type SimpleTextTableState = LDLocalState;\r\n\r\nexport abstract class AbstractSimpleTextTable extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, SimpleTextTableState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: SimpleTextTableState): null | SimpleTextTableState {\r\n\t\tlet rvLocal = gdsfpLD(nextProps, prevState, [], simpleTextTableInputKeys);\r\n\t\tif (!rvLocal) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLocal };\r\n\t\treturn { ...prevState, ...rvNew };\r\n\t}\r\n\r\n\t//member-declarations for the interface\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props, [], simpleTextTableInputKeys);\r\n\t\tthis.state = { ...ldState };\r\n\t}\r\n\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import { Component, ReactNode } from 'react';\r\nimport { LDConnectedDispatch, LDConnectedState, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { BlueprintConfig, IBlueprintItpt } from 'ldaccess/ldBlueprint';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { initLDLocalState, gdsfpLD } from '../../generic/generatorFns';\r\n// TODO: drop file anim: https://css-tricks.com/examples/DragAndDropFileUploading/\r\n\r\nexport enum SingleImageSelectorStateEnum {\r\n\tisSelectInputType = 2,\r\n\tisDragging = 3,\r\n\tisCamShooting = 4,\r\n\tisPreviewing = 5,\r\n\tisError = 6\r\n}\r\n\r\nexport interface SingleImageSelectorState extends LDLocalState {\r\n\tcurStep: SingleImageSelectorStateEnum;\r\n\tisCamAvailable: boolean;\r\n\tpreviewURL: string;\r\n}\r\n\r\nexport const SingleImageSelectorName = \"shnyder/material-design/SingleImageSelector\";\r\nlet cfgType: string = LDDict.CreateAction;\r\nlet cfgIntrprtKeys: string[] =\r\n\t[];\r\nconst RESULT_KV: IKvStore = {\r\n\tkey: LDDict.result,\r\n\tvalue: undefined,\r\n\tldType: LDDict.URL\r\n};\r\nlet initialKVStores: IKvStore[] = [\r\n\tRESULT_KV\r\n];\r\nexport let SingleImageSelectorBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tcanInterpretType: cfgType,\r\n\tnameSelf: SingleImageSelectorName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\nexport abstract class AbstractSingleImageSelector extends Component<\r\n\tLDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\tSingleImageSelectorState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: SingleImageSelectorState): null | SingleImageSelectorState {\r\n\t\tlet rvLD = gdsfpLD(nextProps, prevState, [], [UserDefDict.outputKVMapKey]);\r\n\t\tif (rvLD === null || rvLD === prevState) return null;\r\n\t\treturn { ...prevState, ...rvLD };\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\tloadingImgLink: string = \"/static/camera_negative_black.svg\";\r\n\terrorImgLink: string = \"/static/nocamera_negative_black.svg\";\r\n\tdraggingImgLink: string = \"/static/dragndrop.svg\";\r\n\r\n\tinitialKvStores: IKvStore[];\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst baseState = {\r\n\t\t\tcurStep: SingleImageSelectorStateEnum.isSelectInputType,\r\n\t\t\tisCamAvailable: false,\r\n\t\t\tpreviewURL: null\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...baseState,\r\n\t\t\t...initLDLocalState(\r\n\t\t\t\tthis.cfg,\r\n\t\t\t\tprops,\r\n\t\t\t\t[],\r\n\t\t\t\t[UserDefDict.outputKVMapKey]\r\n\t\t\t)\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * called when the URL/blob of the image URL changes, dispatches KV-Output\r\n\t */\r\n\tonResultChanged(url: string) {\r\n\t\tconst outputKV = { ...RESULT_KV, value: url };\r\n\t\tconst outputKVMap = this.state.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\tif (!outputKVMap) return;\r\n\t\tthis.props.dispatchKvOutput([outputKV], this.props.ldTokenString, outputKVMap);\r\n\t}\r\n\r\n\tconsumeLDOptions = (ldOptions: ILDOptions) => {\r\n\t\t/*if (ldOptions && ldOptions.resource && ldOptions.resource.kvStores) {\r\n\t\t\tlet kvs = ldOptions.resource.kvStores;\r\n\t\t\tthis.imgLink = getKVValue(getKVStoreByKey(kvs, LDDict.contentUrl));\r\n\t\t}*/\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n\t\t\tthis.setState({ ...this.state, isCamAvailable: false });\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tnavigator.mediaDevices.enumerateDevices()\r\n\t\t\t\t.then((devices) => {\r\n\t\t\t\t\tlet vidInputList: MediaDeviceInfo[] = [];\r\n\t\t\t\t\tdevices.forEach((device) => {\r\n\t\t\t\t\t\tif (device.kind === \"videoinput\")\r\n\t\t\t\t\t\t\tvidInputList.push(device);\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (vidInputList.length === 0) {\r\n\t\t\t\t\t\tthis.setState({ ...this.state, isCamAvailable: false });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({ ...this.state, isCamAvailable: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tsetStateToError() {\r\n\t\tthis.setState({ ...this.state, curStep: SingleImageSelectorStateEnum.isError });\r\n\t}\r\n\r\n\tstartDrag() {\r\n\t\tif (this.state.curStep !== SingleImageSelectorStateEnum.isPreviewing) {\r\n\t\t\tthis.setState({ ...this.state, curStep: SingleImageSelectorStateEnum.isDragging });\r\n\t\t}\r\n\t}\r\n\r\n\tonDropSuccess(imgFile: File, previewURL: string) {\r\n\t\tthis.setState({ ...this.state, curStep: SingleImageSelectorStateEnum.isPreviewing, previewURL: previewURL });\r\n\t\tthis.onResultChanged(previewURL);\r\n\t}\r\n\tonDropFailure() {\r\n\t\tif (this.state.curStep !== SingleImageSelectorStateEnum.isPreviewing) {\r\n\t\t\tthis.setState({ ...this.state, curStep: SingleImageSelectorStateEnum.isSelectInputType });\r\n\t\t}\r\n\t}\r\n\tstartCamera() {\r\n\t\tthis.setState({ ...this.state, curStep: SingleImageSelectorStateEnum.isCamShooting });\r\n\t}\r\n\r\n\tdestroyPreview() {\r\n\t\tif (this.state.previewURL) {\r\n\t\t\twindow.URL.revokeObjectURL(this.state.previewURL);\r\n\t\t}\r\n\t}\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { Redirect } from 'react-router';\r\nimport { Component } from 'react';\r\nimport { ActionKeysDict, ActionTypesDict, ActionType } from 'components/actions/ActionDict';\r\nimport { VisualKeysDict, VisualTypesDict } from 'components/visualcomposition/visualDict';\r\nimport { gdsfpLD, initLDLocalState } from 'components/generic/generatorFns';\r\nimport { cleanRouteString } from 'components/routing/route-helper-fns';\r\n\r\nexport const MDButtonName = \"shnyder/material-design/Button\";\r\nexport const fontIcon = \"fontIcon\";\r\nexport const isIcon = \"isIcon\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[\r\n\t\tVisualKeysDict.confirmTxt,\r\n\t\tVisualKeysDict.routeSend_confirm,\r\n\t\tActionKeysDict.action_confirm,\r\n\t\tfontIcon,\r\n\t\tisIcon\r\n\t];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.confirmTxt,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_confirm,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n\t{\r\n\t\tkey: ActionKeysDict.action_confirm,\r\n\t\tvalue: undefined,\r\n\t\tldType: ActionTypesDict.metaExplorerAction\r\n\t},\r\n\t{\r\n\t\tkey: fontIcon,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: isIcon,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Boolean\r\n\t},\r\n];\r\nexport const ButtonBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: MDButtonName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport type MDButtonState = {\r\n\tisDoRedirectConfirm: boolean;\r\n};\r\nexport abstract class AbstractButton extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, MDButtonState & LDLocalState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | MDButtonState & LDLocalState)\r\n\t\t: null | MDButtonState & LDLocalState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer],\r\n\t\t\t[\r\n\t\t\t\tVisualKeysDict.confirmTxt,\r\n\t\t\t\tVisualKeysDict.routeSend_cancel,\r\n\t\t\t\tVisualKeysDict.routeSend_confirm,\r\n\t\t\t\tActionKeysDict.action_confirm,\r\n\t\t\t\tfontIcon,\r\n\t\t\t\tisIcon\r\n\t\t\t]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvLD\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tlet navBarStatePart: MDButtonState = {\r\n\t\t\tisDoRedirectConfirm: false\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...navBarStatePart,\r\n\t\t\t...initLDLocalState(this.cfg, props,\r\n\t\t\t\t[],\r\n\t\t\t\t[\r\n\t\t\t\t\tVisualKeysDict.confirmTxt,\r\n\t\t\t\t\tVisualKeysDict.routeSend_cancel,\r\n\t\t\t\t\tVisualKeysDict.routeSend_confirm,\r\n\t\t\t\t\tActionKeysDict.action_confirm,\r\n\t\t\t\t\tfontIcon,\r\n\t\t\t\t\tisIcon\r\n\t\t\t\t])\r\n\t\t};\r\n\t}\r\n\r\n\tonConfirmClick = () => {\r\n\t\tlet confirmAction: ActionType = this.state.localValues.get(ActionKeysDict.action_confirm);\r\n\t\tif (confirmAction) {\r\n\t\t\tthis.props.dispatchLdAction(confirmAction.ldId, confirmAction.ldType, confirmAction.payload);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tisDoRedirectConfirm: true\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\tconst { isDoRedirectConfirm, localValues } = this.state;\r\n\t\tconst routeSendConfirm = localValues.get(VisualKeysDict.routeSend_confirm);\r\n\t\tconst confirmTxt = localValues.get(VisualKeysDict.confirmTxt);\r\n\t\tconst iconUrlVal = localValues.get(fontIcon);\r\n\t\tlet isIconVal = localValues.get(isIcon);\r\n\t\tisIconVal = !!isIconVal;\r\n\t\tif (isDoRedirectConfirm && routeSendConfirm) {\r\n\t\t\tlet route: string = cleanRouteString(routeSendConfirm, this.props.routes);\r\n\t\t\t//if (match.params.nextPath === undefined) match.params.nextPath = route;\r\n\t\t\tthis.setState({ ...this.state, isDoRedirectConfirm: false });\r\n\t\t\treturn <Redirect to={route} />;\r\n\t\t}\r\n\t\treturn this.renderButton(isIconVal, iconUrlVal, confirmTxt);\r\n\t\t/*if (isIconVal) {\r\n\t\t\treturn <Button accent floating icon={iconUrlVal ? iconUrlVal : null} onClick={() => this.onConfirmClick()} ></Button>;\r\n\t\t}\r\n\t\treturn <Button icon={iconUrlVal ? iconUrlVal : null} label={confirmTxt ? confirmTxt : \"confirm\"} onClick={() => this.onConfirmClick()} />;\r\n\t\t*/\r\n\t}\r\n\r\n\tprotected renderButton(isIconVal: boolean, iconUrlVal: string, confirmTxt: string): JSX.Element {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict } from '../../visualcomposition/visualDict';\r\nimport { generateItptFromCompInfo, initLDLocalState, gdsfpLD } from '../../generic/generatorFns';\r\nimport { Component, ReactNode } from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\n\r\nexport const NavBarInputContainerName = \"shnyder/material-design/NavBarInputContainer\";\r\n\r\nlet cfgIntrprtItptKeys: string[] =\r\n\t[\r\n\t\tVisualKeysDict.inputContainer,\r\n\t\tVisualKeysDict.primaryItpt\r\n\t];\r\nlet cfgIntrprtValueKeys: string[] = [\r\n\tVisualKeysDict.cssClassName\r\n];\r\nlet cfgIntrprtKeys: string[] = [...cfgIntrprtItptKeys, ...cfgIntrprtValueKeys];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.primaryItpt,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cssClassName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\nexport const NavBarInputContainerBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: NavBarInputContainerName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport type NavBarInputContainerState = {\r\n};\r\nexport abstract class AbstractNavBarInputContainer extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, NavBarInputContainerState & LDLocalState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | NavBarInputContainerState & LDLocalState)\r\n\t\t: null | NavBarInputContainerState & LDLocalState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, cfgIntrprtItptKeys,\r\n\t\t\tcfgIntrprtValueKeys);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvLD\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprotected renderSub = generateItptFromCompInfo.bind(this);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tlet navBarStatePart: NavBarInputContainerState = {\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...navBarStatePart,\r\n\t\t\t...initLDLocalState(this.cfg, props,\r\n\t\t\t\tcfgIntrprtItptKeys,\r\n\t\t\t\tcfgIntrprtValueKeys)\r\n\t\t};\r\n\t}\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { VisualKeysDict, VisualTypesDict } from '../../visualcomposition/visualDict';\r\nimport { initLDLocalState, gdsfpLD, generateItptFromCompInfo } from '../../generic/generatorFns';\r\nimport { Redirect } from 'react-router';\r\nimport { Component, ReactNode } from 'react';\r\nimport { cleanRouteString } from '../../routing/route-helper-fns';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\n\r\nexport const NavBarWActionsName = \"shnyder/material-design/NavBarWActions\";\r\n\r\nlet cfgIntrprtItptKeys: string[] =\r\n\t[\r\n\t\tVisualKeysDict.inputContainer,\r\n\t\tVisualKeysDict.popOverContent\r\n\t];\r\nlet cfgIntrprtValueKeys: string[] = [\r\n\tVisualKeysDict.headerTxt,\r\n\tVisualKeysDict.routeSend_search,\r\n\tVisualKeysDict.iconName,\r\n\tVisualKeysDict.routeSend_cancel,\r\n\tVisualKeysDict.cssClassName\r\n];\r\nexport type NavBarWActionState = {\r\n\tisDoRedirect: boolean;\r\n\tisDoRedirectCancel: boolean;\r\n\tisRightMenuOpen: boolean;\r\n};\r\n\r\nlet cfgIntrprtKeys: string[] = [...cfgIntrprtItptKeys, ...cfgIntrprtValueKeys];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.headerTxt,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_search,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.popOverContent,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.iconName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_cancel,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cssClassName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\n\r\nexport const NavBarWActionsBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: NavBarWActionsName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport abstract class AbstractNavBarWActions<TStateExtension = {}> extends\r\n\tComponent<LDConnectedState & LDConnectedDispatch & LDOwnProps, NavBarWActionState & LDLocalState & TStateExtension>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | NavBarWActionState & LDLocalState)\r\n\t\t: null | NavBarWActionState & LDLocalState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, cfgIntrprtItptKeys,\r\n\t\t\tcfgIntrprtValueKeys);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvLD\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprotected renderSub = generateItptFromCompInfo.bind(this);\r\n\r\n\tconstructor(props: any, stateExtensionInit: TStateExtension) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tlet navBarStatePart: NavBarWActionState = {\r\n\t\t\tisDoRedirect: false,\r\n\t\t\tisDoRedirectCancel: false,\r\n\t\t\tisRightMenuOpen: false,\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...stateExtensionInit,\r\n\t\t\t...navBarStatePart,\r\n\t\t\t...initLDLocalState(this.cfg, props,\r\n\t\t\t\tcfgIntrprtItptKeys,\r\n\t\t\t\tcfgIntrprtValueKeys)\r\n\t\t};\r\n\t}\r\n\r\n\tonAppBarRightIconMenuClick = () => {\r\n\t\t//will be called on opening and clicking inside the menu\r\n\t}\r\n\tonAppBarSearchBtnClick = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tisDoRedirect: true,\r\n\t\t\tisRightMenuOpen: false\r\n\t\t});\r\n\t}\r\n\r\n\tonCancelClick = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tisDoRedirectCancel: true,\r\n\t\t\tisRightMenuOpen: false\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isDoRedirect, isDoRedirectCancel, localValues } = this.state;\r\n\t\tconst routeSendSearch = localValues.get(VisualKeysDict.routeSend_search);\r\n\t\tlet routeSendCancel = localValues.get(VisualKeysDict.routeSend_cancel);\r\n\t\tif (isDoRedirectCancel && routeSendCancel) {\r\n\t\t\trouteSendCancel = cleanRouteString(routeSendCancel, this.props.routes);\r\n\t\t\tthis.setState({ ...this.state, isDoRedirect: false, isDoRedirectCancel: false });\r\n\t\t\treturn <Redirect to={routeSendCancel} />;\r\n\t\t}\r\n\t\tif (isDoRedirect && routeSendSearch) {\r\n\t\t\tlet route: string = cleanRouteString(routeSendSearch, this.props.routes);\r\n\t\t\t//if (match.params.nextPath === undefined) match.params.nextPath = route;\r\n\t\t\tthis.setState({ ...this.state, isDoRedirect: false, isDoRedirectCancel: false });\r\n\t\t\tconsole.log(\"navBar redirect to: \" + route);\r\n\t\t\treturn <Redirect to={route} />;\r\n\t\t}\r\n\t\treturn this.renderCore();\r\n\t}\r\n\tprotected renderCore(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict, VisualTypesDict } from '../../visualcomposition/visualDict';\r\nimport { initLDLocalState, gdsfpLD } from '../../generic/generatorFns';\r\nimport { Redirect } from 'react-router';\r\nimport { Component, ReactNode } from 'react';\r\nimport { cleanRouteString } from '../../routing/route-helper-fns';\r\nimport { ActionKeysDict, ActionTypesDict, ActionType } from 'components/actions/ActionDict';\r\n\r\nexport const NavProcessAtomName = \"shnyder/material-design/NavProcessAtom\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[\r\n\t\tVisualKeysDict.inputContainer,\r\n\t\tVisualKeysDict.headerTxt,\r\n\t\tVisualKeysDict.cancelTxt,\r\n\t\tVisualKeysDict.confirmTxt,\r\n\t\tVisualKeysDict.routeSend_cancel,\r\n\t\tVisualKeysDict.routeSend_confirm,\r\n\t\tActionKeysDict.action_confirm,\r\n\t\tVisualKeysDict.cssClassName\r\n\t];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.headerTxt,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cancelTxt,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.confirmTxt,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_cancel,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_confirm,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n\t{\r\n\t\tkey: ActionKeysDict.action_confirm,\r\n\t\tvalue: undefined,\r\n\t\tldType: ActionTypesDict.metaExplorerAction\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cssClassName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\nexport const NavProcessAtomBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: NavProcessAtomName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport type NavProcessAtomState = {\r\n\tisDoRedirectConfirm: boolean;\r\n\tisDoRedirectCancel: boolean;\r\n};\r\n\r\nexport abstract class AbstractNavProcessAtom extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, NavProcessAtomState & LDLocalState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | NavProcessAtomState & LDLocalState)\r\n\t\t: null | NavProcessAtomState & LDLocalState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer], [\r\n\t\t\t\tVisualKeysDict.headerTxt,\r\n\t\t\t\tVisualKeysDict.cancelTxt,\r\n\t\t\t\tVisualKeysDict.confirmTxt,\r\n\t\t\t\tVisualKeysDict.routeSend_cancel,\r\n\t\t\t\tVisualKeysDict.routeSend_confirm,\r\n\t\t\t\tActionKeysDict.action_confirm,\r\n\t\t\t\tVisualKeysDict.cssClassName\r\n\t\t\t]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvLD\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tlet navBarStatePart: NavProcessAtomState = {\r\n\t\t\tisDoRedirectCancel: false,\r\n\t\t\tisDoRedirectConfirm: false\r\n\t\t};\r\n\t\tthis.state = {\r\n\t\t\t...navBarStatePart,\r\n\t\t\t...initLDLocalState(this.cfg, props,\r\n\t\t\t\t[VisualKeysDict.inputContainer],\r\n\t\t\t\t[\r\n\t\t\t\t\tVisualKeysDict.headerTxt,\r\n\t\t\t\t\tVisualKeysDict.cancelTxt,\r\n\t\t\t\t\tVisualKeysDict.confirmTxt,\r\n\t\t\t\t\tVisualKeysDict.routeSend_cancel,\r\n\t\t\t\t\tVisualKeysDict.routeSend_confirm,\r\n\t\t\t\t\tActionKeysDict.action_confirm,\r\n\t\t\t\t\tVisualKeysDict.cssClassName\r\n\t\t\t\t])\r\n\t\t};\r\n\t}\r\n\r\n\tonCancelClick = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tisDoRedirectCancel: true\r\n\t\t});\r\n\t}\r\n\r\n\tonConfirmClick = () => {\r\n\t\tlet confirmAction: ActionType = this.state.localValues.get(ActionKeysDict.action_confirm);\r\n\t\tif (confirmAction) {\r\n\t\t\tthis.props.dispatchLdAction(confirmAction.ldId, confirmAction.ldType, confirmAction.payload);\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tisDoRedirectConfirm: true\r\n\t\t});\r\n\t}\r\n\r\n\trender(): ReactNode {\r\n\t\tconst { isDoRedirectCancel, isDoRedirectConfirm, localValues } = this.state;\r\n\t\tlet routeSendCancel: string = localValues.get(VisualKeysDict.routeSend_cancel);\r\n\t\tlet routeSendConfirm = localValues.get(VisualKeysDict.routeSend_confirm);\r\n\t\tconst cancelTxt = localValues.get(VisualKeysDict.cancelTxt);\r\n\t\tconst confirmTxt = localValues.get(VisualKeysDict.confirmTxt);\r\n\t\tconst headerText = localValues.get(VisualKeysDict.headerTxt);\r\n\t\tif (isDoRedirectCancel && routeSendCancel) {\r\n\t\t\trouteSendCancel = cleanRouteString(routeSendCancel, this.props.routes);\r\n\t\t\treturn <Redirect to={routeSendCancel} />;\r\n\t\t}\r\n\t\tif (isDoRedirectConfirm && routeSendConfirm) {\r\n\t\t\trouteSendConfirm = cleanRouteString(routeSendConfirm, this.props.routes);\r\n\t\t\treturn <Redirect to={routeSendConfirm} />;\r\n\t\t}\r\n\t\tconst isHideBottom: boolean = !routeSendConfirm\r\n\t\t\t&& !cancelTxt && !confirmTxt;\r\n\t\treturn this.renderCore(headerText, cancelTxt, confirmTxt, isHideBottom);\r\n\t}\r\n\r\n\tprotected renderCore(headerText: string, cancelTxt: string, confirmTxt: string, isHideBottom: boolean): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict, VisualTypesDict } from '../../visualcomposition/visualDict';\r\nimport { initLDLocalState, gdsfpLD, generateItptFromCompInfo } from '../../generic/generatorFns';\r\nimport { Component, ReactNode } from 'react';\r\n\r\nexport const NavSearchBarName = \"shnyder/material-design/NavSearchBar\";\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.inputContainer, VisualKeysDict.searchText, VisualKeysDict.routeSend_back, VisualKeysDict.cssClassName];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.searchText,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.routeSend_back,\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added,\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.cssClassName,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t},\r\n\t{\r\n\t\tkey: VisualKeysDict.searchText,\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t}\r\n];\r\nexport const NavSearchBarBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: NavSearchBarName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\nexport type NavSearchBarState = LDLocalState & {\r\n\tsearchValue: string;\r\n\trouteSendBack: string;\r\n\tisDoRedirect: boolean;\r\n}\r\n\r\nexport abstract class AbstractNavSearchBar extends Component<\r\nLDConnectedState & LDConnectedDispatch & LDOwnProps,\r\nNavSearchBarState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: NavSearchBarState): null | NavSearchBarState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer],\r\n\t\t\t[VisualKeysDict.searchText, VisualKeysDict.routeSend_back, VisualKeysDict.cssClassName, UserDefDict.outputKVMapKey]);\r\n\t\tif (!rvLD) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet rvNew = { ...rvLD, };\r\n\t\tlet searchValue = rvNew.localValues.get(VisualKeysDict.searchText);\r\n\t\tlet routeSendBack = rvNew.localValues.get(VisualKeysDict.routeSend_back);\r\n\t\treturn { ...rvNew, searchValue, routeSendBack, isDoRedirect: prevState.isDoRedirect };\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprotected renderInputContainer = generateItptFromCompInfo.bind(this, VisualKeysDict.inputContainer);\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tconst ldState = initLDLocalState(this.cfg, props,\r\n\t\t\t[VisualKeysDict.inputContainer],\r\n\t\t\t[VisualKeysDict.searchText, VisualKeysDict.routeSend_back, VisualKeysDict.cssClassName, UserDefDict.outputKVMapKey]);\r\n\t\tthis.state = {\r\n\t\t\tsearchValue: ldState.localValues.get(VisualKeysDict.searchText),\r\n\t\t\trouteSendBack: ldState.localValues.get(VisualKeysDict.routeSend_back),\r\n\t\t\tisDoRedirect: false,\r\n\t\t\t...ldState\r\n\t\t};\r\n\t}\r\n\r\n\tonSearchChange = (evtVal) => {\r\n\t\tthis.setState({ ...this.state, searchValue: evtVal });\r\n\t\tconst outputKVMap = this.state.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\tif (!outputKVMap) return;\r\n\t\tlet outSearchKv: IKvStore = {\r\n\t\t\tkey: VisualKeysDict.searchText,\r\n\t\t\tvalue: evtVal,\r\n\t\t\tldType: LDDict.Text\r\n\t\t};\r\n\t\t//TODO: it might be a good idea to debounce before updating the application state\r\n\t\tthis.props.dispatchKvOutput([outSearchKv], this.props.ldTokenString, outputKVMap);\r\n\t}\r\n\tonBackBtnClick = () => {\r\n\t\tif (this.state.routeSendBack === undefined || this.state.routeSendBack === null) return;\r\n\t\tthis.setState({ ...this.state, isDoRedirect: true });\r\n\t}\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","/**\r\n * checks juggling if any of the parameters is null or undefined\r\n * @param inputs the input parameters\r\n */\r\nexport const checkAllFilled = (...inputs): boolean => {\r\n\tif (!inputs) return false;\r\n\tfor (let i = 0; i < inputs.length; i++) {\r\n\t\tconst a = inputs[i];\r\n\t\tif (a === null || a === undefined) return false;\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nexport const arrayMove = (arr, oldIdx: number, newIdx: number) => {\r\n\twhile (oldIdx < 0) {\r\n\t\toldIdx += arr.length;\r\n\t}\r\n\twhile (newIdx < 0) {\r\n\t\tnewIdx += arr.length;\r\n\t}\r\n\tif (newIdx >= arr.length) {\r\n\t\tvar k = newIdx - arr.length + 1;\r\n\t\twhile (k--) {\r\n\t\t\tarr.push(undefined);\r\n\t\t}\r\n\t}\r\n\tarr.splice(newIdx, 0, arr.splice(oldIdx, 1)[0]);\r\n\treturn arr; // for testing purposes\r\n};\r\n","import { LDDict } from 'ldaccess/LDDict';\r\nimport { IKvStore } from 'ldaccess/ikvstore';\r\nimport { BlueprintConfig, IBlueprintItpt, OutputKVMap } from 'ldaccess/ldBlueprint';\r\nimport { ILDOptions } from 'ldaccess/ildoptions';\r\nimport { LDConnectedState, LDConnectedDispatch, LDOwnProps, LDLocalState } from 'appstate/LDProps';\r\nimport { UserDefDict } from 'ldaccess/UserDefDict';\r\nimport { VisualKeysDict, VisualTypesDict } from '../../visualcomposition/visualDict';\r\n\r\nimport { generateItptFromCompInfo, gdsfpLD, initLDLocalState } from '../../generic/generatorFns';\r\nimport { checkAllFilled } from 'GeneralUtils';\r\nimport { Component, ReactNode } from 'react';\r\n\r\nexport const ICON_URLS: string[] = [\r\n\t\"IconURL_1\",\r\n\t\"IconURL_2\",\r\n\t\"IconURL_3\",\r\n\t\"IconURL_4\",\r\n\t\"IconURL_5\",\r\n];\r\nexport const ICON_URLS_DISABLED: string[] = [\r\n\t\"IconURL_1_Disabled\",\r\n\t\"IconURL_2_Disabled\",\r\n\t\"IconURL_3_Disabled\",\r\n\t\"IconURL_4_Disabled\",\r\n\t\"IconURL_5_Disabled\"\r\n];\r\nexport const ROUTES_SEND: string[] = [\r\n\t\"RouteSend_1\",\r\n\t\"RouteSend_2\",\r\n\t\"RouteSend_3\",\r\n\t\"RouteSend_4\",\r\n\t\"RouteSend_5\"\r\n];\r\n\r\nexport const LABELS: string[] = [\r\n\t\"Labels_1\",\r\n\t\"Labels_2\",\r\n\t\"Labels_3\",\r\n\t\"Labels_4\",\r\n\t\"Labels_5\"\r\n];\r\n\r\nexport const BOTTOMNAV_VALUE_FIELDS: string[] = [\r\n\t...ICON_URLS,\r\n\t...ICON_URLS_DISABLED,\r\n\t...ROUTES_SEND,\r\n\t...LABELS,\r\n\tVisualKeysDict.cssClassName,\r\n\tUserDefDict.outputKVMapKey\r\n];\r\n\r\nexport const CHANGED_ROUTE_OUTPUT = \"ChangedRoute\";\r\n\r\nexport const BottomNavigationName = \"shnyder/material-design/BottomNavigation\";\r\nexport const TopNavigationName = \"shnyder/material-design/TopNavigation\";\r\n\r\nlet cfgIntrprtKeys: string[] =\r\n\t[VisualKeysDict.inputContainer];\r\nlet initialKVStores: IKvStore[] = [\r\n\t{\r\n\t\tkey: VisualKeysDict.inputContainer,\r\n\t\tvalue: undefined,\r\n\t\tldType: UserDefDict.intrprtrClassType\r\n\t}\r\n];\r\n\r\nfor (let i = 0; i < ICON_URLS.length; i++) {\r\n\tcfgIntrprtKeys.push(ICON_URLS[i]);\r\n\tcfgIntrprtKeys.push(ICON_URLS_DISABLED[i]);\r\n\tcfgIntrprtKeys.push(ROUTES_SEND[i]);\r\n\tcfgIntrprtKeys.push(LABELS[i]);\r\n\tinitialKVStores.push({\r\n\t\tkey: ICON_URLS[i],\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t});\r\n\tinitialKVStores.push({\r\n\t\tkey: ICON_URLS_DISABLED[i],\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t});\r\n\tinitialKVStores.push({\r\n\t\tkey: ROUTES_SEND[i],\r\n\t\tvalue: undefined,\r\n\t\tldType: VisualTypesDict.route_added\r\n\t});\r\n\tinitialKVStores.push({\r\n\t\tkey: LABELS[i],\r\n\t\tvalue: undefined,\r\n\t\tldType: LDDict.Text\r\n\t});\r\n}\r\ncfgIntrprtKeys.push(VisualKeysDict.cssClassName);\r\ninitialKVStores.push({\r\n\tkey: VisualKeysDict.cssClassName,\r\n\tvalue: undefined,\r\n\tldType: LDDict.Text\r\n});\r\n\r\ninitialKVStores.push({\r\n\tkey: CHANGED_ROUTE_OUTPUT,\r\n\tvalue: undefined,\r\n\tldType: VisualTypesDict.route_added\r\n});\r\n\r\nexport const BottomNavW5ChoicesBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: BottomNavigationName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\nexport const TopNavW5ChoicesBpCfg: BlueprintConfig = {\r\n\tsubItptOf: null,\r\n\tnameSelf: TopNavigationName,\r\n\tinitialKvStores: initialKVStores,\r\n\tinterpretableKeys: cfgIntrprtKeys,\r\n\tcrudSkills: \"cRud\"\r\n};\r\n\r\nexport type BottomNavState = LDLocalState & {\r\n\tisInitial: boolean;\r\n\ttabIdx: number;\r\n\ticonEnabledURLs: string[];\r\n\ticonDisabledURLs: string[];\r\n\troutes: string[];\r\n\tisGenerateAtPositions: boolean[];\r\n\tlabels: string[];\r\n\thasTabChanged: boolean;\r\n\tnumTabs: number;\r\n}\r\n\r\nexport abstract class AbstractBottomNavigation extends Component<LDConnectedState & LDConnectedDispatch & LDOwnProps, BottomNavState>\r\n\timplements IBlueprintItpt {\r\n\r\n\tstatic getDerivedStateFromProps(\r\n\t\tnextProps: LDConnectedState & LDConnectedDispatch & LDOwnProps,\r\n\t\tprevState: null | BottomNavState & LDLocalState)\r\n\t\t: null | BottomNavState & LDLocalState {\r\n\t\tlet rvLD = gdsfpLD(\r\n\t\t\tnextProps, prevState, [VisualKeysDict.inputContainer], BOTTOMNAV_VALUE_FIELDS);\r\n\t\tlet rvNew;\r\n\t\tif (!rvLD) {\r\n\t\t\tif (prevState.isInitial) {\r\n\t\t\t\trvNew = prevState;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\trvNew = { ...rvLD, };\r\n\t\t}\r\n\t\tconst iconEnabledURLs: string[] = [];\r\n\t\tconst iconDisabledURLs: string[] = [];\r\n\t\tconst routes: string[] = [];\r\n\t\tconst isGenerateAtPositions: boolean[] = [];\r\n\t\tconst labels: string[] = [];\r\n\t\t//handle KVs\r\n\t\tfor (let idx = 0; idx < prevState.numTabs; idx++) {\r\n\t\t\ticonEnabledURLs[idx] = rvNew.localValues.get(ICON_URLS[idx]);\r\n\t\t\ticonDisabledURLs[idx] = rvNew.localValues.get(ICON_URLS_DISABLED[idx]);\r\n\t\t\troutes[idx] = rvNew.localValues.get(ROUTES_SEND[idx]);\r\n\t\t\tlabels[idx] = rvNew.localValues.get(LABELS[idx]);\r\n\t\t\tisGenerateAtPositions[idx] = checkAllFilled(\r\n\t\t\t\ticonEnabledURLs[idx],\r\n\t\t\t\ticonDisabledURLs[idx],\r\n\t\t\t\troutes[idx],\r\n\t\t\t\tlabels[idx]\r\n\t\t\t);\r\n\t\t}\r\n\t\t//handle routes if some tabs are not entirely filled\r\n\t\tlet tabIdx = prevState.tabIdx;\r\n\t\tif (nextProps.routes) {\r\n\t\t\tconst { match } = nextProps.routes;\r\n\t\t\tif (!match) {\r\n\t\t\t\tconsole.error(\"BottomNavigation: No route information passed to BottomNavigation, can't switch tabs\");\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t//if (!match.params) match.params = { nextPath: null };\r\n\r\n\t\t\tlet tabIdxCounter = 0;\r\n\t\t\tif (!prevState.hasTabChanged || prevState.isInitial) {\r\n\t\t\t\tlet lastPath = location.pathname.replace(match.path, \"\");\r\n\t\t\t\tlet isOnTopLayer = false;\r\n\t\t\t\tif (match.path === '/') {\r\n\t\t\t\t\tisOnTopLayer = true;\r\n\t\t\t\t}\r\n\t\t\t\t//lastPath = lastPath.startsWith(\"/\") ? lastPath.substr(1) : lastPath;\r\n\t\t\t\t//lastPath = lastPath.split(\"/\")[0];\r\n\t\t\t\tfor (let idx = 0; idx < prevState.numTabs; idx++) {\r\n\t\t\t\t\tif (lastPath === routes[idx] || (isOnTopLayer && ('/' + lastPath === routes[idx]))) tabIdx = tabIdxCounter;\r\n\t\t\t\t\tif (isGenerateAtPositions[idx]) tabIdxCounter++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...prevState, ...rvNew,\r\n\t\t\tisInitial: false,\r\n\t\t\ttabIdx,\r\n\t\t\ticonEnabledURLs,\r\n\t\t\ticonDisabledURLs,\r\n\t\t\tlabels,\r\n\t\t\troutes,\r\n\t\t\tisGenerateAtPositions\r\n\t\t};\r\n\t}\r\n\r\n\tcfg: BlueprintConfig;\r\n\toutputKVMap: OutputKVMap;\r\n\tconsumeLDOptions: (ldOptions: ILDOptions) => any;\r\n\tinitialKvStores: IKvStore[];\r\n\r\n\tprotected renderInputContainer = generateItptFromCompInfo.bind(this, VisualKeysDict.inputContainer);\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.cfg = (this.constructor[\"cfg\"] as BlueprintConfig);\r\n\t\tthis.state = {\r\n\t\t\tisInitial: true,\r\n\t\t\ttabIdx: 0,\r\n\t\t\tnumTabs: 5,\r\n\t\t\ticonEnabledURLs: [],\r\n\t\t\ticonDisabledURLs: [],\r\n\t\t\tlabels: [],\r\n\t\t\troutes: [],\r\n\t\t\tisGenerateAtPositions: [],\r\n\t\t\thasTabChanged: true,\r\n\t\t\t...initLDLocalState(this.cfg, props, [VisualKeysDict.inputContainer], BOTTOMNAV_VALUE_FIELDS)\r\n\t\t};\r\n\t}\r\n\r\n\tonTabChanged = (tabIdx) => {\r\n\t\tif (this.state.tabIdx !== tabIdx) {\r\n\t\t\tthis.setState({ ...this.state, tabIdx, hasTabChanged: true });\r\n\t\t}\r\n\t\tconst outRouteKV: IKvStore = {\r\n\t\t\tkey: CHANGED_ROUTE_OUTPUT,\r\n\t\t\tvalue: undefined,\r\n\t\t\tldType: VisualTypesDict.route_added\r\n\t\t};\r\n\t\tconst outputKVMap = this.state.localValues.get(UserDefDict.outputKVMapKey);\r\n\t\tif (!outputKVMap) return;\r\n\t\tthis.props.dispatchKvOutput([outRouteKV], this.props.ldTokenString, outputKVMap);\r\n\t}\r\n\r\n\trender(): ReactNode {\r\n\t\tthrow new Error(\"Method not implemented in abstract class\");\r\n\t}\r\n}\r\n","import { IKvStore } from \"ldaccess/ikvstore\";\r\nimport { ldBlueprint, BlueprintConfig } from \"ldaccess/ldBlueprint\";\r\nimport { UserDefDict } from \"ldaccess/UserDefDict\";\r\nimport { VisualTypesDict } from \"components/visualcomposition/visualDict\";\r\nimport { AbstractDataTransformer } from \"datatransformation/abstractDataTransformer\";\r\nimport { itptKeysFromInputKvs } from \"ldaccess/ldUtils\";\r\n\r\nconst transfOutputKey = UserDefDict.outputData;\r\n\r\nclass DataTypeAssembler extends AbstractDataTransformer {\r\n\r\n\t/**\r\n\t * this function assembles input fields to a single flat new datatype\r\n\t * @param inputParams\r\n\t * @param outputKvStores\r\n\t */\r\n\tprotected mappingFunction(\r\n\t\tinputParams: Map<string, IKvStore>,\r\n\t\toutputKvStores: Map<string, IKvStore>): IKvStore[] {\r\n\t\tlet rv = [];\r\n\r\n\t\tconst newOutputObj = {\r\n\t\t};\r\n\r\n\t\tinputParams.forEach((val) => {\r\n\t\t\tnewOutputObj[val.key] = val.value;\r\n\t\t});\r\n\r\n\t\t//output var\r\n\t\tlet outputValArr = [newOutputObj];\r\n\t\tconst transfOutputKV = outputKvStores.get(transfOutputKey);\r\n\t\ttransfOutputKV.value = outputValArr;\r\n\t\trv = [transfOutputKV];\r\n\t\treturn rv;\r\n\t}\r\n}\r\n\r\nexport function flatDataTypeAssemblerFactory(inputKvStores: IKvStore[], nameSelf: string) {\r\n\r\n\tconst ActionCompOutputKVs: IKvStore[] = [\r\n\t\t{\r\n\t\t\tkey: transfOutputKey,\r\n\t\t\tvalue: undefined,\r\n\t\t\tldType: VisualTypesDict.compactInfoElement\r\n\t\t}\r\n\t];\r\n\tconst initialKvStores: IKvStore[] = [\r\n\t\t...inputKvStores,\r\n\t\t...ActionCompOutputKVs\r\n\t];\r\n\r\n\tconst interpretableKeys: string[] = itptKeysFromInputKvs(inputKvStores);\r\n\r\n\tlet bpCfg: BlueprintConfig = {\r\n\t\tsubItptOf: null,\r\n\t\tnameSelf,\r\n\t\tinitialKvStores,\r\n\t\tinterpretableKeys,\r\n\t\tcrudSkills: \"cRUd\"\r\n\t};\r\n\r\n\tlet DataTypeAssemblerExt = class extends DataTypeAssembler {\r\n\t\titptKeys = interpretableKeys;\r\n\t\toutputKvStores = ActionCompOutputKVs;\r\n\t};\r\n\treturn ldBlueprint(bpCfg)(DataTypeAssemblerExt);\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nlet imageFormat: string = 'image/jpeg';\r\nexport enum DOMCameraStateEnum {\r\n\tisLoading = 2,\r\n\tisError = 3,\r\n\tisVideoing = 4,\r\n}\r\n\r\nexport interface DOMCameraState {\r\n\tcurStep: DOMCameraStateEnum;\r\n\tvidDeviceList: MediaDeviceInfo[];\r\n\tcurId: string;\r\n}\r\n\r\nexport interface DOMCameraProps {\r\n\tshowControls: boolean;\r\n\tonImageCaptured?: (imgURL: string) => void;\r\n\tonVideoDisplayReady?: (video: HTMLVideoElement) => void;\r\n\tonVideoDisplayRemoved?: () => void;\r\n}\r\n\r\nexport class DOMCamera extends Component<DOMCameraProps, DOMCameraState> {\r\n\tvideoDispl: HTMLVideoElement;\r\n\tctx: CanvasRenderingContext2D;\r\n\tcanvas: HTMLCanvasElement;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { curStep: DOMCameraStateEnum.isLoading, vidDeviceList: null, curId: null };\r\n\t}\r\n\r\n\tstartStream(strDeviceId: string) {\r\n\t\tif (!this.videoDispl || !strDeviceId) return;\r\n\t\tif (this.videoDispl.srcObject) return;\r\n\t\tnavigator.mediaDevices.getUserMedia({ video: { deviceId: strDeviceId }, audio: false })\r\n\t\t\t.then((stream) => {\r\n\t\t\t\t//this.setState({ stream });\r\n\t\t\t\tif (!this.videoDispl.paused) return;\r\n\t\t\t\tthis.videoDispl.setAttribute(\"autoplay\", 'true');\r\n\t\t\t\tthis.videoDispl.setAttribute('muted', 'true');\r\n\t\t\t\tthis.videoDispl.setAttribute('playsinline', 'true');\r\n\t\t\t\tthis.videoDispl.srcObject = stream;\r\n\t\t\t\tthis.videoDispl.play();\r\n\t\t\t\tif (this.props.onVideoDisplayReady) {\r\n\t\t\t\t\tthis.props.onVideoDisplayReady(this.videoDispl);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t\tthis.setStateToError();\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.state.curStep !== DOMCameraStateEnum.isError)\r\n\t\t\tthis.setState({ curStep: DOMCameraStateEnum.isLoading, vidDeviceList: null, curId: null });\r\n\t\tif (this.videoDispl) this.videoDispl.pause();\r\n\t\tif (this.props.onVideoDisplayRemoved) {\r\n\t\t\tthis.props.onVideoDisplayRemoved();\r\n\t\t}\r\n\t\tthis.videoDispl = null;\r\n\t}\r\n\r\n\tsetStateToError() {\r\n\t\tthis.setState({ ...this.state, curStep: DOMCameraStateEnum.isError });\r\n\t\tif (this.props.onVideoDisplayRemoved) {\r\n\t\t\tthis.props.onVideoDisplayRemoved();\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tif (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\r\n\t\t\tthis.setStateToError();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tnavigator.mediaDevices.enumerateDevices()\r\n\t\t\t.then((devices) => {\r\n\t\t\t\tlet vidInputList: MediaDeviceInfo[] = [];\r\n\t\t\t\tdevices.forEach((device) => {\r\n\t\t\t\t\tif (device.kind === \"videoinput\")\r\n\t\t\t\t\t\tvidInputList.push(device);\r\n\t\t\t\t});\r\n\t\t\t\tif (vidInputList.length === 0) {\r\n\t\t\t\t\tthis.setStateToError();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst deviceId = vidInputList[0].deviceId;\r\n\t\t\t\t\tthis.setState({ curId: deviceId, curStep: DOMCameraStateEnum.isVideoing, vidDeviceList: vidInputList });\r\n\t\t\t\t\tthis.startStream(deviceId);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(() => {\r\n\t\t\t\tthis.setStateToError();\r\n\t\t\t\treturn;\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tgetScreenshotAsDataURL() {\r\n\t\tconst canvas = this.getCanvas();\r\n\t\treturn canvas && canvas.toDataURL(imageFormat);\r\n\t}\r\n\r\n\tgetScreenshotAsBlob() {\r\n\t\tconst canvas = this.getCanvas();\r\n\t\treturn canvas && canvas.toBlob((a) => {\r\n\t\t\tconst b = window.URL.createObjectURL(a);\r\n\t\t\tthis.props.onImageCaptured(b);\r\n\t\t});\r\n\t}\r\n\r\n\tgetCanvas() {\r\n\t\tif (!this.videoDispl.videoHeight) return null;\r\n\r\n\t\tif (!this.ctx) {\r\n\t\t\tconst canvasElem = document.createElement('canvas');\r\n\t\t\tconst aspectRatio = this.videoDispl.videoWidth / this.videoDispl.videoHeight;\r\n\r\n\t\t\tcanvasElem.width = this.videoDispl.clientWidth;\r\n\t\t\tcanvasElem.height = this.videoDispl.clientWidth / aspectRatio;\r\n\r\n\t\t\tthis.canvas = canvasElem;\r\n\t\t\tthis.ctx = canvasElem.getContext('2d');\r\n\t\t}\r\n\r\n\t\tconst { ctx, canvas } = this;\r\n\t\tctx.drawImage(this.videoDispl, 0, 0, canvas.width, canvas.height);\r\n\r\n\t\treturn canvas;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { showControls } = this.props;\r\n\t\tconst { curStep, curId } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"dom-camera\">\r\n\t\t\t\t{(() => {\r\n\t\t\t\t\tswitch (curStep) {\r\n\t\t\t\t\t\tcase DOMCameraStateEnum.isError:\r\n\t\t\t\t\t\t\treturn <div>placeHolder for videocam-error</div>;\r\n\t\t\t\t\t\t\t/*<FontIcon className=\"vid-big-icons\" value='videocam_off' />;*/\r\n\t\t\t\t\t\tcase DOMCameraStateEnum.isLoading:\r\n\t\t\t\t\t\t\treturn <div>placeholder for videocam-loading</div>;\r\n\t\t\t\t\t\t\t/*<FontIcon className=\"vid-big-icons\" value='videocam' />;*/\r\n\t\t\t\t\t\tcase DOMCameraStateEnum.isVideoing:\r\n\t\t\t\t\t\t\treturn <>\r\n\t\t\t\t\t\t\t\t<video ref={(video) => {\r\n\t\t\t\t\t\t\t\t\tthis.videoDispl = video;\r\n\t\t\t\t\t\t\t\t\tthis.startStream(curId);\r\n\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t{showControls ?\r\n\t\t\t\t\t\t\t\t\t<div className=\"controls-container\">\r\n\t\t\t\t\t\t\t\t\t\t{/* icon='camera' floating accent  */}\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (this.props.onImageCaptured) this.getScreenshotAsBlob();\r\n\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t: null}\r\n\t\t\t\t\t\t\t</>;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t}\r\n\t\t\t\t})()}\r\n\t\t\t</div >\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface FourOhFournomatchProps {\r\n\troutes: RouteComponentProps<{}>;\r\n}\r\n\r\nexport class FourOhFournomatch extends Component<FourOhFournomatchProps> {\r\n\r\n\tconstructor(props: FourOhFournomatchProps) {\r\n\t\tsuper(props);\r\n\t}\r\n\trender() {\r\n\t\treturn <div>\r\n\t\t\t<h2>404</h2>\r\n\t\t\t<p>Sorry, but we didn't find anything here</p>\r\n\t\t\t<p>\r\n\t\t\t\t<span>Were you looking for a demo? Have a look at these two</span><br/>\r\n\t\t\t\t<Link to=\"/tinyentrepreneur\">Tiny entrepreneur</Link><br/>\r\n\t\t\t\t<Link to=\"/generaldemo\">a general demo</Link>\r\n\t\t\t</p>\r\n\t\t</div>;\r\n\t}\r\n}\r\n","export enum LDConsts {\r\n\t//json-ld\r\n\ttype = \"@type\",\r\n\tid = \"@id\",\r\n\tlang = \"@lang\",\r\n\r\n\t//hydra\r\n\tisA = \"isA\",\r\n\tiri = \"iri\",\r\n}\r\n","import {LDDict} from './LDDict';\r\n\r\nexport type LDBaseDataType = LDDict.Boolean | LDDict.Integer | LDDict.Double | LDDict.Text | LDDict.Date | LDDict.DateTime;\r\n\r\nexport let ldBaseDataTypeList = [LDDict.Boolean, LDDict.Integer, LDDict.Double, LDDict.Text, LDDict.Date, LDDict.DateTime];\r\n","import { IKvStore } from \"ldaccess/ikvstore\";\r\n\r\nexport let singleHyperMediaToKvStores = (inputHM: any): IKvStore[] => {\r\n\tvar kvStoreArray: IKvStore[] = new Array<IKvStore>();\r\n\tfor (var key in inputHM) {\r\n\t\tif (inputHM.hasOwnProperty(key)) {\r\n\t\t\tlet value = inputHM[key];\r\n\t\t\t//TODO: here would be a possible point to add a search for possible types based on the key\r\n\t\t\tlet ldType = null;\r\n\t\t\tlet newKvStore: IKvStore = {\r\n\t\t\t\tkey: key,\r\n\t\t\t\tvalue: value,\r\n\t\t\t\tldType: ldType,\r\n\t\t\t};\r\n\t\t\tkvStoreArray.push(newKvStore);\r\n\t\t}\r\n\t}\r\n\treturn kvStoreArray;\r\n};\r\n\r\n/*\r\nexport let multiHyperMediaToKvStores = (inputHMs: IHypermediaContainer): IKvStore[] => {\r\n\tlet kvStoreArray: IKvStore[] = new Array<IKvStore>();\r\n\tconsole.log(inputHMs);\r\n\treturn kvStoreArray;\r\n};\r\n*/\r\n","import { IKvStore } from \"../ikvstore\";\r\n\r\nexport const parseBoolean = (inputKv: IKvStore): boolean => {\r\n\tif (!inputKv) return false;\r\n\tlet input = inputKv.value;\r\n\treturn input === undefined || input === null ? false : input;\r\n};\r\nexport const parseText = (inputKv: IKvStore): string => {\r\n\tif (!inputKv) return \"\";\r\n\tlet input = inputKv.value;\r\n\treturn input ? input : '';\r\n};\r\nexport const parseDate = (inputKv: IKvStore): Date => {\r\n\tif (!inputKv) return new Date();\r\n\tlet input = inputKv.value;\r\n\tif (!input) return new Date();\r\n\ttry {\r\n\t\treturn new Date(Date.parse(input));\r\n\t} catch (error) {\r\n\t\treturn input;\r\n\t}\r\n};\r\nexport const parseTime = (inputKv: IKvStore): Date => {\r\n\tif (!inputKv) return new Date();\r\n\tlet input = inputKv.value;\r\n\treturn input ? input : new Date();\r\n};\r\nexport const parseNumber = (inputKv: IKvStore): number => {\r\n\tif (!inputKv) return 0;\r\n\tlet input = inputKv.value;\r\n\treturn input ? input : 0;\r\n};\r\n/*export const parseLabel = (inputKv, descrKv: IKvStore): string => {\r\n\tif (descrKv) {\r\n\t\tif (descrKv.ldType === LDDict.Text && descrKv.value !== null && descrKv.value !== undefined) {\r\n\t\t\treturn descrKv.value;\r\n\t\t}\r\n\t}\r\n\tif (!inputKv) return \"\";\r\n\tlet input = inputKv.key;\r\n\treturn input ? input : '';\r\n};\r\n*/\r\n","import { IKvStore } from \"../ikvstore\";\r\nimport { LDDict } from \"../LDDict\";\r\nimport { VisualKeysDict, VisualTypesDict } from \"components/visualcomposition/visualDict\";\r\n\r\n/**\r\n * type checking, which largely ignores unset types but enforces type mapping setup for existing types\r\n * @param inputKv the input KvStore\r\n * @param targetKv the target KvStore\r\n */\r\nexport const isInputValueValidFor: (inputKv: IKvStore, targetKv: IKvStore) => boolean\r\n\t= (inputKv, targetKv) => {\r\n\t\tif (inputKv.ldType && targetKv.ldType) {\r\n\t\t\tif (inputKv.ldType !== targetKv.ldType) {\r\n\t\t\t\tconst inputMatrixKey = typeMatrixKeyMap.get(inputKv.ldType);\r\n\t\t\t\tconst targetMatrixKey = typeMatrixKeyMap.get(targetKv.ldType);\r\n\t\t\t\tif (inputMatrixKey === undefined || targetMatrixKey === undefined) return false;\r\n\t\t\t\treturn typeMatrix[inputMatrixKey][targetMatrixKey];\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\nexport const typeMatrixKeyMap: Map<string, number> = new Map();\r\ntypeMatrixKeyMap.set(LDDict.Text, 0);\r\ntypeMatrixKeyMap.set(VisualTypesDict.route_added, 1);\r\ntypeMatrixKeyMap.set(LDDict.URL, 2);\r\n\r\n//format: [inputIdx][targetIdx]\r\nexport const typeMatrix: boolean[][] = [\r\n\t[true, true, true],\r\n\t[true, true, false],\r\n\t[true, false, true]\r\n];\r\n\r\nexport function getLDPrototypeOf(typeName: string): object {\r\n\tif (!ldPrototypeMap.has(typeName)) return {};\r\n\treturn ldPrototypeMap.get(typeName);\r\n}\r\n\r\nexport const ldPrototypeMap: Map<string, object> = new Map();\r\nldPrototypeMap.set(VisualTypesDict.compactInfoElement,\r\n\t{\r\n\t\t[VisualKeysDict.primaryItpt]: null,\r\n\t\t[VisualKeysDict.secondaryItpt]: null,\r\n\t\t[VisualKeysDict.headerTxt]: null,\r\n\t\t[VisualKeysDict.subHeaderTxt]: null\r\n\t}\r\n);\r\n","\r\nexport * from './apis';\r\nexport * from './appconfig';\r\nexport * from './appstate';\r\nexport * from './components';\r\nexport * from './datatransformation';\r\nexport * from './defaults';\r\nexport * from './ld-react-redux-connect';\r\nexport * from './ldaccess';\r\nexport * from './modding';\r\nexport * from './sidefx';\r\n\r\nexport * from './GeneralUtils';\r\nexport * from './approot';\r\nexport * from './ldapproot';\r\n//var test : Observable<string> = Observable.of<string>();\r\n\r\n//if an error pops up here, check if the location of JSX.Element is something like '@types/some_module/node_modules/react\r\n/*var approot: JSX.Element = <AppRoot />;\r\nrender(\r\n\tapproot\r\n\t, document.getElementById('app'));*/\r\n"],"sourceRoot":""}